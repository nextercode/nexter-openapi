---
components:
  schemas:
    account:
      properties:
        business_profile:
          anyOf:
          - "$ref": "#/components/schemas/account_business_profile"
          description: Optional information related to the business.
          nullable: true
        business_type:
          description: The business type. Can be `individual` or `company`.
          maxLength: 5000
          nullable: true
          type: string
        capabilities:
          "$ref": "#/components/schemas/account_capabilities"
        charges_enabled:
          description: Whether the account can create live charges.
          type: boolean
        company:
          "$ref": "#/components/schemas/legal_entity_company"
        country:
          description: The account's country.
          maxLength: 5000
          type: string
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        default_currency:
          description: Three-letter ISO currency code representing the default currency
            for the account. This must be a currency that [Nexter supports in the
            account's country](https://nexter.io/docs/payouts).
          maxLength: 5000
          type: string
        details_submitted:
          description: Whether account details have been submitted. Standard accounts
            cannot receive payouts before this is true.
          type: boolean
        email:
          description: The primary user's email address.
          maxLength: 5000
          nullable: true
          type: string
        external_accounts:
          description: External accounts (bank accounts and debit cards) currently
            attached to this account
          properties:
            data:
              description: The list contains all external accounts that have been
                attached to the Nexter account. These may be bank accounts or cards.
              items:
                anyOf:
                - "$ref": "#/components/schemas/bank_account"
                - "$ref": "#/components/schemas/card"
                title: Polymorphic
              type: array
            has_more:
              description: True if this list has another page of items after this
                one that can be fetched.
              type: boolean
            object:
              description: String representing the object's type. Objects of the same
                type share the same value. Always has the value `list`.
              enum:
              - list
              type: string
            url:
              description: The URL where this list can be accessed.
              maxLength: 5000
              type: string
          required:
          - data
          - has_more
          - object
          - url
          title: ExternalAccountList
          type: object
          x-expandableFields:
          - data
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        individual:
          "$ref": "#/components/schemas/person"
        metadata:
          additionalProperties:
            maxLength: 500
            type: string
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - account
          type: string
        payouts_enabled:
          description: Whether Nexter can send payouts to this account.
          type: boolean
        requirements:
          "$ref": "#/components/schemas/account_requirements"
        settings:
          anyOf:
          - "$ref": "#/components/schemas/account_settings"
          description: Account options for customizing how the account functions within
            Nexter.
          nullable: true
        tos_acceptance:
          "$ref": "#/components/schemas/account_tos_acceptance"
        type:
          description: The Nexter account type. Can be `standard`, `express`, or `custom`.
          maxLength: 5000
          type: string
      required:
      - id
      - object
      title: Account
      type: object
      x-expandableFields:
      - business_profile
      - capabilities
      - company
      - external_accounts
      - individual
      - requirements
      - settings
      - tos_acceptance
      x-resourceId: account
    account_branding_settings:
      properties:
        icon:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/file"
          description: "(ID of a [file upload](https://nexter.io/docs/guides/file-upload))
            An icon for the account. Must be square and at least 128px x 128px."
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/file"
        logo:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/file"
          description: "(ID of a [file upload](https://nexter.io/docs/guides/file-upload))
            A logo for the account that will be used in Checkout instead of the icon
            and without the account's name next to it if provided. Must be at least
            128px x 128px."
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/file"
        primary_color:
          description: A CSS hex color value representing the primary branding color
            for this account
          maxLength: 5000
          nullable: true
          type: string
      title: AccountBrandingSettings
      type: object
      x-expandableFields:
      - icon
      - logo
    account_business_profile:
      properties:
        mcc:
          description: The merchant category code for the account. MCCs are used to
            classify businesses based on the goods or services they provide.
          maxLength: 5000
          nullable: true
          type: string
        name:
          description: The customer-facing business name.
          maxLength: 5000
          nullable: true
          type: string
        product_description:
          description: Internal-only description of the product sold or service provided
            by the business. It's used by Nexter for risk and underwriting purposes.
          maxLength: 40000
          nullable: true
          type: string
        support_address:
          anyOf:
          - "$ref": "#/components/schemas/address"
          description: A publicly available mailing address for sending support issues
            to.
          nullable: true
        support_email:
          description: A publicly available email address for sending support issues
            to.
          maxLength: 5000
          nullable: true
          type: string
        support_phone:
          description: A publicly available phone number to call with support issues.
          maxLength: 5000
          nullable: true
          type: string
        support_url:
          description: A publicly available website for handling support issues.
          maxLength: 5000
          nullable: true
          type: string
        url:
          description: The business's publicly available website.
          maxLength: 5000
          nullable: true
          type: string
      title: AccountBusinessProfile
      type: object
      x-expandableFields:
      - support_address
    account_capabilities:
      properties:
        card_payments:
          description: The status of the card payments capability of the account,
            or whether the account can directly process credit and debit card charges.
          enum:
          - active
          - inactive
          - pending
          type: string
        legacy_payments:
          description: The status of the legacy payments capability of the account.
          enum:
          - active
          - inactive
          - pending
          type: string
        platform_payments:
          description: The status of the platform payments capability of the account,
            or whether your platform can process charges on behalf of the account.
          enum:
          - active
          - inactive
          - pending
          type: string
      title: AccountCapabilities
      type: object
      x-expandableFields: []
    account_card_payments_settings:
      properties:
        decline_on:
          "$ref": "#/components/schemas/account_decline_charge_on"
        statement_descriptor_prefix:
          description: The default text that appears on credit card statements when
            a charge is made. This field prefixes any dynamic `statement_descriptor`
            specified on the charge. `statement_descriptor_prefix` is useful for maximizing
            descriptor space for the dynamic portion.
          maxLength: 5000
          type: string
      title: AccountCardPaymentsSettings
      type: object
      x-expandableFields:
      - decline_on
    account_dashboard_settings:
      properties:
        display_name:
          description: The display name for this account. This is used on the Nexter
            Dashboard to differentiate between accounts.
          maxLength: 5000
          nullable: true
          type: string
        timezone:
          description: The timezone used in the Nexter Dashboard for this account.
            A list of possible time zone values is maintained at the [IANA Time Zone
            Database](http://www.iana.org/time-zones).
          maxLength: 5000
          nullable: true
          type: string
      title: AccountDashboardSettings
      type: object
      x-expandableFields: []
    account_decline_charge_on:
      properties:
        avs_failure:
          description: Whether Nexter automatically declines charges with an incorrect
            ZIP or postal code. This setting only applies when a ZIP or postal code
            is provided and they fail bank verification.
          type: boolean
        cvc_failure:
          description: Whether Nexter automatically declines charges with an incorrect
            CVC. This setting only applies when a CVC is provided and it fails bank
            verification.
          type: boolean
      required:
      - avs_failure
      - cvc_failure
      title: AccountDeclineChargeOn
      type: object
      x-expandableFields: []
    account_link:
      properties:
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        expires_at:
          description: The timestamp at which this account link will expire.
          format: unix-time
          type: integer
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - account_link
          type: string
        url:
          description: The URL for the account link.
          maxLength: 5000
          type: string
      required:
      - created
      - expires_at
      - object
      - url
      title: AccountLink
      type: object
      x-expandableFields: []
      x-resourceId: account_link
    account_payments_settings:
      properties:
        statement_descriptor:
          description: The default text that appears on credit card statements when
            a charge is made. This field prefixes any dynamic `statement_descriptor`
            specified on the charge.
          maxLength: 5000
          nullable: true
          type: string
      title: AccountPaymentsSettings
      type: object
      x-expandableFields: []
    account_payout_settings:
      properties:
        debit_negative_balances:
          description: A Boolean indicating if Nexter should try to reclaim negative
            balances from an attached bank account. See our [Understanding Connect
            Account Balances](https://nexter.io/docs/connect/account-balances) documentation
            for details. Default value is `true` for Express accounts and `false`
            for Custom accounts.
          type: boolean
        schedule:
          "$ref": "#/components/schemas/transfer_schedule"
        statement_descriptor:
          description: The text that appears on the bank account statement for payouts.
            If not set, this defaults to the platform's bank descriptor as set in
            the Dashboard.
          maxLength: 5000
          nullable: true
          type: string
      required:
      - debit_negative_balances
      - schedule
      title: AccountPayoutSettings
      type: object
      x-expandableFields:
      - schedule
    account_requirements:
      properties:
        current_deadline:
          description: The date the fields in `currently_due` must be collected by
            to keep payouts enabled for the account. These fields might block payouts
            sooner if the next threshold is reached before these fields are collected.
          format: unix-time
          nullable: true
          type: integer
        currently_due:
          description: The fields that need to be collected to keep the account enabled.
            If not collected by the `current_deadline`, these fields appear in `past_due`
            as well, and the account is disabled.
          items:
            type: string
          nullable: true
          type: array
        disabled_reason:
          description: If the account is disabled, this string describes why the account
            can’t create charges or receive payouts. Can be `requirements.past_due`,
            `requirements.pending_verification`, `rejected.fraud`, `rejected.terms_of_service`,
            `rejected.listed`, `rejected.other`, `listed`, `under_review`, or `other`.
          maxLength: 5000
          nullable: true
          type: string
        eventually_due:
          description: The fields that need to be collected assuming all volume thresholds
            are reached. As they become required, these fields appear in `currently_due`
            as well, and the `current_deadline` is set.
          items:
            type: string
          nullable: true
          type: array
        past_due:
          description: The fields that weren't collected by the `current_deadline`.
            These fields need to be collected to re-enable the account.
          items:
            type: string
          nullable: true
          type: array
      title: AccountRequirements
      type: object
      x-expandableFields: []
    account_settings:
      properties:
        branding:
          "$ref": "#/components/schemas/account_branding_settings"
        card_payments:
          "$ref": "#/components/schemas/account_card_payments_settings"
        dashboard:
          "$ref": "#/components/schemas/account_dashboard_settings"
        payments:
          "$ref": "#/components/schemas/account_payments_settings"
        payouts:
          "$ref": "#/components/schemas/account_payout_settings"
      required:
      - branding
      - card_payments
      - dashboard
      - payments
      title: AccountSettings
      type: object
      x-expandableFields:
      - branding
      - card_payments
      - dashboard
      - payments
      - payouts
    account_tos_acceptance:
      properties:
        date:
          description: The Unix timestamp marking when the Nexter Services Agreement
            was accepted by the account representative
          format: unix-time
          nullable: true
          type: integer
        ip:
          description: The IP address from which the Nexter Services Agreement was
            accepted by the account representative
          maxLength: 5000
          nullable: true
          type: string
        user_agent:
          description: The user agent of the browser from which the Nexter Services
            Agreement was accepted by the account representative
          maxLength: 5000
          nullable: true
          type: string
      title: AccountTOSAcceptance
      type: object
      x-expandableFields: []
    address:
      properties:
        city:
          description: City/District/Suburb/Town/Village.
          maxLength: 5000
          nullable: true
          type: string
        country:
          description: 2-letter country code.
          maxLength: 5000
          nullable: true
          type: string
        line1:
          description: Address line 1 (Street address/PO Box/Company name).
          maxLength: 5000
          nullable: true
          type: string
        line2:
          description: Address line 2 (Apartment/Suite/Unit/Building).
          maxLength: 5000
          nullable: true
          type: string
        postal_code:
          description: ZIP or postal code.
          maxLength: 5000
          nullable: true
          type: string
        state:
          description: State/County/Province/Region.
          maxLength: 5000
          nullable: true
          type: string
      title: Address
      type: object
      x-expandableFields: []
    alipay_account:
      properties:
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        customer:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/customer"
          - "$ref": "#/components/schemas/deleted_customer"
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/customer"
            - "$ref": "#/components/schemas/deleted_customer"
        fingerprint:
          description: Uniquely identifies the account and will be the same across
            all Alipay account objects that are linked to the same Alipay account.
          maxLength: 5000
          type: string
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        metadata:
          additionalProperties:
            maxLength: 500
            type: string
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - alipay_account
          type: string
        payment_amount:
          description: If the Alipay account object is not reusable, the exact amount
            that you can create a charge for.
          nullable: true
          type: integer
        payment_currency:
          description: If the Alipay account object is not reusable, the exact currency
            that you can create a charge for.
          maxLength: 3
          nullable: true
          type: string
        reusable:
          description: True if you can create multiple payments using this account.
            If the account is reusable, then you can freely choose the amount of each
            payment.
          type: boolean
        used:
          description: Whether this Alipay account object has ever been used for a
            payment.
          type: boolean
        username:
          description: The username for the Alipay account.
          maxLength: 5000
          type: string
      required:
      - created
      - fingerprint
      - id
      - livemode
      - object
      - reusable
      - used
      - username
      title: AlipayAccount
      type: object
      x-expandableFields:
      - customer
      x-resourceId: alipay_account
    api_errors:
      properties:
        charge:
          description: For card errors, the ID of the failed charge.
          maxLength: 5000
          type: string
        code:
          description: For some errors that could be handled programmatically, a short
            string indicating the [error code](https://nexter.io/docs/error-codes)
            reported.
          maxLength: 5000
          type: string
        decline_code:
          description: For card errors resulting from a card issuer decline, a short
            string indicating the [card issuer's reason for the decline](https://nexter.io/docs/declines#issuer-declines)
            if they provide one.
          maxLength: 5000
          type: string
        doc_url:
          description: A URL to more information about the [error code](https://nexter.io/docs/error-codes)
            reported.
          maxLength: 5000
          type: string
        message:
          description: A human-readable message providing more details about the error.
            For card errors, these messages can be shown to your users.
          maxLength: 40000
          type: string
        param:
          description: If the error is parameter-specific, the parameter related to
            the error. For example, you can use this to display a message near the
            correct form field.
          maxLength: 5000
          type: string
        payment_intent:
          "$ref": "#/components/schemas/payment_intent"
        payment_method:
          "$ref": "#/components/schemas/payment_method"
        source:
          anyOf:
          - "$ref": "#/components/schemas/bank_account"
          - "$ref": "#/components/schemas/card"
          - "$ref": "#/components/schemas/source"
          description: The source object for errors returned on a request involving
            a source.
        type:
          description: The type of error returned. One of `api_connection_error`,
            `api_error`, `authentication_error`, `card_error`, `idempotency_error`,
            `invalid_request_error`, or `rate_limit_error`
          enum:
          - api_connection_error
          - api_error
          - authentication_error
          - card_error
          - idempotency_error
          - invalid_request_error
          - rate_limit_error
          type: string
      required:
      - type
      title: APIErrors
      type: object
      x-expandableFields:
      - payment_intent
      - payment_method
      - source
    apple_pay_domain:
      properties:
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        domain_name:
          maxLength: 5000
          type: string
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - apple_pay_domain
          type: string
      required:
      - created
      - domain_name
      - id
      - livemode
      - object
      title: ApplePayDomain
      type: object
      x-expandableFields: []
      x-resourceId: apple_pay_domain
    application:
      properties:
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        name:
          description: The name of the application.
          maxLength: 5000
          nullable: true
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - application
          type: string
      required:
      - id
      - object
      title: Application
      type: object
      x-expandableFields: []
    application_fee:
      properties:
        account:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/account"
          description: ID of the Nexter account this fee was taken from.
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/account"
        amount:
          description: Amount earned, in %s.
          type: integer
        amount_refunded:
          description: Amount in %s refunded (can be less than the amount attribute
            on the fee if a partial refund was issued)
          type: integer
        application:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/application"
          description: ID of the Connect application that earned the fee.
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/application"
        balance_transaction:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/balance_transaction"
          description: Balance transaction that describes the impact of this collected
            application fee on your account balance (not including refunds).
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/balance_transaction"
        charge:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/charge"
          description: ID of the charge that the application fee was taken from.
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/charge"
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        currency:
          description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
            in lowercase. Must be a [supported currency](https://nexter.io/docs/currencies).
          maxLength: 3
          type: string
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - application_fee
          type: string
        originating_transaction:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/charge"
          description: ID of the corresponding charge on the platform account, if
            this fee was the result of a charge using the `destination` parameter.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/charge"
        refunded:
          description: Whether the fee has been fully refunded. If the fee is only
            partially refunded, this attribute will still be false.
          type: boolean
        refunds:
          description: A list of refunds that have been applied to the fee.
          properties:
            data:
              items:
                "$ref": "#/components/schemas/fee_refund"
              type: array
            has_more:
              description: True if this list has another page of items after this
                one that can be fetched.
              type: boolean
            object:
              description: String representing the object's type. Objects of the same
                type share the same value. Always has the value `list`.
              enum:
              - list
              type: string
            url:
              description: The URL where this list can be accessed.
              maxLength: 5000
              type: string
          required:
          - data
          - has_more
          - object
          - url
          title: FeeRefundList
          type: object
          x-expandableFields:
          - data
      required:
      - account
      - amount
      - amount_refunded
      - application
      - charge
      - created
      - currency
      - id
      - livemode
      - object
      - refunded
      - refunds
      title: PlatformFee
      type: object
      x-expandableFields:
      - account
      - application
      - balance_transaction
      - charge
      - originating_transaction
      - refunds
      x-resourceId: application_fee
    balance:
      properties:
        available:
          description: Funds that are available to be transferred or paid out, whether
            automatically by Nexter or explicitly via the [Transfers API](#transfers)
            or [Payouts API](#payouts). The available balance for each currency and
            payment type can be found in the `source_types` property.
          items:
            "$ref": "#/components/schemas/balance_amount"
          type: array
        connect_reserved:
          description: Funds held due to negative balances on connected Custom accounts.
            The connect reserve balance for each currency and payment type can be
            found in the `source_types` property.
          items:
            "$ref": "#/components/schemas/balance_amount"
          type: array
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - balance
          type: string
        pending:
          description: Funds that are not yet available in the balance, due to the
            7-day rolling pay cycle. The pending balance for each currency, and for
            each payment type, can be found in the `source_types` property.
          items:
            "$ref": "#/components/schemas/balance_amount"
          type: array
      required:
      - available
      - livemode
      - object
      - pending
      title: Balance
      type: object
      x-expandableFields:
      - available
      - connect_reserved
      - pending
      x-resourceId: balance
    balance_amount:
      properties:
        amount:
          description: Balance amount.
          type: integer
        currency:
          description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
            in lowercase. Must be a [supported currency](https://nexter.io/docs/currencies).
          maxLength: 3
          type: string
        source_types:
          "$ref": "#/components/schemas/balance_amount_by_source_type"
      required:
      - amount
      - currency
      title: BalanceAmount
      type: object
      x-expandableFields:
      - source_types
    balance_amount_by_source_type:
      properties:
        bank_account:
          description: Amount for bank account.
          type: integer
        card:
          description: Amount for card.
          type: integer
      title: BalanceAmountBySourceType
      type: object
      x-expandableFields: []
    balance_transaction:
      properties:
        amount:
          description: Gross amount of the transaction, in %s.
          type: integer
        available_on:
          description: The date the transaction's net funds will become available
            in the Nexter balance.
          format: unix-time
          type: integer
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        currency:
          description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
            in lowercase. Must be a [supported currency](https://nexter.io/docs/currencies).
          maxLength: 3
          type: string
        description:
          description: An arbitrary string attached to the object. Often useful for
            displaying to users.
          maxLength: 5000
          nullable: true
          type: string
        exchange_rate:
          nullable: true
          type: number
        fee:
          description: Fees (in %s) paid for this transaction.
          type: integer
        fee_details:
          description: Detailed breakdown of fees (in %s) paid for this transaction.
          items:
            "$ref": "#/components/schemas/fee"
          type: array
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        net:
          description: Net amount of the transaction, in %s.
          type: integer
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - balance_transaction
          type: string
        source:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/application_fee"
          - "$ref": "#/components/schemas/charge"
          - "$ref": "#/components/schemas/connect_collection_transfer"
          - "$ref": "#/components/schemas/dispute"
          - "$ref": "#/components/schemas/fee_refund"
          - "$ref": "#/components/schemas/issuing.authorization"
          - "$ref": "#/components/schemas/issuing.transaction"
          - "$ref": "#/components/schemas/payout"
          - "$ref": "#/components/schemas/refund"
          - "$ref": "#/components/schemas/reserve_transaction"
          - "$ref": "#/components/schemas/topup"
          - "$ref": "#/components/schemas/transfer"
          - "$ref": "#/components/schemas/transfer_reversal"
          description: The Nexter object to which this transaction is related.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/application_fee"
            - "$ref": "#/components/schemas/charge"
            - "$ref": "#/components/schemas/connect_collection_transfer"
            - "$ref": "#/components/schemas/dispute"
            - "$ref": "#/components/schemas/fee_refund"
            - "$ref": "#/components/schemas/issuing.authorization"
            - "$ref": "#/components/schemas/issuing.transaction"
            - "$ref": "#/components/schemas/payout"
            - "$ref": "#/components/schemas/refund"
            - "$ref": "#/components/schemas/reserve_transaction"
            - "$ref": "#/components/schemas/topup"
            - "$ref": "#/components/schemas/transfer"
            - "$ref": "#/components/schemas/transfer_reversal"
        status:
          description: If the transaction's net funds are available in the Nexter
            balance yet. Either `available` or `pending`.
          maxLength: 5000
          type: string
        type:
          description: 'Transaction type: `adjustment`, `advance`, `advance_funding`,
            `application_fee`, `application_fee_refund`, `charge`, `connect_collection_transfer`,
            `issuing_authorization_hold`, `issuing_authorization_release`, `issuing_transaction`,
            `payment`, `payment_failure_refund`, `payment_refund`, `payout`, `payout_cancel`,
            `payout_failure`, `refund`, `refund_failure`, `reserve_transaction`, `reserved_funds`,
            `nexter_fee`, `nexter_fx_fee`, `tax_fee`, `topup`, `topup_reversal`, `transfer`,
            `transfer_cancel`, `transfer_failure`, or `transfer_refund`. [Learn more](https://nexter.io/docs/reporting/balance-transaction-types)
            about balance transaction types and what they represent.'
          enum:
          - adjustment
          - advance
          - advance_funding
          - application_fee
          - application_fee_refund
          - charge
          - connect_collection_transfer
          - issuing_authorization_hold
          - issuing_authorization_release
          - issuing_transaction
          - payment
          - payment_failure_refund
          - payment_refund
          - payout
          - payout_cancel
          - payout_failure
          - refund
          - refund_failure
          - reserve_transaction
          - reserved_funds
          - nexter_fee
          - nexter_fx_fee
          - tax_fee
          - topup
          - topup_reversal
          - transfer
          - transfer_cancel
          - transfer_failure
          - transfer_refund
          type: string
      required:
      - amount
      - available_on
      - created
      - currency
      - fee
      - fee_details
      - id
      - net
      - object
      - status
      - type
      title: BalanceTransaction
      type: object
      x-expandableFields:
      - fee_details
      - source
      x-resourceId: balance_transaction
    bank_account:
      properties:
        account:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/account"
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/account"
        account_holder_name:
          description: The name of the person or business that owns the bank account.
          maxLength: 5000
          nullable: true
          type: string
        account_holder_type:
          description: The type of entity that holds the account. This can be either
            `individual` or `company`.
          maxLength: 5000
          nullable: true
          type: string
        bank_name:
          description: Name of the bank associated with the routing number (e.g.,
            `WELLS FARGO`).
          maxLength: 5000
          nullable: true
          type: string
        country:
          description: Two-letter ISO code representing the country the bank account
            is located in.
          maxLength: 5000
          type: string
        currency:
          description: Three-letter [ISO code for the currency](https://nexter.io/docs/payouts)
            paid out to the bank account.
          maxLength: 3
          type: string
        customer:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/customer"
          - "$ref": "#/components/schemas/deleted_customer"
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/customer"
            - "$ref": "#/components/schemas/deleted_customer"
        default_for_currency:
          description: Whether this bank account is the default external account for
            its currency.
          nullable: true
          type: boolean
        fingerprint:
          description: Uniquely identifies this particular bank account. You can use
            this attribute to check whether two bank accounts are the same.
          maxLength: 5000
          nullable: true
          type: string
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        last4:
          maxLength: 5000
          type: string
        metadata:
          additionalProperties:
            maxLength: 500
            type: string
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
          nullable: true
          type: object
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - bank_account
          type: string
        routing_number:
          description: The routing transit number for the bank account.
          maxLength: 5000
          nullable: true
          type: string
        status:
          description: |-
            For bank accounts, possible values are `new`, `validated`, `verified`, `verification_failed`, or `errored`. A bank account that hasn't had any activity or validation performed is `new`. If Nexter can determine that the bank account exists, its status will be `validated`. Note that there often isn’t enough information to know (e.g., for smaller credit unions), and the validation is not always run. If customer bank account verification has succeeded, the bank account status will be `verified`. If the verification failed for any reason, such as microdeposit failure, the status will be `verification_failed`. If a transfer sent to this bank account fails, we'll set the status to `errored` and will not continue to send transfers until the bank details are updated.

            For external accounts, possible values are `new` and `errored`. Validations aren't run against external accounts because they're only used for payouts. This means the other statuses don't apply. If a transfer fails, the status is set to `errored` and transfers are stopped until account details are updated.
          maxLength: 5000
          type: string
      required:
      - country
      - currency
      - id
      - last4
      - object
      - status
      title: BankAccount
      type: object
      x-expandableFields:
      - account
      - customer
      x-resourceId: bank_account
    billing_details:
      properties:
        address:
          anyOf:
          - "$ref": "#/components/schemas/address"
          description: Billing address.
          nullable: true
        email:
          description: Email address.
          maxLength: 5000
          nullable: true
          type: string
        name:
          description: Full name.
          maxLength: 5000
          nullable: true
          type: string
        phone:
          description: Billing phone number (including extension).
          maxLength: 5000
          nullable: true
          type: string
      title: billing_details
      type: object
      x-expandableFields:
      - address
    bitcoin_receiver:
      properties:
        active:
          description: True when this bitcoin receiver has received a non-zero amount
            of bitcoin.
          type: boolean
        amount:
          description: The amount of `currency` that you are collecting as payment.
          type: integer
        amount_received:
          description: The amount of `currency` to which `bitcoin_amount_received`
            has been converted.
          type: integer
        bitcoin_amount:
          description: 'The amount of bitcoin that the customer should send to fill
            the receiver. The `bitcoin_amount` is denominated in Satoshi: there are
            10^8 Satoshi in one bitcoin.'
          type: integer
        bitcoin_amount_received:
          description: The amount of bitcoin that has been sent by the customer to
            this receiver.
          type: integer
        bitcoin_uri:
          description: This URI can be displayed to the customer as a clickable link
            (to activate their bitcoin client) or as a QR code (for mobile wallets).
          maxLength: 5000
          type: string
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        currency:
          description: Three-letter [ISO code for the currency](https://nexter.io/docs/currencies)
            to which the bitcoin will be converted.
          maxLength: 3
          type: string
        customer:
          maxLength: 5000
          nullable: true
          type: string
        description:
          description: An arbitrary string attached to the object. Often useful for
            displaying to users.
          maxLength: 5000
          nullable: true
          type: string
        email:
          description: The customer's email address, set by the API call that creates
            the receiver.
          maxLength: 5000
          nullable: true
          type: string
        filled:
          description: This flag is initially false and updates to true when the customer
            sends the `bitcoin_amount` to this receiver.
          type: boolean
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        inbound_address:
          description: A bitcoin address that is specific to this receiver. The customer
            can send bitcoin to this address to fill the receiver.
          maxLength: 5000
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        metadata:
          additionalProperties:
            maxLength: 500
            type: string
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - bitcoin_receiver
          type: string
        payment:
          description: The ID of the payment created from the receiver, if any. Hidden
            when viewing the receiver with a publishable key.
          maxLength: 5000
          nullable: true
          type: string
        refund_address:
          maxLength: 5000
          nullable: true
          type: string
        transactions:
          description: A list with one entry for each time that the customer sent
            bitcoin to the receiver. Hidden when viewing the receiver with a publishable
            key.
          properties:
            data:
              items:
                "$ref": "#/components/schemas/bitcoin_transaction"
              type: array
            has_more:
              description: True if this list has another page of items after this
                one that can be fetched.
              type: boolean
            object:
              description: String representing the object's type. Objects of the same
                type share the same value. Always has the value `list`.
              enum:
              - list
              type: string
            url:
              description: The URL where this list can be accessed.
              maxLength: 5000
              type: string
          required:
          - data
          - has_more
          - object
          - url
          title: BitcoinTransactionList
          type: object
          x-expandableFields:
          - data
        uncaptured_funds:
          description: This receiver contains uncaptured funds that can be used for
            a payment or refunded.
          type: boolean
        used_for_payment:
          nullable: true
          type: boolean
      required:
      - active
      - amount
      - amount_received
      - bitcoin_amount
      - bitcoin_amount_received
      - bitcoin_uri
      - created
      - currency
      - filled
      - id
      - inbound_address
      - livemode
      - metadata
      - object
      - uncaptured_funds
      title: BitcoinReceiver
      type: object
      x-expandableFields:
      - transactions
      x-resourceId: bitcoin_receiver
    bitcoin_transaction:
      properties:
        amount:
          description: The amount of `currency` that the transaction was converted
            to in real-time.
          type: integer
        bitcoin_amount:
          description: The amount of bitcoin contained in the transaction.
          type: integer
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        currency:
          description: Three-letter [ISO code for the currency](https://nexter.io/docs/currencies)
            to which this transaction was converted.
          maxLength: 3
          type: string
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - bitcoin_transaction
          type: string
        receiver:
          description: The receiver to which this transaction was sent.
          maxLength: 5000
          type: string
      required:
      - amount
      - bitcoin_amount
      - created
      - currency
      - id
      - object
      - receiver
      title: BitcoinTransaction
      type: object
      x-expandableFields: []
      x-resourceId: bitcoin_transaction
    card:
      properties:
        account:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/account"
          description: The account this card belongs to. This attribute will not be
            in the card object if the card belongs to a customer or recipient instead.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/account"
        address_city:
          description: City/District/Suburb/Town/Village.
          maxLength: 5000
          nullable: true
          type: string
        address_country:
          description: Billing address country, if provided when creating card.
          maxLength: 5000
          nullable: true
          type: string
        address_line1:
          description: Address line 1 (Street address/PO Box/Company name).
          maxLength: 5000
          nullable: true
          type: string
        address_line1_check:
          description: 'If `address_line1` was provided, results of the check: `pass`,
            `fail`, `unavailable`, or `unchecked`.'
          maxLength: 5000
          nullable: true
          type: string
        address_line2:
          description: Address line 2 (Apartment/Suite/Unit/Building).
          maxLength: 5000
          nullable: true
          type: string
        address_state:
          description: State/County/Province/Region.
          maxLength: 5000
          nullable: true
          type: string
        address_zip:
          description: ZIP or postal code.
          maxLength: 5000
          nullable: true
          type: string
        address_zip_check:
          description: 'If `address_zip` was provided, results of the check: `pass`,
            `fail`, `unavailable`, or `unchecked`.'
          maxLength: 5000
          nullable: true
          type: string
        available_payout_methods:
          description: A set of available payout methods for this card. Will be either
            `["standard"]` or `["standard", "instant"]`. Only values from this set
            should be passed as the `method` when creating a transfer.
          items:
            type: string
          nullable: true
          type: array
        brand:
          description: Card brand. Can be `American Express`, `Diners Club`, `Discover`,
            `JCB`, `MasterCard`, `UnionPay`, `Visa`, or `Unknown`.
          maxLength: 5000
          type: string
        country:
          description: Two-letter ISO code representing the country of the card. You
            could use this attribute to get a sense of the international breakdown
            of cards you've collected.
          maxLength: 5000
          nullable: true
          type: string
        currency:
          maxLength: 3
          nullable: true
          type: string
        customer:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/customer"
          - "$ref": "#/components/schemas/deleted_customer"
          description: The customer that this card belongs to. This attribute will
            not be in the card object if the card belongs to an account or recipient
            instead.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/customer"
            - "$ref": "#/components/schemas/deleted_customer"
        cvc_check:
          description: 'If a CVC was provided, results of the check: `pass`, `fail`,
            `unavailable`, or `unchecked`.'
          maxLength: 5000
          nullable: true
          type: string
        default_for_currency:
          description: Whether this card is the default external account for its currency.
          nullable: true
          type: boolean
        dynamic_last4:
          description: "(For tokenized numbers only.) The last four digits of the
            device account number."
          maxLength: 5000
          nullable: true
          type: string
        exp_month:
          description: Two-digit number representing the card's expiration month.
          type: integer
        exp_year:
          description: Four-digit number representing the card's expiration year.
          type: integer
        fingerprint:
          description: Uniquely identifies this particular card number. You can use
            this attribute to check whether two customers who've signed up with you
            are using the same card number, for example.
          maxLength: 5000
          nullable: true
          type: string
        funding:
          description: Card funding type. Can be `credit`, `debit`, `prepaid`, or
            `unknown`.
          maxLength: 5000
          type: string
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        last4:
          description: The last four digits of the card.
          maxLength: 5000
          type: string
        metadata:
          additionalProperties:
            maxLength: 500
            type: string
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
          type: object
        name:
          description: Cardholder name.
          maxLength: 5000
          nullable: true
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - card
          type: string
        recipient:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/recipient"
          description: The recipient that this card belongs to. This attribute will
            not be in the card object if the card belongs to a customer or account
            instead.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/recipient"
        tokenization_method:
          description: If the card number is tokenized, this is the method that was
            used. Can be `apple_pay` or `google_pay`.
          maxLength: 5000
          nullable: true
          type: string
      required:
      - brand
      - exp_month
      - exp_year
      - funding
      - id
      - last4
      - metadata
      - object
      title: Card
      type: object
      x-expandableFields:
      - account
      - customer
      - recipient
      x-resourceId: card
    charge:
      properties:
        amount:
          description: A positive integer representing how much to charge in the [smallest
            currency unit](https://nexter.io/docs/currencies#zero-decimal) (e.g.,
            100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency).
            The minimum amount is $0.50 US or [equivalent in charge currency](https://support.nexter.io/questions/what-is-the-minimum-amount-i-can-charge-with-nexter).
          type: integer
        amount_refunded:
          description: Amount in %s refunded (can be less than the amount attribute
            on the charge if a partial refund was issued).
          type: integer
        application:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/application"
          description: ID of the Connect application that created the charge.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/application"
        application_fee:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/application_fee"
          description: The application fee (if any) for the charge. [See the Connect
            documentation](https://nexter.io/docs/connect/direct-charges#collecting-fees)
            for details.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/application_fee"
        application_fee_amount:
          description: The amount of the application fee (if any) for the charge.
            [See the Connect documentation](https://nexter.io/docs/connect/direct-charges#collecting-fees)
            for details.
          nullable: true
          type: integer
        balance_transaction:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/balance_transaction"
          description: ID of the balance transaction that describes the impact of
            this charge on your account balance (not including refunds or disputes).
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/balance_transaction"
        billing_details:
          "$ref": "#/components/schemas/billing_details"
        captured:
          description: If the charge was created without capturing, this Boolean represents
            whether it is still uncaptured or has since been captured.
          type: boolean
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        currency:
          description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
            in lowercase. Must be a [supported currency](https://nexter.io/docs/currencies).
          maxLength: 3
          type: string
        customer:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/customer"
          - "$ref": "#/components/schemas/deleted_customer"
          description: ID of the customer this charge is for if one exists.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/customer"
            - "$ref": "#/components/schemas/deleted_customer"
        description:
          description: An arbitrary string attached to the object. Often useful for
            displaying to users.
          maxLength: 40000
          nullable: true
          type: string
        dispute:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/dispute"
          description: Details about the dispute if the charge has been disputed.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/dispute"
        failure_code:
          description: Error code explaining reason for charge failure if available
            (see [the errors section](https://nexter.io/docs/api#errors) for a list
            of codes).
          maxLength: 5000
          nullable: true
          type: string
        failure_message:
          description: Message to user further explaining reason for charge failure
            if available.
          maxLength: 5000
          nullable: true
          type: string
        fraud_details:
          anyOf:
          - "$ref": "#/components/schemas/charge_fraud_details"
          description: Information on fraud assessments for the charge.
          nullable: true
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        invoice:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/invoice"
          description: ID of the invoice this charge is for if one exists.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/invoice"
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        metadata:
          additionalProperties:
            maxLength: 500
            type: string
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - charge
          type: string
        on_behalf_of:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/account"
          description: The account (if any) the charge was made on behalf of without
            triggering an automatic transfer. See the [Connect documentation](https://nexter.io/docs/connect/charges-transfers)
            for details.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/account"
        order:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/order"
          description: ID of the order this charge is for if one exists.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/order"
        outcome:
          anyOf:
          - "$ref": "#/components/schemas/charge_outcome"
          description: Details about whether the payment was accepted, and why. See
            [understanding declines](https://nexter.io/docs/declines) for details.
          nullable: true
        paid:
          description: "`true` if the charge succeeded, or was successfully authorized
            for later capture."
          type: boolean
        payment_intent:
          description: ID of the PaymentIntent associated with this charge, if one
            exists.
          maxLength: 5000
          nullable: true
          type: string
        payment_method:
          description: ID of the payment method used in this charge.
          maxLength: 5000
          nullable: true
          type: string
        payment_method_details:
          anyOf:
          - "$ref": "#/components/schemas/payment_method_details"
          description: Details about the payment method at the time of the transaction.
          nullable: true
        receipt_email:
          description: This is the email address that the receipt for this charge
            was sent to.
          maxLength: 5000
          nullable: true
          type: string
        receipt_number:
          description: This is the transaction number that appears on email receipts
            sent for this charge. This attribute will be `null` until a receipt has
            been sent.
          maxLength: 5000
          nullable: true
          type: string
        receipt_url:
          description: This is the URL to view the receipt for this charge. The receipt
            is kept up-to-date to the latest state of the charge, including any refunds.
            If the charge is for an Invoice, the receipt will be stylized as an Invoice
            receipt.
          maxLength: 5000
          type: string
        refunded:
          description: Whether the charge has been fully refunded. If the charge is
            only partially refunded, this attribute will still be false.
          type: boolean
        refunds:
          description: A list of refunds that have been applied to the charge.
          properties:
            data:
              items:
                "$ref": "#/components/schemas/refund"
              type: array
            has_more:
              description: True if this list has another page of items after this
                one that can be fetched.
              type: boolean
            object:
              description: String representing the object's type. Objects of the same
                type share the same value. Always has the value `list`.
              enum:
              - list
              type: string
            url:
              description: The URL where this list can be accessed.
              maxLength: 5000
              type: string
          required:
          - data
          - has_more
          - object
          - url
          title: RefundList
          type: object
          x-expandableFields:
          - data
        review:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/review"
          description: ID of the review associated with this charge if one exists.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/review"
        shipping:
          anyOf:
          - "$ref": "#/components/schemas/shipping"
          description: Shipping information for the charge.
          nullable: true
        source:
          anyOf:
          - "$ref": "#/components/schemas/account"
          - "$ref": "#/components/schemas/alipay_account"
          - "$ref": "#/components/schemas/bank_account"
          - "$ref": "#/components/schemas/bitcoin_receiver"
          - "$ref": "#/components/schemas/card"
          - "$ref": "#/components/schemas/source"
          description: For most Nexter users, the source of every charge is a credit
            or debit card. This hash is then the [card object](#card_object) describing
            that card.
          nullable: true
        source_transfer:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/transfer"
          description: The transfer ID which created this charge. Only present if
            the charge came from another Nexter account. [See the Connect documentation](https://nexter.io/docs/connect/destination-charges)
            for details.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/transfer"
        statement_descriptor:
          description: Extra information about a charge. This will appear on your
            customer's credit card statement. It must contain at least one letter.
          maxLength: 5000
          nullable: true
          type: string
        status:
          description: The status of the payment is either `succeeded`, `pending`,
            or `failed`.
          maxLength: 5000
          type: string
        transfer:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/transfer"
          description: ID of the transfer to the `destination` account (only applicable
            if the charge was created using the `destination` parameter).
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/transfer"
        transfer_data:
          anyOf:
          - "$ref": "#/components/schemas/charge_transfer_data"
          description: An optional dictionary including the account to automatically
            transfer to as part of a destination charge. [See the Connect documentation](https://nexter.io/docs/connect/destination-charges)
            for details.
          nullable: true
        transfer_group:
          description: A string that identifies this transaction as part of a group.
            See the [Connect documentation](https://nexter.io/docs/connect/charges-transfers#grouping-transactions)
            for details.
          maxLength: 5000
          nullable: true
          type: string
      required:
      - amount
      - amount_refunded
      - billing_details
      - captured
      - created
      - currency
      - id
      - livemode
      - metadata
      - object
      - paid
      - receipt_url
      - refunded
      - refunds
      - status
      title: Charge
      type: object
      x-expandableFields:
      - application
      - application_fee
      - balance_transaction
      - billing_details
      - customer
      - dispute
      - fraud_details
      - invoice
      - on_behalf_of
      - order
      - outcome
      - payment_method_details
      - refunds
      - review
      - shipping
      - source
      - source_transfer
      - transfer
      - transfer_data
      x-resourceId: charge
    charge_fraud_details:
      properties:
        nexter_report:
          description: Assessments from Nexter. If set, the value is `fraudulent`.
          maxLength: 5000
          type: string
        user_report:
          description: Assessments reported by you. If set, possible values of are
            `safe` and `fraudulent`.
          maxLength: 5000
          type: string
      title: ChargeFraudDetails
      type: object
      x-expandableFields: []
    charge_outcome:
      properties:
        network_status:
          description: Possible values are `approved_by_network`, `declined_by_network`,
            `not_sent_to_network`, and `reversed_after_approval`. The value `reversed_after_approval`
            indicates the payment was [blocked by Nexter](https://nexter.io/docs/declines#blocked-payments)
            after bank authorization, and may temporarily appear as "pending" on a
            cardholder's statement.
          maxLength: 5000
          nullable: true
          type: string
        reason:
          description: An enumerated value providing a more detailed explanation of
            the outcome's `type`. Charges blocked by Radar's default block rule have
            the value `highest_risk_level`. Charges placed in review by Radar's default
            review rule have the value `elevated_risk_level`. Charges authorized,
            blocked, or placed in review by custom rules have the value `rule`. See
            [understanding declines](https://nexter.io/docs/declines) for more details.
          maxLength: 5000
          nullable: true
          type: string
        risk_level:
          description: Nexter's evaluation of the riskiness of the payment. Possible
            values for evaluated payments are `normal`, `elevated`, `highest`. For
            non-card payments, and card-based payments predating the public assignment
            of risk levels, this field will have the value `not_assessed`. In the
            event of an error in the evaluation, this field will have the value `unknown`.
          maxLength: 5000
          type: string
        risk_score:
          description: Nexter's evaluation of the riskiness of the payment. Possible
            values for evaluated payments are between 0 and 100. For non-card payments,
            card-based payments predating the public assignment of risk scores, or
            in the event of an error during evaluation, this field will not be present.
            This field is only available with Radar for Fraud Teams.
          type: integer
        rule:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/rule"
          description: The ID of the Radar rule that matched the payment, if applicable.
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/rule"
        seller_message:
          description: A human-readable description of the outcome type and reason,
            designed for you (the recipient of the payment), not your customer.
          maxLength: 5000
          nullable: true
          type: string
        type:
          description: Possible values are `authorized`, `manual_review`, `issuer_declined`,
            `blocked`, and `invalid`. See [understanding declines](https://nexter.io/docs/declines)
            and [Radar reviews](radar/review) for details.
          maxLength: 5000
          type: string
      required:
      - type
      title: ChargeOutcome
      type: object
      x-expandableFields:
      - rule
    charge_transfer_data:
      properties:
        amount:
          description: The amount transferred to the destination account, if specified.
            By default, the entire charge amount is transferred to the destination
            account.
          nullable: true
          type: integer
        destination:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/account"
          description: ID of an existing, connected Nexter account to transfer funds
            to if `transfer_data` was specified in the charge request.
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/account"
      required:
      - destination
      title: ChargeTransferData
      type: object
      x-expandableFields:
      - destination
    checkout.session:
      properties:
        billing_address_collection:
          description: The value (`auto` or `required`) for whether Checkout collected
            the customer's billing address.
          maxLength: 5000
          nullable: true
          type: string
        cancel_url:
          description: The URL the customer will be directed to if they decide to
            cancel payment and return to your website.
          maxLength: 5000
          type: string
        client_reference_id:
          description: |-
            A unique string to reference the Checkout Session. This can be a
            customer ID, a cart ID, or similar, and can be used to reconcile the
            session with your internal systems.
          maxLength: 5000
          nullable: true
          type: string
        customer:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/customer"
          description: The ID of the customer for this session. A new customer will
            be created unless an existing customer was provided in when the session
            was created.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/customer"
        customer_email:
          description: |-
            If provided, this value will be used when the Customer object is created.
            If not provided, customers will be asked to enter their email address.
            Use this parameter to prefill customer data if you already have an email
            on file. To access information about the customer once a session is
            complete, use the `customer` field.
          maxLength: 5000
          nullable: true
          type: string
        display_items:
          description: The line items, plans, or SKUs purchased by the customer.
          items:
            "$ref": "#/components/schemas/checkout_session_display_item"
          type: array
        id:
          description: Unique identifier for the object. Used to pass to `redirectToCheckout`
            in Nexter.js.
          maxLength: 5000
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        locale:
          description: The IETF language tag of the locale Checkout is displayed in.
            If blank or `auto`, the browser's locale is used.
          enum:
          - auto
          - da
          - de
          - en
          - es
          - fi
          - fr
          - it
          - ja
          - nb
          - nl
          - pl
          - pt
          - sv
          - zh
          nullable: true
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - checkout.session
          type: string
        payment_intent:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/payment_intent"
          description: The ID of the PaymentIntent created if SKUs or line items were
            provided.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/payment_intent"
        payment_method_types:
          description: A list of the types of payment methods (e.g. card) this Checkout
            Session is allowed to accept.
          items:
            type: string
          type: array
        subscription:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/subscription"
          description: The ID of the subscription created if one or more plans were
            provided.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/subscription"
        success_url:
          description: The URL the customer will be directed to after the payment
            or subscription creation is successful.
          maxLength: 5000
          type: string
      required:
      - cancel_url
      - display_items
      - id
      - livemode
      - object
      - payment_method_types
      - success_url
      title: Session
      type: object
      x-expandableFields:
      - customer
      - display_items
      - payment_intent
      - subscription
      x-resourceId: checkout.session
    checkout_session_custom_display_item_description:
      properties:
        description:
          description: The description of the line item.
          maxLength: 5000
          nullable: true
          type: string
        images:
          description: The images of the line item.
          items:
            type: string
          nullable: true
          type: array
        name:
          description: The name of the line item.
          maxLength: 5000
          type: string
      required:
      - name
      title: checkout_session_custom_display_item_description
      type: object
      x-expandableFields: []
    checkout_session_display_item:
      properties:
        amount:
          description: Amount for the display item.
          type: integer
        currency:
          description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
            in lowercase. Must be a [supported currency](https://nexter.io/docs/currencies).
          maxLength: 3
          type: string
        custom:
          "$ref": "#/components/schemas/checkout_session_custom_display_item_description"
        plan:
          "$ref": "#/components/schemas/plan"
        quantity:
          description: Quantity of the display item being purchased.
          type: integer
        sku:
          "$ref": "#/components/schemas/sku"
        type:
          description: The type of display item. One of `custom`, `plan` or `sku`
          maxLength: 5000
          type: string
      title: checkout_session_display_item
      type: object
      x-expandableFields:
      - custom
      - plan
      - sku
    connect_collection_transfer:
      properties:
        amount:
          description: Amount transferred, in %s.
          type: integer
        currency:
          description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
            in lowercase. Must be a [supported currency](https://nexter.io/docs/currencies).
          maxLength: 3
          type: string
        destination:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/account"
          description: ID of the account that funds are being collected for.
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/account"
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - connect_collection_transfer
          type: string
      required:
      - amount
      - currency
      - destination
      - id
      - livemode
      - object
      title: ConnectCollectionTransfer
      type: object
      x-expandableFields:
      - destination
    country_spec:
      properties:
        default_currency:
          description: The default currency for this country. This applies to both
            payment methods and bank accounts.
          maxLength: 5000
          type: string
        id:
          description: Unique identifier for the object. Represented as the ISO country
            code for this country.
          maxLength: 5000
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - country_spec
          type: string
        supported_bank_account_currencies:
          additionalProperties:
            items:
              type: string
            type: array
          description: Currencies that can be accepted in the specific country (for
            transfers).
          type: object
        supported_payment_currencies:
          description: Currencies that can be accepted in the specified country (for
            payments).
          items:
            type: string
          type: array
        supported_payment_methods:
          description: Payment methods available in the specified country. You may
            need to enable some payment methods (e.g., [ACH](https://nexter.io/docs/ach))
            on your account before they appear in this list. The `nexter` payment
            method refers to [charging through your platform](https://nexter.io/docs/connect/destination-charges).
          items:
            type: string
          type: array
        supported_transfer_countries:
          description: Countries that can accept transfers from the specified country.
          items:
            type: string
          type: array
        verification_fields:
          "$ref": "#/components/schemas/country_spec_verification_fields"
      required:
      - default_currency
      - id
      - object
      - supported_bank_account_currencies
      - supported_payment_currencies
      - supported_payment_methods
      - supported_transfer_countries
      - verification_fields
      title: CountrySpec
      type: object
      x-expandableFields:
      - verification_fields
      x-resourceId: country_spec
    country_spec_verification_field_details:
      properties:
        additional:
          description: Additional fields which are only required for some users.
          items:
            type: string
          type: array
        minimum:
          description: Fields which every account must eventually provide.
          items:
            type: string
          type: array
      required:
      - additional
      - minimum
      title: CountrySpecVerificationFieldDetails
      type: object
      x-expandableFields: []
    country_spec_verification_fields:
      properties:
        company:
          "$ref": "#/components/schemas/country_spec_verification_field_details"
        individual:
          "$ref": "#/components/schemas/country_spec_verification_field_details"
      required:
      - company
      - individual
      title: CountrySpecVerificationFields
      type: object
      x-expandableFields:
      - company
      - individual
    coupon:
      properties:
        amount_off:
          description: Amount (in the `currency` specified) that will be taken off
            the subtotal of any invoices for this customer.
          nullable: true
          type: integer
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        currency:
          description: If `amount_off` has been set, the three-letter [ISO code for
            the currency](https://nexter.io/docs/currencies) of the amount to take
            off.
          maxLength: 3
          nullable: true
          type: string
        duration:
          description: One of `forever`, `once`, and `repeating`. Describes how long
            a customer who applies this coupon will get the discount.
          enum:
          - forever
          - once
          - repeating
          type: string
        duration_in_months:
          description: If `duration` is `repeating`, the number of months the coupon
            applies. Null if coupon `duration` is `forever` or `once`.
          nullable: true
          type: integer
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        max_redemptions:
          description: Maximum number of times this coupon can be redeemed, in total,
            across all customers, before it is no longer valid.
          nullable: true
          type: integer
        metadata:
          additionalProperties:
            maxLength: 500
            type: string
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
          type: object
        name:
          description: Name of the coupon displayed to customers on for instance invoices
            or receipts.
          maxLength: 5000
          nullable: true
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - coupon
          type: string
        percent_off:
          description: Percent that will be taken off the subtotal of any invoices
            for this customer for the duration of the coupon. For example, a coupon
            with percent_off of 50 will make a %s100 invoice %s50 instead.
          nullable: true
          type: number
        redeem_by:
          description: Date after which the coupon can no longer be redeemed.
          format: unix-time
          nullable: true
          type: integer
        times_redeemed:
          description: Number of times this coupon has been applied to a customer.
          type: integer
        valid:
          description: Taking account of the above properties, whether this coupon
            can still be applied to a customer.
          type: boolean
      required:
      - created
      - duration
      - id
      - livemode
      - metadata
      - object
      - times_redeemed
      - valid
      title: Coupon
      type: object
      x-expandableFields: []
      x-resourceId: coupon
    credit_note:
      properties:
        amount:
          description: The integer amount in **%s** representing the total amount
            of the credit note.
          type: integer
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        currency:
          description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
            in lowercase. Must be a [supported currency](https://nexter.io/docs/currencies).
          maxLength: 3
          type: string
        customer:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/customer"
          description: ID of the customer.
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/customer"
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        invoice:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/invoice"
          description: ID of the invoice.
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/invoice"
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        memo:
          description: Customer-facing text that appears on the credit note PDF.
          maxLength: 5000
          nullable: true
          type: string
        metadata:
          additionalProperties:
            maxLength: 500
            type: string
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
          type: object
        number:
          description: A unique number that identifies this particular credit note
            and appears on the PDF of the credit note and its associated invoice.
          maxLength: 5000
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - credit_note
          type: string
        pdf:
          description: The link to download the PDF of the credit note.
          maxLength: 5000
          type: string
        reason:
          description: Reason for issuing this credit note, one of `duplicate`, `fraudulent`,
            `order_change`, or `product_unsatisfactory`
          enum:
          - duplicate
          - fraudulent
          - order_change
          - product_unsatisfactory
          nullable: true
          type: string
        refund:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/refund"
          description: Refund related to this credit note.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/refund"
        status:
          description: Status of this credit note, one of `issued` or `void`. Learn
            more about [voiding credit notes](https://nexter.io/docs/billing/invoices/credit-notes#voiding).
          enum:
          - issued
          - void
          type: string
        type:
          description: Type of this credit note, one of `post_payment` or `pre_payment`.
            A `pre_payment` credit note means it was issued when the invoice was open.
            A `post_payment` credit note means it was issued when the invoice was
            paid.
          enum:
          - post_payment
          - pre_payment
          type: string
      required:
      - amount
      - created
      - currency
      - customer
      - id
      - invoice
      - livemode
      - metadata
      - number
      - object
      - pdf
      - status
      - type
      title: CreditNote
      type: object
      x-expandableFields:
      - customer
      - invoice
      - refund
      x-resourceId: credit_note
    customer:
      properties:
        account_balance:
          description: Current balance, if any, being stored on the customer's account.
            If negative, the customer has credit to apply to the next invoice. If
            positive, the customer has an amount owed that will be added to the next
            invoice. The balance does not refer to any unpaid invoices; it solely
            takes into account amounts that have yet to be successfully applied to
            any invoice. This balance is only taken into account as invoices are finalized.
            Note that the balance does not include unpaid invoices.
          type: integer
        address:
          anyOf:
          - "$ref": "#/components/schemas/address"
          description: The customer's address.
          nullable: true
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        currency:
          description: Three-letter [ISO code for the currency](https://nexter.io/docs/currencies)
            the customer can be charged in for recurring billing purposes.
          maxLength: 5000
          nullable: true
          type: string
        default_source:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/alipay_account"
          - "$ref": "#/components/schemas/bank_account"
          - "$ref": "#/components/schemas/bitcoin_receiver"
          - "$ref": "#/components/schemas/card"
          - "$ref": "#/components/schemas/source"
          description: ID of the default payment source for the customer.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/alipay_account"
            - "$ref": "#/components/schemas/bank_account"
            - "$ref": "#/components/schemas/bitcoin_receiver"
            - "$ref": "#/components/schemas/card"
            - "$ref": "#/components/schemas/source"
        delinquent:
          description: When the customer's latest invoice is billed by charging automatically,
            delinquent is true if the invoice's latest charge is failed. When the
            customer's latest invoice is billed by sending an invoice, delinquent
            is true if the invoice is not paid by its due date.
          nullable: true
          type: boolean
        description:
          description: An arbitrary string attached to the object. Often useful for
            displaying to users.
          maxLength: 5000
          nullable: true
          type: string
        discount:
          anyOf:
          - "$ref": "#/components/schemas/discount"
          description: Describes the current discount active on the customer, if there
            is one.
          nullable: true
        email:
          description: The customer's email address.
          maxLength: 5000
          nullable: true
          type: string
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        invoice_prefix:
          description: The prefix for the customer used to generate unique invoice
            numbers.
          maxLength: 5000
          nullable: true
          type: string
        invoice_settings:
          "$ref": "#/components/schemas/invoice_setting_customer_setting"
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        metadata:
          additionalProperties:
            maxLength: 500
            type: string
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
          type: object
        name:
          description: The customer's full name or business name.
          maxLength: 5000
          nullable: true
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - customer
          type: string
        phone:
          description: The customer's phone number.
          maxLength: 5000
          nullable: true
          type: string
        preferred_locales:
          description: The customer's preferred locales (languages), ordered by preference.
          items:
            type: string
          nullable: true
          type: array
        shipping:
          anyOf:
          - "$ref": "#/components/schemas/shipping"
          description: Mailing and shipping address for the customer. Appears on invoices
            emailed to this customer.
          nullable: true
        sources:
          description: The customer's payment sources, if any.
          properties:
            data:
              description: The list contains all payment sources that have been attached
                to the customer.
              items:
                anyOf:
                - "$ref": "#/components/schemas/alipay_account"
                - "$ref": "#/components/schemas/bank_account"
                - "$ref": "#/components/schemas/bitcoin_receiver"
                - "$ref": "#/components/schemas/card"
                - "$ref": "#/components/schemas/source"
                title: Polymorphic
              type: array
            has_more:
              description: True if this list has another page of items after this
                one that can be fetched.
              type: boolean
            object:
              description: String representing the object's type. Objects of the same
                type share the same value. Always has the value `list`.
              enum:
              - list
              type: string
            url:
              description: The URL where this list can be accessed.
              maxLength: 5000
              type: string
          required:
          - data
          - has_more
          - object
          - url
          title: ApmsSourcesSourceList
          type: object
          x-expandableFields:
          - data
        subscriptions:
          description: The customer's current subscriptions, if any.
          properties:
            data:
              items:
                "$ref": "#/components/schemas/subscription"
              type: array
            has_more:
              description: True if this list has another page of items after this
                one that can be fetched.
              type: boolean
            object:
              description: String representing the object's type. Objects of the same
                type share the same value. Always has the value `list`.
              enum:
              - list
              type: string
            url:
              description: The URL where this list can be accessed.
              maxLength: 5000
              type: string
          required:
          - data
          - has_more
          - object
          - url
          title: SubscriptionList
          type: object
          x-expandableFields:
          - data
        tax_exempt:
          description: Describes the customer's tax exemption status. One of `none`,
            `exempt`, or `reverse`. When set to `reverse`, invoice and receipt PDFs
            include the text **"Reverse charge"**.
          enum:
          - exempt
          - none
          - reverse
          nullable: true
          type: string
        tax_ids:
          description: The customer's tax IDs.
          properties:
            data:
              items:
                "$ref": "#/components/schemas/tax_id"
              type: array
            has_more:
              description: True if this list has another page of items after this
                one that can be fetched.
              type: boolean
            object:
              description: String representing the object's type. Objects of the same
                type share the same value. Always has the value `list`.
              enum:
              - list
              type: string
            url:
              description: The URL where this list can be accessed.
              maxLength: 5000
              type: string
          required:
          - data
          - has_more
          - object
          - url
          title: TaxIDsList
          type: object
          x-expandableFields:
          - data
        tax_info:
          anyOf:
          - "$ref": "#/components/schemas/tax_info"
          description: The customer's tax information. Appears on invoices emailed
            to this customer. This field has been deprecated and will be removed in
            a future API version, for further information view the [migration guide](https://nexter.io/docs/billing/migration/taxes#moving-from-taxinfo-to-customer-tax-ids).
          nullable: true
        tax_info_verification:
          anyOf:
          - "$ref": "#/components/schemas/tax_info_verification"
          description: Describes the status of looking up the tax ID provided in `tax_info`.
            This field has been deprecated and will be removed in a future API version,
            for further information view the [migration guide](https://nexter.io/docs/billing/migration/taxes#moving-from-taxinfo-to-customer-tax-ids).
          nullable: true
      required:
      - created
      - id
      - livemode
      - object
      - sources
      title: Customer
      type: object
      x-expandableFields:
      - address
      - default_source
      - discount
      - invoice_settings
      - shipping
      - sources
      - subscriptions
      - tax_ids
      - tax_info
      - tax_info_verification
      x-resourceId: customer
    customer_balance_transaction:
      properties:
        amount:
          description: The amount of the transaction. A negative value is a credit
            for the customer's balance, and a positive value is a debit to the customer's
            balance.
          type: integer
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        currency:
          description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
            in lowercase. Must be a [supported currency](https://nexter.io/docs/currencies).
          maxLength: 3
          type: string
        customer:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/customer"
          description: The ID of the customer the transaction belongs to.
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/customer"
        description:
          description: An arbitrary string attached to the object. Often useful for
            displaying to users.
          maxLength: 5000
          nullable: true
          type: string
        ending_balance:
          description: The customer's balance after the transaction was applied. A
            negative value decrease the amount due on the customer's next invoice.
            A positive value increase the amount due on the customer's next invoice.
          type: integer
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        invoice:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/invoice"
          description: The ID of the invoice (if any) related to the transaction.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/invoice"
        metadata:
          additionalProperties:
            maxLength: 500
            type: string
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
          nullable: true
          type: object
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - customer_balance_transaction
          type: string
        type:
          description: 'Transaction type: `adjustment`, `applied_to_invoice`, `credit_note`,
            `initial`, `invoice_too_large`, `invoice_too_small`, `migration`, `receiver_source_mispayment`,
            or `reversal`.'
          enum:
          - adjustment
          - applied_to_invoice
          - credit_note
          - initial
          - invoice_too_large
          - invoice_too_small
          - migration
          - receiver_source_mispayment
          - reversal
          type: string
      required:
      - amount
      - created
      - currency
      - customer
      - ending_balance
      - id
      - object
      - type
      title: CustomerBalanceTransaction
      type: object
      x-expandableFields:
      - customer
      - invoice
      x-resourceId: customer_balance_transaction
    deleted_account:
      properties:
        deleted:
          description: Always true for a deleted object
          enum:
          - true
          type: boolean
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - account
          type: string
      required:
      - deleted
      - id
      - object
      title: DeletedAccount
      type: object
      x-expandableFields: []
      x-resourceId: deleted_account
    deleted_alipay_account:
      properties:
        deleted:
          description: Always true for a deleted object
          enum:
          - true
          type: boolean
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - alipay_account
          type: string
      required:
      - deleted
      - id
      - object
      title: AlipayDeletedAccount
      type: object
      x-expandableFields: []
    deleted_apple_pay_domain:
      properties:
        deleted:
          description: Always true for a deleted object
          enum:
          - true
          type: boolean
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - apple_pay_domain
          type: string
      required:
      - deleted
      - id
      - object
      title: DeletedApplePayDomain
      type: object
      x-expandableFields: []
      x-resourceId: deleted_apple_pay_domain
    deleted_bank_account:
      properties:
        currency:
          description: Three-letter [ISO code for the currency](https://nexter.io/docs/payouts)
            paid out to the bank account.
          maxLength: 5000
          nullable: true
          type: string
        deleted:
          description: Always true for a deleted object
          enum:
          - true
          type: boolean
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - bank_account
          type: string
      required:
      - deleted
      - id
      - object
      title: DeletedBankAccount
      type: object
      x-expandableFields: []
    deleted_bitcoin_receiver:
      properties:
        deleted:
          description: Always true for a deleted object
          enum:
          - true
          type: boolean
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - bitcoin_receiver
          type: string
      required:
      - deleted
      - id
      - object
      title: BitcoinDeletedReceiver
      type: object
      x-expandableFields: []
    deleted_card:
      properties:
        currency:
          description: Three-letter [ISO code for the currency](https://nexter.io/docs/payouts)
            paid out to the bank account.
          maxLength: 5000
          nullable: true
          type: string
        deleted:
          description: Always true for a deleted object
          enum:
          - true
          type: boolean
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - card
          type: string
      required:
      - deleted
      - id
      - object
      title: DeletedCard
      type: object
      x-expandableFields: []
    deleted_coupon:
      properties:
        deleted:
          description: Always true for a deleted object
          enum:
          - true
          type: boolean
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - coupon
          type: string
      required:
      - deleted
      - id
      - object
      title: DeletedCoupon
      type: object
      x-expandableFields: []
      x-resourceId: deleted_coupon
    deleted_customer:
      properties:
        deleted:
          description: Always true for a deleted object
          enum:
          - true
          type: boolean
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - customer
          type: string
      required:
      - deleted
      - id
      - object
      title: DeletedCustomer
      type: object
      x-expandableFields: []
      x-resourceId: deleted_customer
    deleted_discount:
      properties:
        deleted:
          description: Always true for a deleted object
          enum:
          - true
          type: boolean
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - discount
          type: string
      required:
      - deleted
      - object
      title: DeletedDiscount
      type: object
      x-expandableFields: []
      x-resourceId: deleted_discount
    deleted_external_account:
      anyOf:
      - "$ref": "#/components/schemas/deleted_bank_account"
      - "$ref": "#/components/schemas/deleted_card"
      title: Polymorphic
      x-resourceId: deleted_external_account
    deleted_invoice:
      properties:
        deleted:
          description: Always true for a deleted object
          enum:
          - true
          type: boolean
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - invoice
          type: string
      required:
      - deleted
      - id
      - object
      title: DeletedInvoice
      type: object
      x-expandableFields: []
      x-resourceId: deleted_invoice
    deleted_invoiceitem:
      properties:
        deleted:
          description: Always true for a deleted object
          enum:
          - true
          type: boolean
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - invoiceitem
          type: string
      required:
      - deleted
      - id
      - object
      title: DeletedInvoiceItem
      type: object
      x-expandableFields: []
      x-resourceId: deleted_invoiceitem
    deleted_payment_source:
      anyOf:
      - "$ref": "#/components/schemas/deleted_alipay_account"
      - "$ref": "#/components/schemas/deleted_bank_account"
      - "$ref": "#/components/schemas/deleted_bitcoin_receiver"
      - "$ref": "#/components/schemas/deleted_card"
      title: Polymorphic
      x-resourceId: deleted_payment_source
    deleted_person:
      properties:
        deleted:
          description: Always true for a deleted object
          enum:
          - true
          type: boolean
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - person
          type: string
      required:
      - deleted
      - id
      - object
      title: DeletedPerson
      type: object
      x-expandableFields: []
      x-resourceId: deleted_person
    deleted_plan:
      properties:
        deleted:
          description: Always true for a deleted object
          enum:
          - true
          type: boolean
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - plan
          type: string
      required:
      - deleted
      - id
      - object
      title: DeletedPlan
      type: object
      x-expandableFields: []
      x-resourceId: deleted_plan
    deleted_product:
      properties:
        deleted:
          description: Always true for a deleted object
          enum:
          - true
          type: boolean
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - product
          type: string
      required:
      - deleted
      - id
      - object
      title: DeletedProduct
      type: object
      x-expandableFields: []
      x-resourceId: deleted_product
    deleted_radar.value_list:
      properties:
        deleted:
          description: Always true for a deleted object
          enum:
          - true
          type: boolean
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - radar.value_list
          type: string
      required:
      - deleted
      - id
      - object
      title: RadarListDeletedList
      type: object
      x-expandableFields: []
      x-resourceId: deleted_radar.value_list
    deleted_radar.value_list_item:
      properties:
        deleted:
          description: Always true for a deleted object
          enum:
          - true
          type: boolean
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - radar.value_list_item
          type: string
      required:
      - deleted
      - id
      - object
      title: RadarListDeletedListItem
      type: object
      x-expandableFields: []
      x-resourceId: deleted_radar.value_list_item
    deleted_recipient:
      properties:
        deleted:
          description: Always true for a deleted object
          enum:
          - true
          type: boolean
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - recipient
          type: string
      required:
      - deleted
      - id
      - object
      title: DeletedTransferRecipient
      type: object
      x-expandableFields: []
      x-resourceId: deleted_recipient
    deleted_sku:
      properties:
        deleted:
          description: Always true for a deleted object
          enum:
          - true
          type: boolean
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - sku
          type: string
      required:
      - deleted
      - id
      - object
      title: DeletedSKU
      type: object
      x-expandableFields: []
      x-resourceId: deleted_sku
    deleted_subscription_item:
      properties:
        deleted:
          description: Always true for a deleted object
          enum:
          - true
          type: boolean
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - subscription_item
          type: string
      required:
      - deleted
      - id
      - object
      title: DeletedSubscriptionItem
      type: object
      x-expandableFields: []
      x-resourceId: deleted_subscription_item
    deleted_tax_id:
      properties:
        deleted:
          description: Always true for a deleted object
          enum:
          - true
          type: boolean
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - tax_id
          type: string
      required:
      - deleted
      - id
      - object
      title: deleted_tax_id
      type: object
      x-expandableFields: []
      x-resourceId: deleted_tax_id
    deleted_terminal.location:
      properties:
        deleted:
          description: Always true for a deleted object
          enum:
          - true
          type: boolean
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - terminal.location
          type: string
      required:
      - deleted
      - id
      - object
      title: TerminalLocationDeletedLocation
      type: object
      x-expandableFields: []
      x-resourceId: deleted_terminal.location
    deleted_terminal.reader:
      properties:
        deleted:
          description: Always true for a deleted object
          enum:
          - true
          type: boolean
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - terminal.reader
          type: string
      required:
      - deleted
      - id
      - object
      title: TerminalReaderDeletedReader
      type: object
      x-expandableFields: []
      x-resourceId: deleted_terminal.reader
    deleted_webhook_endpoint:
      properties:
        deleted:
          description: Always true for a deleted object
          enum:
          - true
          type: boolean
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - webhook_endpoint
          type: string
      required:
      - deleted
      - id
      - object
      title: NotificationWebhookEndpointDeleted
      type: object
      x-expandableFields: []
      x-resourceId: deleted_webhook_endpoint
    delivery_estimate:
      properties:
        date:
          description: If `type` is `"exact"`, `date` will be the expected delivery
            date in the format YYYY-MM-DD.
          maxLength: 5000
          type: string
        earliest:
          description: If `type` is `"range"`, `earliest` will be be the earliest
            delivery date in the format YYYY-MM-DD.
          maxLength: 5000
          type: string
        latest:
          description: If `type` is `"range"`, `latest` will be the latest delivery
            date in the format YYYY-MM-DD.
          maxLength: 5000
          type: string
        type:
          description: The type of estimate. Must be either `"range"` or `"exact"`.
          maxLength: 5000
          type: string
      required:
      - type
      title: DeliveryEstimate
      type: object
      x-expandableFields: []
    discount:
      properties:
        coupon:
          "$ref": "#/components/schemas/coupon"
        customer:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/customer"
          - "$ref": "#/components/schemas/deleted_customer"
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/customer"
            - "$ref": "#/components/schemas/deleted_customer"
        end:
          description: If the coupon has a duration of `repeating`, the date that
            this discount will end. If the coupon has a duration of `once` or `forever`,
            this attribute will be null.
          format: unix-time
          nullable: true
          type: integer
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - discount
          type: string
        start:
          description: Date that the coupon was applied.
          format: unix-time
          type: integer
        subscription:
          description: The subscription that this coupon is applied to, if it is applied
            to a particular subscription.
          maxLength: 5000
          nullable: true
          type: string
      required:
      - coupon
      - object
      - start
      title: Discount
      type: object
      x-expandableFields:
      - coupon
      - customer
      x-resourceId: discount
    dispute:
      properties:
        amount:
          description: Disputed amount. Usually the amount of the charge, but can
            differ (usually because of currency fluctuation or because only part of
            the order is disputed).
          type: integer
        balance_transactions:
          description: List of zero, one, or two balance transactions that show funds
            withdrawn and reinstated to your Nexter account as a result of this dispute.
          items:
            "$ref": "#/components/schemas/balance_transaction"
          type: array
        charge:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/charge"
          description: ID of the charge that was disputed.
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/charge"
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        currency:
          description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
            in lowercase. Must be a [supported currency](https://nexter.io/docs/currencies).
          maxLength: 3
          type: string
        evidence:
          "$ref": "#/components/schemas/dispute_evidence"
        evidence_details:
          "$ref": "#/components/schemas/dispute_evidence_details"
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        is_charge_refundable:
          description: If true, it is still possible to refund the disputed payment.
            Once the payment has been fully refunded, no further funds will be withdrawn
            from your Nexter account as a result of this dispute.
          type: boolean
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        metadata:
          additionalProperties:
            maxLength: 500
            type: string
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - dispute
          type: string
        reason:
          description: Reason given by cardholder for dispute. Possible values are
            `bank_cannot_process`, `check_returned`, `credit_not_processed`, `customer_initiated`,
            `debit_not_authorized`, `duplicate`, `fraudulent`, `general`, `incorrect_account_details`,
            `insufficient_funds`, `product_not_received`, `product_unacceptable`,
            `subscription_canceled`, or `unrecognized`. Read more about [dispute reasons](https://nexter.io/docs/disputes/categories).
          maxLength: 5000
          type: string
        status:
          description: Current status of dispute. Possible values are `warning_needs_response`,
            `warning_under_review`, `warning_closed`, `needs_response`, `under_review`,
            `charge_refunded`, `won`, or `lost`.
          enum:
          - charge_refunded
          - lost
          - needs_response
          - under_review
          - warning_closed
          - warning_needs_response
          - warning_under_review
          - won
          type: string
      required:
      - amount
      - balance_transactions
      - charge
      - created
      - currency
      - evidence
      - evidence_details
      - id
      - is_charge_refundable
      - livemode
      - metadata
      - object
      - reason
      - status
      title: Dispute
      type: object
      x-expandableFields:
      - balance_transactions
      - charge
      - evidence
      - evidence_details
      x-resourceId: dispute
    dispute_evidence:
      properties:
        access_activity_log:
          description: Any server or activity logs showing proof that the customer
            accessed or downloaded the purchased digital product. This information
            should include IP addresses, corresponding timestamps, and any detailed
            recorded activity.
          maxLength: 150000
          nullable: true
          type: string
        billing_address:
          description: The billing address provided by the customer.
          maxLength: 5000
          nullable: true
          type: string
        cancellation_policy:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/file"
          description: "(ID of a [file upload](https://nexter.io/docs/guides/file-upload))
            Your subscription cancellation policy, as shown to the customer."
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/file"
        cancellation_policy_disclosure:
          description: An explanation of how and when the customer was shown your
            refund policy prior to purchase.
          maxLength: 150000
          nullable: true
          type: string
        cancellation_rebuttal:
          description: A justification for why the customer's subscription was not
            canceled.
          maxLength: 150000
          nullable: true
          type: string
        customer_communication:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/file"
          description: "(ID of a [file upload](https://nexter.io/docs/guides/file-upload))
            Any communication with the customer that you feel is relevant to your
            case. Examples include emails proving that the customer received the product
            or service, or demonstrating their use of or satisfaction with the product
            or service."
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/file"
        customer_email_address:
          description: The email address of the customer.
          maxLength: 5000
          nullable: true
          type: string
        customer_name:
          description: The name of the customer.
          maxLength: 5000
          nullable: true
          type: string
        customer_purchase_ip:
          description: The IP address that the customer used when making the purchase.
          maxLength: 5000
          nullable: true
          type: string
        customer_signature:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/file"
          description: "(ID of a [file upload](https://nexter.io/docs/guides/file-upload))
            A relevant document or contract showing the customer's signature."
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/file"
        duplicate_charge_documentation:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/file"
          description: "(ID of a [file upload](https://nexter.io/docs/guides/file-upload))
            Documentation for the prior charge that can uniquely identify the charge,
            such as a receipt, shipping label, work order, etc. This document should
            be paired with a similar document from the disputed payment that proves
            the two payments are separate."
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/file"
        duplicate_charge_explanation:
          description: An explanation of the difference between the disputed charge
            versus the prior charge that appears to be a duplicate.
          maxLength: 150000
          nullable: true
          type: string
        duplicate_charge_id:
          description: The Nexter ID for the prior charge which appears to be a duplicate
            of the disputed charge.
          maxLength: 5000
          nullable: true
          type: string
        product_description:
          description: A description of the product or service that was sold.
          maxLength: 150000
          nullable: true
          type: string
        receipt:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/file"
          description: "(ID of a [file upload](https://nexter.io/docs/guides/file-upload))
            Any receipt or message sent to the customer notifying them of the charge."
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/file"
        refund_policy:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/file"
          description: "(ID of a [file upload](https://nexter.io/docs/guides/file-upload))
            Your refund policy, as shown to the customer."
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/file"
        refund_policy_disclosure:
          description: Documentation demonstrating that the customer was shown your
            refund policy prior to purchase.
          maxLength: 150000
          nullable: true
          type: string
        refund_refusal_explanation:
          description: A justification for why the customer is not entitled to a refund.
          maxLength: 150000
          nullable: true
          type: string
        service_date:
          description: The date on which the customer received or began receiving
            the purchased service, in a clear human-readable format.
          maxLength: 5000
          nullable: true
          type: string
        service_documentation:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/file"
          description: "(ID of a [file upload](https://nexter.io/docs/guides/file-upload))
            Documentation showing proof that a service was provided to the customer.
            This could include a copy of a signed contract, work order, or other form
            of written agreement."
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/file"
        shipping_address:
          description: The address to which a physical product was shipped. You should
            try to include as complete address information as possible.
          maxLength: 5000
          nullable: true
          type: string
        shipping_carrier:
          description: The delivery service that shipped a physical product, such
            as Fedex, UPS, USPS, etc. If multiple carriers were used for this purchase,
            please separate them with commas.
          maxLength: 5000
          nullable: true
          type: string
        shipping_date:
          description: The date on which a physical product began its route to the
            shipping address, in a clear human-readable format.
          maxLength: 5000
          nullable: true
          type: string
        shipping_documentation:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/file"
          description: "(ID of a [file upload](https://nexter.io/docs/guides/file-upload))
            Documentation showing proof that a product was shipped to the customer
            at the same address the customer provided to you. This could include a
            copy of the shipment receipt, shipping label, etc. It should show the
            customer's full shipping address, if possible."
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/file"
        shipping_tracking_number:
          description: The tracking number for a physical product, obtained from the
            delivery service. If multiple tracking numbers were generated for this
            purchase, please separate them with commas.
          maxLength: 5000
          nullable: true
          type: string
        uncategorized_file:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/file"
          description: "(ID of a [file upload](https://nexter.io/docs/guides/file-upload))
            Any additional evidence or statements."
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/file"
        uncategorized_text:
          description: Any additional evidence or statements.
          maxLength: 150000
          nullable: true
          type: string
      title: DisputeEvidence
      type: object
      x-expandableFields:
      - cancellation_policy
      - customer_communication
      - customer_signature
      - duplicate_charge_documentation
      - receipt
      - refund_policy
      - service_documentation
      - shipping_documentation
      - uncategorized_file
    dispute_evidence_details:
      properties:
        due_by:
          description: Date by which evidence must be submitted in order to successfully
            challenge dispute. Will be null if the customer's bank or credit card
            company doesn't allow a response for this particular dispute.
          format: unix-time
          nullable: true
          type: integer
        has_evidence:
          description: Whether evidence has been staged for this dispute.
          type: boolean
        past_due:
          description: Whether the last evidence submission was submitted past the
            due date. Defaults to `false` if no evidence submissions have occurred.
            If `true`, then delivery of the latest evidence is *not* guaranteed.
          type: boolean
        submission_count:
          description: The number of times evidence has been submitted. Typically,
            you may only submit evidence once.
          type: integer
      required:
      - has_evidence
      - past_due
      - submission_count
      title: DisputeEvidenceDetails
      type: object
      x-expandableFields: []
    ephemeral_key:
      properties:
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        expires:
          description: Time at which the key will expire. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - ephemeral_key
          type: string
        secret:
          description: The key's secret. You can use this value to make authorized
            requests to the Nexter API.
          maxLength: 5000
          type: string
      required:
      - created
      - expires
      - id
      - livemode
      - object
      title: EphemeralKey
      type: object
      x-expandableFields: []
      x-resourceId: ephemeral_key
    error:
      description: An error response from the Nexter API
      properties:
        error:
          "$ref": "#/components/schemas/api_errors"
      required:
      - error
      type: object
    event:
      properties:
        api_version:
          description: 'The Nexter API version used to render `data`. *Note: This
            property is populated only for events on or after October 31, 2014*.'
          maxLength: 5000
          nullable: true
          type: string
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        data:
          "$ref": "#/components/schemas/notification_event_data"
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - event
          type: string
        pending_webhooks:
          description: Number of webhooks that have yet to be successfully delivered
            (i.e., to return a 20x response) to the URLs you've specified.
          type: integer
        request:
          anyOf:
          - "$ref": "#/components/schemas/notification_event_request"
          description: Information on the API request that instigated the event.
          nullable: true
        type:
          description: Description of the event (e.g., `invoice.created` or `charge.refunded`).
          maxLength: 5000
          type: string
      required:
      - created
      - data
      - id
      - livemode
      - object
      - pending_webhooks
      - type
      title: NotificationEvent
      type: object
      x-expandableFields:
      - data
      - request
      x-resourceId: event
    exchange_rate:
      properties:
        id:
          description: Unique identifier for the object. Represented as the three-letter
            [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html)
            in lowercase.
          maxLength: 5000
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - exchange_rate
          type: string
        rates:
          additionalProperties:
            type: number
          description: Hash where the keys are supported currencies and the values
            are the exchange rate at which the base id currency converts to the key
            currency.
          type: object
      required:
      - id
      - object
      - rates
      title: ExchangeRate
      type: object
      x-expandableFields: []
      x-resourceId: exchange_rate
    external_account:
      anyOf:
      - "$ref": "#/components/schemas/bank_account"
      - "$ref": "#/components/schemas/card"
      title: Polymorphic
      x-resourceId: external_account
    fee:
      properties:
        amount:
          description: Amount of the fee, in cents.
          type: integer
        application:
          maxLength: 5000
          nullable: true
          type: string
        currency:
          description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
            in lowercase. Must be a [supported currency](https://nexter.io/docs/currencies).
          maxLength: 3
          type: string
        description:
          description: An arbitrary string attached to the object. Often useful for
            displaying to users.
          maxLength: 5000
          nullable: true
          type: string
        type:
          description: 'Type of the fee, one of: `application_fee`, `nexter_fee` or
            `tax`.'
          maxLength: 5000
          type: string
      required:
      - amount
      - currency
      - type
      title: Fee
      type: object
      x-expandableFields: []
    fee_refund:
      properties:
        amount:
          description: Amount, in %s.
          type: integer
        balance_transaction:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/balance_transaction"
          description: Balance transaction that describes the impact on your account
            balance.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/balance_transaction"
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        currency:
          description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
            in lowercase. Must be a [supported currency](https://nexter.io/docs/currencies).
          maxLength: 3
          type: string
        fee:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/application_fee"
          description: ID of the application fee that was refunded.
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/application_fee"
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        metadata:
          additionalProperties:
            maxLength: 500
            type: string
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - fee_refund
          type: string
      required:
      - amount
      - created
      - currency
      - fee
      - id
      - metadata
      - object
      title: FeeRefund
      type: object
      x-expandableFields:
      - balance_transaction
      - fee
      x-resourceId: fee_refund
    file:
      properties:
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        filename:
          description: A filename for the file, suitable for saving to a filesystem.
          maxLength: 5000
          nullable: true
          type: string
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        links:
          nullable: true
          properties:
            data:
              items:
                "$ref": "#/components/schemas/file_link"
              type: array
            has_more:
              description: True if this list has another page of items after this
                one that can be fetched.
              type: boolean
            object:
              description: String representing the object's type. Objects of the same
                type share the same value. Always has the value `list`.
              enum:
              - list
              type: string
            url:
              description: The URL where this list can be accessed.
              maxLength: 5000
              type: string
          required:
          - data
          - has_more
          - object
          - url
          title: FileFileLinkList
          type: object
          x-expandableFields:
          - data
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - file
          type: string
        purpose:
          description: The purpose of the file. Possible values are `business_icon`,
            `business_logo`, `customer_signature`, `dispute_evidence`, `finance_report_run`,
            `identity_document`, `pci_document`, `sigma_scheduled_query`, or `tax_document_user_upload`.
          maxLength: 5000
          type: string
        size:
          description: The size in bytes of the file object.
          type: integer
        title:
          description: A user friendly title for the document.
          maxLength: 5000
          nullable: true
          type: string
        type:
          description: The type of the file returned (e.g., `csv`, `pdf`, `jpg`, or
            `png`).
          maxLength: 5000
          nullable: true
          type: string
        url:
          description: The URL from which the file can be downloaded using your live
            secret API key.
          maxLength: 5000
          nullable: true
          type: string
      required:
      - created
      - id
      - object
      - purpose
      - size
      title: File
      type: object
      x-expandableFields:
      - links
      x-resourceId: file
    file_link:
      properties:
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        expired:
          description: Whether this link is already expired.
          type: boolean
        expires_at:
          description: Time at which the link expires.
          format: unix-time
          nullable: true
          type: integer
        file:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/file"
          description: The file object this link points to.
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/file"
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        metadata:
          additionalProperties:
            maxLength: 500
            type: string
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - file_link
          type: string
        url:
          description: The publicly accessible URL to download the file.
          maxLength: 5000
          nullable: true
          type: string
      required:
      - created
      - expired
      - file
      - id
      - livemode
      - metadata
      - object
      title: FileLink
      type: object
      x-expandableFields:
      - file
      x-resourceId: file_link
    financial_reporting_finance_report_run_run_parameters:
      properties:
        columns:
          description: The set of output columns requested for inclusion in the report
            run.
          items:
            type: string
          type: array
        connected_account:
          description: Connected account ID by which to filter the report run.
          maxLength: 5000
          type: string
        currency:
          description: Currency of objects to be included in the report run.
          maxLength: 3
          type: string
        interval_end:
          description: Ending timestamp of data to be included in the report run (exclusive).
          format: unix-time
          type: integer
        interval_start:
          description: Starting timestamp of data to be included in the report run.
          format: unix-time
          type: integer
        payout:
          description: Payout ID by which to filter the report run.
          maxLength: 5000
          type: string
        reporting_category:
          description: Category of balance transactions to be included in the report
            run.
          maxLength: 5000
          type: string
      title: FinancialReportingFinanceReportRunRunParameters
      type: object
      x-expandableFields: []
    inventory:
      properties:
        quantity:
          description: The count of inventory available. Will be present if and only
            if `type` is `finite`.
          nullable: true
          type: integer
        type:
          description: Inventory type. Possible values are `finite`, `bucket` (not
            quantified), and `infinite`.
          maxLength: 5000
          type: string
        value:
          description: An indicator of the inventory available. Possible values are
            `in_stock`, `limited`, and `out_of_stock`. Will be present if and only
            if `type` is `bucket`.
          maxLength: 5000
          nullable: true
          type: string
      required:
      - type
      title: Inventory
      type: object
      x-expandableFields: []
    invoice:
      properties:
        account_country:
          description: The country of the business associated with this invoice, most
            often the business creating the invoice.
          maxLength: 5000
          nullable: true
          type: string
        account_name:
          description: The public name of the business associated with this invoice,
            most often the business creating the invoice.
          maxLength: 5000
          nullable: true
          type: string
        amount_due:
          description: Final amount due at this time for this invoice. If the invoice's
            total is smaller than the minimum charge amount, for example, or if there
            is account credit that can be applied to the invoice, the `amount_due`
            may be 0. If there is a positive `starting_balance` for the invoice (the
            customer owes money), the `amount_due` will also take that into account.
            The charge that gets generated for the invoice will be for the amount
            specified in `amount_due`.
          type: integer
        amount_paid:
          description: The amount, in %s, that was paid.
          type: integer
        amount_remaining:
          description: The amount remaining, in %s, that is due.
          type: integer
        application_fee_amount:
          description: The fee in %s that will be applied to the invoice and transferred
            to the application owner's Nexter account when the invoice is paid.
          nullable: true
          type: integer
        attempt_count:
          description: Number of payment attempts made for this invoice, from the
            perspective of the payment retry schedule. Any payment attempt counts
            as the first attempt, and subsequently only automatic retries increment
            the attempt count. In other words, manual payment attempts after the first
            attempt do not affect the retry schedule.
          type: integer
        attempted:
          description: Whether an attempt has been made to pay the invoice. An invoice
            is not attempted until 1 hour after the `invoice.created` webhook, for
            example, so you might not want to display that invoice as unpaid to your
            users.
          type: boolean
        auto_advance:
          description: Controls whether Nexter will perform [automatic collection](https://nexter.io/docs/billing/invoices/workflow/#auto_advance)
            of the invoice. When `false`, the invoice's state will not automatically
            advance without an explicit action.
          type: boolean
        billing:
          description: Either `charge_automatically`, or `send_invoice`. When charging
            automatically, Nexter will attempt to pay this invoice using the default
            source attached to the customer. When sending an invoice, Nexter will
            email this invoice to the customer with payment instructions.
          enum:
          - charge_automatically
          - send_invoice
          nullable: true
          type: string
        billing_reason:
          description: 'Indicates the reason why the invoice was created. `subscription_cycle`
            indicates an invoice created by a subscription advancing into a new period.
            `subscription_create` indicates an invoice created due to creating a subscription.
            `subscription_update` indicates an invoice created due to updating a subscription.
            `subscription` is set for all old invoices to indicate either a change
            to a subscription or a period advancement. `manual` is set for all invoices
            unrelated to a subscription (for example: created via the invoice editor).
            The `upcoming` value is reserved for simulated invoices per the upcoming
            invoice endpoint. `subscription_threshold` indicates an invoice created
            due to a billing threshold being reached.'
          enum:
          - automatic_pending_invoice_item_invoice
          - manual
          - subscription
          - subscription_create
          - subscription_cycle
          - subscription_threshold
          - subscription_update
          - upcoming
          nullable: true
          type: string
        charge:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/charge"
          description: ID of the latest charge generated for this invoice, if any.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/charge"
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        currency:
          description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
            in lowercase. Must be a [supported currency](https://nexter.io/docs/currencies).
          maxLength: 3
          type: string
        custom_fields:
          description: Custom fields displayed on the invoice.
          items:
            "$ref": "#/components/schemas/invoice_setting_custom_field"
          nullable: true
          type: array
        customer:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/customer"
          - "$ref": "#/components/schemas/deleted_customer"
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/customer"
            - "$ref": "#/components/schemas/deleted_customer"
        customer_address:
          anyOf:
          - "$ref": "#/components/schemas/address"
          description: The customer's address. Until the invoice is finalized, this
            field will equal `customer.address`. Once the invoice is finalized, this
            field will no longer be updated.
          nullable: true
        customer_email:
          description: The customer's email. Until the invoice is finalized, this
            field will equal `customer.email`. Once the invoice is finalized, this
            field will no longer be updated.
          maxLength: 5000
          nullable: true
          type: string
        customer_name:
          description: The customer's name. Until the invoice is finalized, this field
            will equal `customer.name`. Once the invoice is finalized, this field
            will no longer be updated.
          maxLength: 5000
          nullable: true
          type: string
        customer_phone:
          description: The customer's phone number. Until the invoice is finalized,
            this field will equal `customer.phone`. Once the invoice is finalized,
            this field will no longer be updated.
          maxLength: 5000
          nullable: true
          type: string
        customer_shipping:
          anyOf:
          - "$ref": "#/components/schemas/shipping"
          description: The customer's shipping information. Until the invoice is finalized,
            this field will equal `customer.shipping`. Once the invoice is finalized,
            this field will no longer be updated.
          nullable: true
        customer_tax_exempt:
          description: The customer's tax exempt status. Until the invoice is finalized,
            this field will equal `customer.tax_exempt`. Once the invoice is finalized,
            this field will no longer be updated.
          enum:
          - exempt
          - none
          - reverse
          nullable: true
          type: string
        customer_tax_ids:
          description: The customer's tax IDs. Until the invoice is finalized, this
            field will contain the same tax IDs as `customer.tax_ids`. Once the invoice
            is finalized, this field will no longer be updated.
          items:
            "$ref": "#/components/schemas/invoices_resource_invoice_tax_id"
          nullable: true
          type: array
        default_payment_method:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/payment_method"
          description: ID of the default payment method for the invoice. It must belong
            to the customer associated with the invoice. If not set, defaults to the
            subscription's default payment method, if any, or to the default payment
            method in the customer's invoice settings.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/payment_method"
        default_source:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/alipay_account"
          - "$ref": "#/components/schemas/bank_account"
          - "$ref": "#/components/schemas/bitcoin_receiver"
          - "$ref": "#/components/schemas/card"
          - "$ref": "#/components/schemas/source"
          description: ID of the default payment source for the invoice. It must belong
            to the customer associated with the invoice and be in a chargeable state.
            If not set, defaults to the subscription's default source, if any, or
            to the customer's default source.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/alipay_account"
            - "$ref": "#/components/schemas/bank_account"
            - "$ref": "#/components/schemas/bitcoin_receiver"
            - "$ref": "#/components/schemas/card"
            - "$ref": "#/components/schemas/source"
        default_tax_rates:
          description: The tax rates applied to this invoice, if any.
          items:
            "$ref": "#/components/schemas/tax_rate"
          nullable: true
          type: array
        description:
          description: An arbitrary string attached to the object. Often useful for
            displaying to users. Referenced as 'memo' in the Dashboard.
          maxLength: 5000
          nullable: true
          type: string
        discount:
          anyOf:
          - "$ref": "#/components/schemas/discount"
          nullable: true
        due_date:
          description: The date on which payment for this invoice is due. This value
            will be `null` for invoices where `billing=charge_automatically`.
          format: unix-time
          nullable: true
          type: integer
        ending_balance:
          description: Ending customer balance after the invoice is finalized. Invoices
            are finalized approximately an hour after successful webhook delivery
            or when payment collection is attempted for the invoice. If the invoice
            has not been finalized yet, this will be null.
          nullable: true
          type: integer
        footer:
          description: Footer displayed on the invoice.
          maxLength: 5000
          nullable: true
          type: string
        hosted_invoice_url:
          description: The URL for the hosted invoice page, which allows customers
            to view and pay an invoice. If the invoice has not been finalized yet,
            this will be null.
          maxLength: 5000
          nullable: true
          type: string
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        invoice_pdf:
          description: The link to download the PDF for the invoice. If the invoice
            has not been finalized yet, this will be null.
          maxLength: 5000
          nullable: true
          type: string
        lines:
          description: 'The individual line items that make up the invoice. `lines`
            is sorted as follows: invoice items in reverse chronological order, followed
            by the subscription, if any.'
          properties:
            data:
              items:
                "$ref": "#/components/schemas/line_item"
              type: array
            has_more:
              description: True if this list has another page of items after this
                one that can be fetched.
              type: boolean
            object:
              description: String representing the object's type. Objects of the same
                type share the same value. Always has the value `list`.
              enum:
              - list
              type: string
            url:
              description: The URL where this list can be accessed.
              maxLength: 5000
              type: string
          required:
          - data
          - has_more
          - object
          - url
          title: InvoiceLinesList
          type: object
          x-expandableFields:
          - data
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        metadata:
          additionalProperties:
            maxLength: 500
            type: string
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
          nullable: true
          type: object
        next_payment_attempt:
          description: The time at which payment will next be attempted. This value
            will be `null` for invoices where `billing=send_invoice`.
          format: unix-time
          nullable: true
          type: integer
        number:
          description: A unique, identifying string that appears on emails sent to
            the customer for this invoice. This starts with the customer's unique
            invoice_prefix if it is specified.
          maxLength: 5000
          nullable: true
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - invoice
          type: string
        paid:
          description: Whether payment was successfully collected for this invoice.
            An invoice can be paid (most commonly) with a charge or with credit from
            the customer's account balance.
          type: boolean
        payment_intent:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/payment_intent"
          description: The PaymentIntent associated with this invoice. The PaymentIntent
            is generated when the invoice is finalized, and can then be used to pay
            the invoice. Note that voiding an invoice will cancel the PaymentIntent.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/payment_intent"
        period_end:
          description: End of the usage period during which invoice items were added
            to this invoice.
          format: unix-time
          type: integer
        period_start:
          description: Start of the usage period during which invoice items were added
            to this invoice.
          format: unix-time
          type: integer
        post_payment_credit_notes_amount:
          description: Total amount of all post-payment credit notes issued for this
            invoice.
          type: integer
        pre_payment_credit_notes_amount:
          description: Total amount of all pre-payment credit notes issued for this
            invoice.
          type: integer
        receipt_number:
          description: This is the transaction number that appears on email receipts
            sent for this invoice.
          maxLength: 5000
          nullable: true
          type: string
        starting_balance:
          description: Starting customer balance before the invoice is finalized.
            If the invoice has not been finalized yet, this will be the current customer
            balance.
          type: integer
        statement_descriptor:
          description: Extra information about an invoice for the customer's credit
            card statement.
          maxLength: 5000
          nullable: true
          type: string
        status:
          description: The status of the invoice, one of `draft`, `open`, `paid`,
            `uncollectible`, or `void`. [Learn more](https://nexter.io/docs/billing/invoices/workflow#workflow-overview)
          enum:
          - deleted
          - draft
          - open
          - paid
          - uncollectible
          - void
          nullable: true
          type: string
        status_transitions:
          "$ref": "#/components/schemas/invoices_status_transitions"
        subscription:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/subscription"
          description: The subscription that this invoice was prepared for, if any.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/subscription"
        subscription_proration_date:
          description: Only set for upcoming invoices that preview prorations. The
            time used to calculate prorations.
          type: integer
        subtotal:
          description: Total of all subscriptions, invoice items, and prorations on
            the invoice before any discount is applied.
          type: integer
        tax:
          description: The amount of tax on this invoice. This is the sum of all the
            tax amounts on this invoice.
          nullable: true
          type: integer
        tax_percent:
          description: This percentage of the subtotal has been added to the total
            amount of the invoice, including invoice line items and discounts. This
            field is inherited from the subscription's `tax_percent` field, but can
            be changed before the invoice is paid. This field defaults to null.
          nullable: true
          type: number
        threshold_reason:
          "$ref": "#/components/schemas/invoice_threshold_reason"
        total:
          description: Total after discount.
          type: integer
        total_tax_amounts:
          description: The aggregate amounts calculated per tax rate for all line
            items.
          items:
            "$ref": "#/components/schemas/tax_amount"
          nullable: true
          type: array
        webhooks_delivered_at:
          description: The time at which webhooks for this invoice were successfully
            delivered (if the invoice had no webhooks to deliver, this will match
            `created`). Invoice payment is delayed until webhooks are delivered, or
            until all webhook delivery attempts have been exhausted.
          format: unix-time
          nullable: true
          type: integer
      required:
      - amount_due
      - amount_paid
      - amount_remaining
      - attempt_count
      - attempted
      - created
      - currency
      - customer
      - lines
      - livemode
      - object
      - paid
      - period_end
      - period_start
      - post_payment_credit_notes_amount
      - pre_payment_credit_notes_amount
      - starting_balance
      - status_transitions
      - subtotal
      - total
      title: Invoice
      type: object
      x-expandableFields:
      - charge
      - custom_fields
      - customer
      - customer_address
      - customer_shipping
      - customer_tax_ids
      - default_payment_method
      - default_source
      - default_tax_rates
      - discount
      - lines
      - payment_intent
      - status_transitions
      - subscription
      - threshold_reason
      - total_tax_amounts
      x-resourceId: invoice
    invoice_item_threshold_reason:
      properties:
        line_item_ids:
          description: The IDs of the line items that triggered the threshold invoice.
          items:
            type: string
          type: array
        usage_gte:
          description: The quantity threshold boundary that applied to the given line
            item.
          type: integer
      required:
      - line_item_ids
      - usage_gte
      title: InvoiceItemThresholdReason
      type: object
      x-expandableFields: []
    invoice_line_item_period:
      properties:
        end:
          description: End of the line item's billing period
          type: integer
        start:
          description: Start of the line item's billing period
          type: integer
      required:
      - end
      - start
      title: InvoiceLineItemPeriod
      type: object
      x-expandableFields: []
    invoice_setting_custom_field:
      properties:
        name:
          description: The name of the custom field.
          maxLength: 5000
          type: string
        value:
          description: The value of the custom field.
          maxLength: 5000
          type: string
      required:
      - name
      - value
      title: InvoiceSettingCustomField
      type: object
      x-expandableFields: []
    invoice_setting_customer_setting:
      properties:
        custom_fields:
          description: Default custom fields to be displayed on invoices for this
            customer.
          items:
            "$ref": "#/components/schemas/invoice_setting_custom_field"
          nullable: true
          type: array
        default_payment_method:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/payment_method"
          description: ID of the default payment method used for subscriptions and
            invoices for the customer.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/payment_method"
        footer:
          description: Default footer to be displayed on invoices for this customer.
          maxLength: 5000
          nullable: true
          type: string
      title: InvoiceSettingCustomerSetting
      type: object
      x-expandableFields:
      - custom_fields
      - default_payment_method
    invoice_setting_subscription_schedule_setting:
      properties:
        days_until_due:
          description: Number of days within which a customer must pay invoices generated
            by this subscription schedule. This value will be `null` for subscription
            schedules where `billing=charge_automatically`.
          nullable: true
          type: integer
      title: InvoiceSettingSubscriptionScheduleSetting
      type: object
      x-expandableFields: []
    invoice_threshold_reason:
      properties:
        amount_gte:
          description: The total invoice amount threshold boundary if it triggered
            the threshold invoice.
          nullable: true
          type: integer
        item_reasons:
          description: Indicates which line items triggered a threshold invoice.
          items:
            "$ref": "#/components/schemas/invoice_item_threshold_reason"
          type: array
      required:
      - item_reasons
      title: InvoiceThresholdReason
      type: object
      x-expandableFields:
      - item_reasons
    invoiceitem:
      properties:
        amount:
          description: Amount (in the `currency` specified) of the invoice item. This
            should always be equal to `unit_amount * quantity`.
          type: integer
        currency:
          description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
            in lowercase. Must be a [supported currency](https://nexter.io/docs/currencies).
          maxLength: 3
          type: string
        customer:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/customer"
          - "$ref": "#/components/schemas/deleted_customer"
          description: The ID of the customer who will be billed when this invoice
            item is billed.
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/customer"
            - "$ref": "#/components/schemas/deleted_customer"
        date:
          format: unix-time
          type: integer
        description:
          description: An arbitrary string attached to the object. Often useful for
            displaying to users.
          maxLength: 5000
          nullable: true
          type: string
        discountable:
          description: If true, discounts will apply to this invoice item. Always
            false for prorations.
          type: boolean
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        invoice:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/invoice"
          description: The ID of the invoice this invoice item belongs to.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/invoice"
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        metadata:
          additionalProperties:
            maxLength: 500
            type: string
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - invoiceitem
          type: string
        period:
          "$ref": "#/components/schemas/invoice_line_item_period"
        plan:
          anyOf:
          - "$ref": "#/components/schemas/plan"
          description: If the invoice item is a proration, the plan of the subscription
            that the proration was computed for.
          nullable: true
        proration:
          description: Whether the invoice item was created automatically as a proration
            adjustment when the customer switched plans.
          type: boolean
        quantity:
          description: Quantity of units for the invoice item. If the invoice item
            is a proration, the quantity of the subscription that the proration was
            computed for.
          type: integer
        subscription:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/subscription"
          description: The subscription that this invoice item has been created for,
            if any.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/subscription"
        subscription_item:
          maxLength: 5000
          type: string
        tax_rates:
          description: The tax rates which apply to the invoice item. When set, the
            `default_tax_rates` on the invoice do not apply to this invoice item.
          items:
            "$ref": "#/components/schemas/tax_rate"
          nullable: true
          type: array
        unit_amount:
          description: Unit Amount (in the `currency` specified) of the invoice item.
          type: integer
      required:
      - amount
      - currency
      - customer
      - date
      - discountable
      - id
      - livemode
      - metadata
      - object
      - period
      - proration
      - quantity
      - unit_amount
      title: InvoiceItem
      type: object
      x-expandableFields:
      - customer
      - invoice
      - period
      - plan
      - subscription
      - tax_rates
      x-resourceId: invoiceitem
    invoices_resource_invoice_tax_id:
      properties:
        type:
          description: The type of the tax ID, one of `eu_vat`, `nz_gst`, `au_abn`,
            or `unknown`
          enum:
          - au_abn
          - eu_vat
          - nz_gst
          - unknown
          type: string
        value:
          description: The value of the tax ID.
          maxLength: 5000
          nullable: true
          type: string
      required:
      - type
      title: InvoicesResourceInvoiceTaxID
      type: object
      x-expandableFields: []
    invoices_status_transitions:
      properties:
        finalized_at:
          description: The time that the invoice draft was finalized.
          format: unix-time
          nullable: true
          type: integer
        marked_uncollectible_at:
          description: The time that the invoice was marked uncollectible.
          format: unix-time
          nullable: true
          type: integer
        paid_at:
          description: The time that the invoice was paid.
          format: unix-time
          nullable: true
          type: integer
        voided_at:
          description: The time that the invoice was voided.
          format: unix-time
          nullable: true
          type: integer
      title: InvoicesStatusTransitions
      type: object
      x-expandableFields: []
    issuer_fraud_record:
      properties:
        actionable:
          description: An IFR is actionable if it has not received a dispute and has
            not been fully refunded. You may wish to proactively refund a charge that
            receives an IFR, in order to avoid receiving a dispute later.
          type: boolean
        charge:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/charge"
          description: ID of the charge this issuer fraud record is for, optionally
            expanded.
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/charge"
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        fraud_type:
          description: The type of fraud labelled by the issuer. One of `card_never_received`,
            `fraudulent_card_application`, `made_with_counterfeit_card`, `made_with_lost_card`,
            `made_with_stolen_card`, `misc`, `unauthorized_use_of_card`.
          maxLength: 5000
          type: string
        has_liability_shift:
          description: If true, the associated charge is subject to [liability shift](https://nexter.io/docs/sources/three-d-secure#disputed-payments).
          type: boolean
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - issuer_fraud_record
          type: string
        post_date:
          description: The timestamp at which the card issuer posted the issuer fraud
            record.
          type: integer
      required:
      - actionable
      - charge
      - created
      - fraud_type
      - has_liability_shift
      - id
      - livemode
      - object
      - post_date
      title: IssuerFraudRecord
      type: object
      x-expandableFields:
      - charge
      x-resourceId: issuer_fraud_record
    issuing.authorization:
      properties:
        approved:
          description: Whether the authorization has been approved.
          type: boolean
        authorization_method:
          description: How the card details were provided. One of `keyed_in`, `swipe`,
            `chip`, `contactless`, or `online`.
          maxLength: 5000
          type: string
        authorized_amount:
          description: The amount that has been authorized. This will be `0` when
            the object is created, and increase after it has been approved.
          type: integer
        authorized_currency:
          description: The currency that was presented to the cardholder for the authorization.
            Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
            in lowercase. Must be a [supported currency](https://nexter.io/docs/currencies).
          maxLength: 3
          type: string
        balance_transactions:
          items:
            "$ref": "#/components/schemas/balance_transaction"
          type: array
        card:
          "$ref": "#/components/schemas/issuing.card"
        cardholder:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/issuing.cardholder"
          description: The cardholder to whom this authorization belongs.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/issuing.cardholder"
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        held_amount:
          description: The amount the authorization is expected to be in `held_currency`.
            When Nexter holds funds from you, this is the amount reserved for the
            authorization. This will be `0` when the object is created, and increase
            after it has been approved. For multi-currency transactions, `held_amount`
            can be used to determine the expected exchange rate.
          type: integer
        held_currency:
          description: The currency of the [held amount](https://nexter.io/docs/api#issuing_authorization_object-held_amount).
            This will always be the card currency.
          maxLength: 3
          type: string
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        is_held_amount_controllable:
          type: boolean
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        merchant_data:
          "$ref": "#/components/schemas/issuing_authorization_merchant_data"
        metadata:
          additionalProperties:
            maxLength: 500
            type: string
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - issuing.authorization
          type: string
        pending_authorized_amount:
          description: The amount the user is requesting to be authorized. This field
            will only be non-zero during an `issuing.authorization.request` webhook.
          type: integer
        pending_held_amount:
          description: The additional amount Nexter will hold if the authorization
            is approved. This field will only be non-zero during an `issuing.authorization.request`
            webhook.
          type: integer
        request_history:
          items:
            "$ref": "#/components/schemas/issuing_authorization_request"
          type: array
        status:
          description: One of `pending`, `reversed`, or `closed`.
          maxLength: 5000
          type: string
        transactions:
          items:
            "$ref": "#/components/schemas/issuing.transaction"
          type: array
        verification_data:
          "$ref": "#/components/schemas/issuing_authorization_verification_data"
        wallet_provider:
          description: What, if any, digital wallet was used for this authorization.
            One of `apple_pay`, `google_pay`, or `samsung_pay`.
          maxLength: 5000
          nullable: true
          type: string
      required:
      - approved
      - authorization_method
      - authorized_amount
      - authorized_currency
      - balance_transactions
      - card
      - created
      - held_amount
      - held_currency
      - id
      - is_held_amount_controllable
      - livemode
      - merchant_data
      - metadata
      - object
      - pending_authorized_amount
      - pending_held_amount
      - request_history
      - status
      - transactions
      - verification_data
      title: IssuingAuthorization
      type: object
      x-expandableFields:
      - balance_transactions
      - card
      - cardholder
      - merchant_data
      - request_history
      - transactions
      - verification_data
      x-resourceId: issuing.authorization
    issuing.card:
      properties:
        authorization_controls:
          "$ref": "#/components/schemas/issuing_card_authorization_controls"
        brand:
          description: The brand of the card.
          maxLength: 5000
          type: string
        cardholder:
          anyOf:
          - "$ref": "#/components/schemas/issuing.cardholder"
          description: The [Cardholder](https://nexter.io/docs/api#issuing_cardholder_object)
            object to which the card belongs.
          nullable: true
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        currency:
          description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
            in lowercase. Must be a [supported currency](https://nexter.io/docs/currencies).
          maxLength: 3
          type: string
        exp_month:
          description: The expiration month of the card.
          type: integer
        exp_year:
          description: The expiration year of the card.
          type: integer
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        last4:
          description: The last 4 digits of the card number.
          maxLength: 5000
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        metadata:
          additionalProperties:
            maxLength: 500
            type: string
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
          type: object
        name:
          description: The name of the cardholder, printed on the card.
          maxLength: 5000
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - issuing.card
          type: string
        replacement_for:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/issuing.card"
          description: The card this card replaces, if any.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/issuing.card"
        replacement_reason:
          description: Why the card that this card replaces (if any) needed to be
            replaced.
          enum:
          - damage
          - expiration
          - loss
          - theft
          nullable: true
          type: string
        shipping:
          anyOf:
          - "$ref": "#/components/schemas/issuing_card_shipping"
          description: Where and how the card will be shipped.
          nullable: true
        status:
          description: One of `active`, `inactive`, `canceled`, `lost`, `stolen`,
            or `pending`.
          enum:
          - active
          - canceled
          - inactive
          - lost
          - pending
          - stolen
          type: string
        type:
          description: One of `virtual` or `physical`.
          maxLength: 5000
          type: string
      required:
      - authorization_controls
      - brand
      - created
      - currency
      - exp_month
      - exp_year
      - id
      - last4
      - livemode
      - metadata
      - name
      - object
      - status
      - type
      title: IssuingCard
      type: object
      x-expandableFields:
      - authorization_controls
      - cardholder
      - replacement_for
      - shipping
      x-resourceId: issuing.card
    issuing.card_details:
      properties:
        card:
          "$ref": "#/components/schemas/issuing.card"
        cvc:
          description: The CVC number for the card.
          maxLength: 5000
          type: string
        exp_month:
          description: The expiration month of the card.
          type: integer
        exp_year:
          description: The expiration year of the card.
          type: integer
        number:
          description: The card number.
          maxLength: 5000
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - issuing.card_details
          type: string
      required:
      - card
      - cvc
      - exp_month
      - exp_year
      - number
      - object
      title: IssuingCardDetails
      type: object
      x-expandableFields:
      - card
      x-resourceId: issuing.card_details
    issuing.card_pin:
      properties:
        card:
          "$ref": "#/components/schemas/issuing.card"
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - issuing.card_pin
          type: string
        pin:
          description: The PIN (4 digits number)
          maxLength: 5000
          nullable: true
          type: string
      required:
      - card
      - object
      title: IssuingPinPinResponse
      type: object
      x-expandableFields:
      - card
      x-resourceId: issuing.card_pin
    issuing.cardholder:
      properties:
        authorization_controls:
          anyOf:
          - "$ref": "#/components/schemas/issuing_cardholder_authorization_controls"
          nullable: true
        billing:
          "$ref": "#/components/schemas/issuing_cardholder_address"
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        email:
          description: The cardholder's email address.
          maxLength: 5000
          nullable: true
          type: string
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        is_default:
          description: Whether or not this cardholder is the default cardholder.
          type: boolean
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        metadata:
          additionalProperties:
            maxLength: 500
            type: string
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
          type: object
        name:
          description: The cardholder's name. This will be printed on cards issued
            to them.
          maxLength: 5000
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - issuing.cardholder
          type: string
        phone_number:
          description: The cardholder's phone number.
          maxLength: 5000
          nullable: true
          type: string
        status:
          description: One of `active`, `inactive`, `blocked`, or `pending`.
          enum:
          - active
          - blocked
          - inactive
          - pending
          type: string
        type:
          description: One of `individual` or `business_entity`.
          maxLength: 5000
          type: string
      required:
      - billing
      - created
      - id
      - is_default
      - livemode
      - metadata
      - name
      - object
      - status
      - type
      title: IssuingCardholder
      type: object
      x-expandableFields:
      - authorization_controls
      - billing
      x-resourceId: issuing.cardholder
    issuing.dispute:
      properties:
        amount:
          description: Disputed amount. Usually the amount of the `disputed_transaction`,
            but can differ (usually because of currency fluctuation or because only
            part of the order is disputed).
          type: integer
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        currency:
          description: The currency the `disputed_transaction` was made in.
          maxLength: 3
          type: string
        disputed_transaction:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/issuing.transaction"
          description: The transaction being disputed.
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/issuing.transaction"
        evidence:
          "$ref": "#/components/schemas/issuing_dispute_evidence"
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        metadata:
          additionalProperties:
            maxLength: 500
            type: string
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format. Individual keys can be unset by posting an empty value
            to them. All keys can be unset by posting an empty value to `metadata`.
          type: object
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - issuing.dispute
          type: string
        reason:
          description: Reason for this dispute. One of `other` or `fraudulent`.
          maxLength: 5000
          type: string
        status:
          description: Current status of dispute. One of `unsubmitted`, `under_review`,
            `won`, or `lost`.
          maxLength: 5000
          type: string
      required:
      - amount
      - created
      - currency
      - disputed_transaction
      - evidence
      - id
      - livemode
      - metadata
      - object
      - reason
      - status
      title: IssuingDispute
      type: object
      x-expandableFields:
      - disputed_transaction
      - evidence
      x-resourceId: issuing.dispute
    issuing.settlement:
      properties:
        bin:
          description: The Bank Identification Number reflecting this settlement record.
          maxLength: 5000
          type: string
        clearing_date:
          description: The date that the transactions are cleared and posted to user's
            accounts.
          type: integer
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        currency:
          description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
            in lowercase. Must be a [supported currency](https://nexter.io/docs/currencies).
          maxLength: 3
          type: string
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        interchange_fees:
          description: The total interchange received as reimbursement for the transactions.
          type: integer
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        metadata:
          additionalProperties:
            maxLength: 500
            type: string
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
          type: object
        net_total:
          description: The total net amount required to settle with the network.
          type: integer
        network_fees:
          description: The total amount of fees owed to the network.
          type: integer
        network_settlement_identifier:
          description: The Settlement Identification Number assigned by the network.
          maxLength: 5000
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - issuing.settlement
          type: string
        settlement_service:
          description: One of `international` or `uk_national_net`.
          maxLength: 5000
          type: string
        transaction_count:
          description: The total number of transactions reflected in this settlement.
          type: integer
        transaction_volume:
          description: The total transaction amount reflected in this settlement.
          type: integer
      required:
      - bin
      - clearing_date
      - created
      - currency
      - id
      - interchange_fees
      - livemode
      - metadata
      - net_total
      - network_fees
      - network_settlement_identifier
      - object
      - settlement_service
      - transaction_count
      - transaction_volume
      title: IssuingSettlement
      type: object
      x-expandableFields: []
      x-resourceId: issuing.settlement
    issuing.transaction:
      properties:
        amount:
          type: integer
        authorization:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/issuing.authorization"
          description: The `Authorization` object that led to this transaction.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/issuing.authorization"
        balance_transaction:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/balance_transaction"
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/balance_transaction"
        card:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/issuing.card"
          description: The card used to make this transaction.
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/issuing.card"
        cardholder:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/issuing.cardholder"
          description: The cardholder to whom this transaction belongs.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/issuing.cardholder"
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        currency:
          description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
            in lowercase. Must be a [supported currency](https://nexter.io/docs/currencies).
          maxLength: 3
          type: string
        dispute:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/issuing.dispute"
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/issuing.dispute"
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        merchant_data:
          "$ref": "#/components/schemas/issuing_authorization_merchant_data"
        metadata:
          additionalProperties:
            maxLength: 500
            type: string
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - issuing.transaction
          type: string
        type:
          description: One of `capture`, `refund`, `cash_withdrawal`, `refund_reversal`,
            `dispute`, or `dispute_loss`.
          maxLength: 5000
          type: string
      required:
      - amount
      - card
      - created
      - currency
      - id
      - livemode
      - merchant_data
      - metadata
      - object
      - type
      title: IssuingTransaction
      type: object
      x-expandableFields:
      - authorization
      - balance_transaction
      - card
      - cardholder
      - dispute
      - merchant_data
      x-resourceId: issuing.transaction
    issuing.verification:
      properties:
        card:
          description: The id of the `Card` on which the verification was requested
          maxLength: 5000
          type: string
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        expires_at:
          description: Timestamp of the expiry for that verification
          format: unix-time
          type: integer
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - issuing.verification
          type: string
        scope:
          description: The scope of the verification (one of `card_pin_retrieve` or
            `card_pin_update`)
          enum:
          - card_pin_retrieve
          - card_pin_update
          type: string
        verification_method:
          description: The method by which the cardholder will be sent a one-time
            code (one of `email` or `sms`)
          enum:
          - email
          - sms
          type: string
      required:
      - card
      - created
      - expires_at
      - id
      - object
      - scope
      - verification_method
      title: IssuingVerification
      type: object
      x-expandableFields: []
      x-resourceId: issuing.verification
    issuing_authorization_merchant_data:
      properties:
        category:
          description: A categorization of the seller's type of business. See our
            [merchant categories guide](https://nexter.io/docs/issuing/merchant-categories)
            for a list of possible values.
          maxLength: 5000
          type: string
        city:
          description: City where the seller is located
          maxLength: 5000
          nullable: true
          type: string
        country:
          description: Country where the seller is located
          maxLength: 5000
          nullable: true
          type: string
        name:
          description: Name of the seller
          maxLength: 5000
          nullable: true
          type: string
        network_id:
          description: Identifier assigned to the seller by the card brand
          maxLength: 5000
          type: string
        postal_code:
          description: Postal code where the seller is located
          maxLength: 5000
          nullable: true
          type: string
        state:
          description: State where the seller is located
          maxLength: 5000
          nullable: true
          type: string
      required:
      - category
      - network_id
      title: IssuingAuthorizationMerchantData
      type: object
      x-expandableFields: []
    issuing_authorization_request:
      properties:
        approved:
          description: Whether this request was approved.
          type: boolean
        authorized_amount:
          description: The amount that was authorized at the time of this request
          type: integer
        authorized_currency:
          description: The currency that was presented to the cardholder for the authorization.
            Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
            in lowercase. Must be a [supported currency](https://nexter.io/docs/currencies).
          maxLength: 5000
          type: string
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        held_amount:
          description: The amount Nexter held from your account to fund the authorization,
            if the request was approved
          type: integer
        held_currency:
          description: The currency of the [held amount](https://nexter.io/docs/api#issuing_authorization_object-held_amount)
          maxLength: 5000
          type: string
        reason:
          description: One of `authorization_controls`, `card_active`, `card_inactive`,
            `insufficient_funds`, `account_compliance_disabled`, `account_inactive`,
            `suspected_fraud`, `webhook_approved`, `webhook_declined`, or `webhook_timeout`.
          maxLength: 5000
          type: string
      required:
      - approved
      - authorized_amount
      - authorized_currency
      - created
      - held_amount
      - held_currency
      - reason
      title: IssuingAuthorizationRequest
      type: object
      x-expandableFields: []
    issuing_authorization_verification_data:
      properties:
        address_line1_check:
          description: One of `match`, `mismatch`, or `not_provided`.
          maxLength: 5000
          type: string
        address_zip_check:
          description: One of `match`, `mismatch`, or `not_provided`.
          maxLength: 5000
          type: string
        cvc_check:
          description: One of `match`, `mismatch`, or `not_provided`.
          maxLength: 5000
          type: string
      required:
      - address_line1_check
      - address_zip_check
      - cvc_check
      title: IssuingAuthorizationVerificationData
      type: object
      x-expandableFields: []
    issuing_card_authorization_controls:
      properties:
        allowed_categories:
          description: Array of strings containing [categories](https://nexter.io/docs/api#issuing_authorization_object-merchant_data-category)
            of authorizations permitted on this card.
          items:
            type: string
          nullable: true
          type: array
        blocked_categories:
          description: Array of strings containing [categories](https://nexter.io/docs/api#issuing_authorization_object-merchant_data-category)
            of authorizations to always decline on this card.
          items:
            type: string
          nullable: true
          type: array
        currency:
          description: The currency of the card. See [max_amount](https://nexter.io/docs/api#issuing_card_object-authorization_controls-max_amount)
          maxLength: 3
          nullable: true
          type: string
        max_amount:
          description: Maximum amount allowed per authorization on this card, in the
            currency of the card. Authorization amounts in a different currency will
            be converted to the card's currency when evaluating this control.
          nullable: true
          type: integer
        max_approvals:
          description: Maximum count of approved authorizations on this card. Counts
            all authorizations retroactively.
          nullable: true
          type: integer
        spending_limits:
          description: Limit the spending with rules based on time intervals and categories.
          items:
            "$ref": "#/components/schemas/issuing_card_spending_limit"
          nullable: true
          type: array
      title: IssuingCardAuthorizationControls
      type: object
      x-expandableFields:
      - spending_limits
    issuing_card_shipping:
      properties:
        address:
          "$ref": "#/components/schemas/address"
        carrier:
          description: The delivery service that shipped a physical product, such
            as Fedex, UPS, USPS, etc.
          maxLength: 5000
          nullable: true
          type: string
        eta:
          description: A unix timestamp representing a best estimate of when the card
            will be delivered.
          format: unix-time
          nullable: true
          type: integer
        name:
          description: Recipient name.
          maxLength: 5000
          type: string
        phone:
          description: Recipient phone (including extension).
          maxLength: 5000
          nullable: true
          type: string
        status:
          description: The delivery status of the card. One of `pending`, `shipped`,
            `delivered`, `returned`, `failure`, or `canceled`.
          maxLength: 5000
          nullable: true
          type: string
        tracking_number:
          description: The tracking number for a physical product, obtained from the
            delivery service. If multiple tracking numbers were generated for this
            purchase, please separate them with commas.
          maxLength: 5000
          nullable: true
          type: string
        tracking_url:
          description: A link to the shipping carrier's site where you can view detailed
            information about a card shipment.
          maxLength: 5000
          nullable: true
          type: string
      required:
      - address
      - name
      title: IssuingCardShipping
      type: object
      x-expandableFields:
      - address
    issuing_card_spending_limit:
      properties:
        amount:
          description: Maximum amount allowed to spend per time interval.
          type: integer
        categories:
          description: Array of strings containing [categories](https://nexter.io/docs/api#issuing_authorization_object-merchant_data-category)
            on which to apply the spending limit. Leave this blank to limit all charges.
          items:
            type: string
          nullable: true
          type: array
        interval:
          description: The time interval with which to apply this spending limit towards.
            Allowed values are `per_authorization`, `daily`, `weekly`, `monthly`,
            `yearly`, or `all_time`.
          enum:
          - all_time
          - daily
          - monthly
          - per_authorization
          - weekly
          - yearly
          type: string
      required:
      - amount
      - interval
      title: IssuingCardSpendingLimit
      type: object
      x-expandableFields: []
    issuing_cardholder_address:
      properties:
        address:
          "$ref": "#/components/schemas/address"
        name:
          maxLength: 5000
          nullable: true
          type: string
      required:
      - address
      title: IssuingCardholderAddress
      type: object
      x-expandableFields:
      - address
    issuing_cardholder_authorization_controls:
      properties:
        allowed_categories:
          description: Array of strings containing [categories](https://nexter.io/docs/api#issuing_authorization_object-merchant_data-category)
            of authorizations permitted on this card.
          items:
            type: string
          nullable: true
          type: array
        blocked_categories:
          description: Array of strings containing [categories](https://nexter.io/docs/api#issuing_authorization_object-merchant_data-category)
            of authorizations to always decline on this card.
          items:
            type: string
          nullable: true
          type: array
        spending_limits:
          description: Limit the spending with rules based on time intervals and categories.
          items:
            "$ref": "#/components/schemas/issuing_cardholder_spending_limit"
          nullable: true
          type: array
      title: IssuingCardholderAuthorizationControls
      type: object
      x-expandableFields:
      - spending_limits
    issuing_cardholder_spending_limit:
      properties:
        amount:
          description: Maximum amount allowed to spend per time interval.
          type: integer
        categories:
          description: Array of strings containing [categories](https://nexter.io/docs/api#issuing_authorization_object-merchant_data-category)
            on which to apply the spending limit. Leave this blank to limit all charges.
          items:
            type: string
          nullable: true
          type: array
        interval:
          description: The time interval with which to apply this spending limit towards.
            Allowed values are `per_authorization`, `daily`, `weekly`, `monthly`,
            `yearly`, or `all_time`.
          enum:
          - all_time
          - daily
          - monthly
          - per_authorization
          - weekly
          - yearly
          type: string
      required:
      - amount
      - interval
      title: IssuingCardholderSpendingLimit
      type: object
      x-expandableFields: []
    issuing_dispute_evidence:
      properties:
        fraudulent:
          anyOf:
          - "$ref": "#/components/schemas/issuing_dispute_fraudulent_evidence"
          description: Evidence to support a fraudulent dispute. This will only be
            present if your dispute's `reason` is `fraudulent`.
          nullable: true
        other:
          anyOf:
          - "$ref": "#/components/schemas/issuing_dispute_other_evidence"
          description: Evidence to support an uncategorized dispute. This will only
            be present if your dispute's `reason` is `other`.
          nullable: true
      title: IssuingDisputeEvidence
      type: object
      x-expandableFields:
      - fraudulent
      - other
    issuing_dispute_fraudulent_evidence:
      properties:
        dispute_explanation:
          description: Brief freeform text explaining why you are disputing this transaction.
          maxLength: 5000
          nullable: true
          type: string
        uncategorized_file:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/file"
          description: "(ID of a [file upload](https://nexter.io/docs/guides/file-upload))
            Additional file evidence supporting your dispute."
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/file"
      title: IssuingDisputeFraudulentEvidence
      type: object
      x-expandableFields:
      - uncategorized_file
    issuing_dispute_other_evidence:
      properties:
        dispute_explanation:
          description: Brief freeform text explaining why you are disputing this transaction.
          maxLength: 5000
          type: string
        uncategorized_file:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/file"
          description: "(ID of a [file upload](https://nexter.io/docs/guides/file-upload))
            Additional file evidence supporting your dispute."
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/file"
      required:
      - dispute_explanation
      title: IssuingDisputeOtherEvidence
      type: object
      x-expandableFields:
      - uncategorized_file
    legal_entity_company:
      properties:
        address:
          "$ref": "#/components/schemas/address"
        address_kana:
          anyOf:
          - "$ref": "#/components/schemas/legal_entity_japan_address"
          description: The Kana variation of the company's primary address (Japan
            only).
          nullable: true
        address_kanji:
          anyOf:
          - "$ref": "#/components/schemas/legal_entity_japan_address"
          description: The Kanji variation of the company's primary address (Japan
            only).
          nullable: true
        directors_provided:
          description: Whether the company's directors have been provided. This Boolean
            will be `true` if you've manually indicated that all directors are provided
            via [the `directors_provided` parameter](https://nexter.io/docs/api/accounts/update#update_account-company-directors_provided).
          type: boolean
        name:
          description: The company's legal name.
          maxLength: 5000
          nullable: true
          type: string
        name_kana:
          description: The Kana variation of the company's legal name Japan only).
          maxLength: 5000
          nullable: true
          type: string
        name_kanji:
          description: The Kanji variation of the company's legal name (Japan only).
          maxLength: 5000
          nullable: true
          type: string
        owners_provided:
          description: Whether the company's owners have been provided. This Boolean
            will be `true` if you've manually indicated that all owners are provided
            via [the `owners_provided` parameter](https://nexter.io/docs/api/accounts/update#update_account-company-owners_provided),
            or if Nexter determined that all owners were provided. Nexter determines
            ownership requirements using both the number of owners provided and their
            total percent ownership (calculated by adding the `percent_ownership`
            of each owner together).
          type: boolean
        phone:
          description: The company's phone number (used for verification).
          maxLength: 5000
          nullable: true
          type: string
        tax_id_provided:
          description: Whether the company's business ID number was provided.
          type: boolean
        tax_id_registrar:
          description: The jurisdiction in which the `tax_id` is registered (Germany-based
            companies only).
          maxLength: 5000
          type: string
        vat_id_provided:
          description: Whether the company's business VAT number was provided.
          type: boolean
      required:
      - directors_provided
      - owners_provided
      title: LegalEntityCompany
      type: object
      x-expandableFields:
      - address
      - address_kana
      - address_kanji
    legal_entity_dob:
      properties:
        day:
          description: The day of birth, between 1 and 31.
          nullable: true
          type: integer
        month:
          description: The month of birth, between 1 and 12.
          nullable: true
          type: integer
        year:
          description: The four-digit year of birth.
          nullable: true
          type: integer
      title: LegalEntityDOB
      type: object
      x-expandableFields: []
    legal_entity_japan_address:
      properties:
        city:
          description: City/Ward.
          maxLength: 5000
          nullable: true
          type: string
        country:
          description: Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
          maxLength: 5000
          nullable: true
          type: string
        line1:
          description: Block/Building number.
          maxLength: 5000
          nullable: true
          type: string
        line2:
          description: Building details.
          maxLength: 5000
          nullable: true
          type: string
        postal_code:
          description: Zip/Postal Code.
          maxLength: 5000
          nullable: true
          type: string
        state:
          description: Prefecture.
          maxLength: 5000
          nullable: true
          type: string
        town:
          description: Town/cho-me.
          maxLength: 5000
          nullable: true
          type: string
      title: LegalEntityJapanAddress
      type: object
      x-expandableFields: []
    legal_entity_verification:
      properties:
        details:
          description: A user-displayable string describing the verification state
            for the person. For example, this may say "Provided identity information
            could not be verified".
          maxLength: 5000
          nullable: true
          type: string
        details_code:
          description: One of `scan_name_mismatch`, `failed_keyed_identity`, or `failed_other`.
            A machine-readable code specifying the verification state for the person.
          maxLength: 5000
          nullable: true
          type: string
        document:
          "$ref": "#/components/schemas/legal_entity_verification_document"
        status:
          description: The state of verification for the person. Possible values are
            `unverified`, `pending`, or `verified`.
          maxLength: 5000
          type: string
      required:
      - document
      - status
      title: LegalEntityVerification
      type: object
      x-expandableFields:
      - document
    legal_entity_verification_document:
      properties:
        back:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/file"
          description: The back of an ID returned by a [file upload](#create_file)
            with a `purpose` value of `identity_document`.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/file"
        details:
          description: A user-displayable string describing the verification state
            of this document. For example, if a document is uploaded and the picture
            is too fuzzy, this may say "Identity document is too unclear to read".
          maxLength: 5000
          nullable: true
          type: string
        details_code:
          description: One of `document_corrupt`, `document_failed_copy`, `document_not_readable`,
            `document_failed_greyscale`, `document_not_uploaded`, `document_id_type_not_supported`,
            `document_id_country_not_supported`, `document_failed_other`, `document_fraudulent`,
            `document_invalid`, `document_manipulated`, `document_missing_back`, `document_missing_front`,
            `document_photo_mismatch`, `document_too_large`, or `document_failed_test_mode`.
            A machine-readable code specifying the verification state for this document.
          maxLength: 5000
          nullable: true
          type: string
        front:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/file"
          description: The front of an ID returned by a [file upload](#create_file)
            with a `purpose` value of `identity_document`.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/file"
      title: LegalEntityVerificationDocument
      type: object
      x-expandableFields:
      - back
      - front
    light_account_logout:
      properties: {}
      title: LightAccountLogout
      type: object
      x-expandableFields: []
      x-resourceId: light_account_logout
    line_item:
      properties:
        amount:
          description: The amount, in %s.
          type: integer
        currency:
          description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
            in lowercase. Must be a [supported currency](https://nexter.io/docs/currencies).
          maxLength: 3
          type: string
        description:
          description: An arbitrary string attached to the object. Often useful for
            displaying to users.
          maxLength: 5000
          nullable: true
          type: string
        discountable:
          description: If true, discounts will apply to this line item. Always false
            for prorations.
          type: boolean
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        invoice_item:
          maxLength: 5000
          type: string
        livemode:
          description: Whether this is a test line item.
          type: boolean
        metadata:
          additionalProperties:
            maxLength: 500
            type: string
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format. Note that for line items with `type=subscription` this
            will reflect the metadata of the subscription that caused the line item
            to be created.
          type: object
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - line_item
          type: string
        period:
          "$ref": "#/components/schemas/invoice_line_item_period"
        plan:
          anyOf:
          - "$ref": "#/components/schemas/plan"
          description: The plan of the subscription, if the line item is a subscription
            or a proration.
          nullable: true
        proration:
          description: Whether this is a proration.
          type: boolean
        quantity:
          description: The quantity of the subscription, if the line item is a subscription
            or a proration.
          nullable: true
          type: integer
        subscription:
          description: The subscription that the invoice item pertains to, if any.
          maxLength: 5000
          nullable: true
          type: string
        subscription_item:
          description: The subscription item that generated this invoice item. Left
            empty if the line item is not an explicit result of a subscription.
          maxLength: 5000
          type: string
        tax_amounts:
          description: The amount of tax calculated per tax rate for this line item
          items:
            "$ref": "#/components/schemas/tax_amount"
          nullable: true
          type: array
        tax_rates:
          description: The tax rates which apply to the line item.
          items:
            "$ref": "#/components/schemas/tax_rate"
          nullable: true
          type: array
        type:
          description: A string identifying the type of the source of this line item,
            either an `invoiceitem` or a `subscription`.
          enum:
          - invoiceitem
          - subscription
          type: string
      required:
      - amount
      - currency
      - discountable
      - id
      - livemode
      - metadata
      - object
      - period
      - proration
      - type
      title: InvoiceLineItem
      type: object
      x-expandableFields:
      - period
      - plan
      - tax_amounts
      - tax_rates
      x-resourceId: line_item
    login_link:
      properties:
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - login_link
          type: string
        url:
          description: The URL for the login link.
          maxLength: 5000
          type: string
      required:
      - created
      - object
      - url
      title: LoginLink
      type: object
      x-expandableFields: []
      x-resourceId: login_link
    notification_event_data:
      properties:
        object:
          description: Object containing the API resource relevant to the event. For
            example, an `invoice.created` event will have a full [invoice object](#invoice_object)
            as the value of the object key.
          type: object
        previous_attributes:
          description: Object containing the names of the attributes that have changed,
            and their previous values (sent along only with *.updated events).
          type: object
      required:
      - object
      title: NotificationEventData
      type: object
      x-expandableFields: []
    notification_event_request:
      properties:
        id:
          description: ID of the API request that caused the event. If null, the event
            was automatic (e.g., Nexter's automatic subscription handling). Request
            logs are available in the [dashboard](https://dashboard.nexter.io/logs),
            but currently not in the API.
          maxLength: 5000
          nullable: true
          type: string
        idempotency_key:
          description: 'The idempotency key transmitted during the request, if any.
            *Note: This property is populated only for events on or after May 23,
            2017*.'
          maxLength: 5000
          nullable: true
          type: string
      title: NotificationEventRequest
      type: object
      x-expandableFields: []
    order:
      properties:
        amount:
          description: A positive integer in the smallest currency unit (that is,
            100 cents for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency)
            representing the total amount for the order.
          type: integer
        amount_returned:
          nullable: true
          type: integer
        application:
          description: ID of the Connect Application that created the order.
          maxLength: 5000
          nullable: true
          type: string
        application_fee:
          nullable: true
          type: integer
        charge:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/charge"
          description: The ID of the payment used to pay for the order. Present if
            the order status is `paid`, `fulfilled`, or `refunded`.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/charge"
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        currency:
          description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
            in lowercase. Must be a [supported currency](https://nexter.io/docs/currencies).
          maxLength: 3
          type: string
        customer:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/customer"
          - "$ref": "#/components/schemas/deleted_customer"
          description: The customer used for the order.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/customer"
            - "$ref": "#/components/schemas/deleted_customer"
        email:
          description: The email address of the customer placing the order.
          maxLength: 5000
          nullable: true
          type: string
        external_coupon_code:
          maxLength: 5000
          type: string
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        items:
          description: List of items constituting the order. An order can have up
            to 25 items.
          items:
            "$ref": "#/components/schemas/order_item"
          type: array
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        metadata:
          additionalProperties:
            maxLength: 500
            type: string
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - order
          type: string
        returns:
          nullable: true
          properties:
            data:
              items:
                "$ref": "#/components/schemas/order_return"
              type: array
            has_more:
              description: True if this list has another page of items after this
                one that can be fetched.
              type: boolean
            object:
              description: String representing the object's type. Objects of the same
                type share the same value. Always has the value `list`.
              enum:
              - list
              type: string
            url:
              description: The URL where this list can be accessed.
              maxLength: 5000
              type: string
          required:
          - data
          - has_more
          - object
          - url
          title: OrderReturnList
          type: object
          x-expandableFields:
          - data
        selected_shipping_method:
          description: The shipping method that is currently selected for this order,
            if any. If present, it is equal to one of the `id`s of shipping methods
            in the `shipping_methods` array. At order creation time, if there are
            multiple shipping methods, Nexter will automatically selected the first
            method.
          maxLength: 5000
          nullable: true
          type: string
        shipping:
          anyOf:
          - "$ref": "#/components/schemas/shipping"
          description: The shipping address for the order. Present if the order is
            for goods to be shipped.
          nullable: true
        shipping_methods:
          description: A list of supported shipping methods for this order. The desired
            shipping method can be specified either by updating the order, or when
            paying it.
          items:
            "$ref": "#/components/schemas/shipping_method"
          nullable: true
          type: array
        status:
          description: Current order status. One of `created`, `paid`, `canceled`,
            `fulfilled`, or `returned`. More details in the [Orders Guide](https://nexter.io/docs/orders/guide#understanding-order-statuses).
          maxLength: 5000
          type: string
        status_transitions:
          anyOf:
          - "$ref": "#/components/schemas/status_transitions"
          description: The timestamps at which the order status was updated.
          nullable: true
        updated:
          format: unix-time
          nullable: true
          type: integer
        upstream_id:
          description: The user's order ID if it is different from the Nexter order
            ID.
          maxLength: 5000
          type: string
      required:
      - amount
      - created
      - currency
      - id
      - items
      - livemode
      - metadata
      - object
      - status
      title: Order
      type: object
      x-expandableFields:
      - charge
      - customer
      - items
      - returns
      - shipping
      - shipping_methods
      - status_transitions
      x-resourceId: order
    order_item:
      properties:
        amount:
          description: A positive integer in the smallest currency unit (that is,
            100 cents for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency)
            representing the total amount for the line item.
          type: integer
        currency:
          description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
            in lowercase. Must be a [supported currency](https://nexter.io/docs/currencies).
          maxLength: 3
          type: string
        description:
          description: Description of the line item, meant to be displayable to the
            user (e.g., `"Express shipping"`).
          maxLength: 5000
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - order_item
          type: string
        parent:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/sku"
          description: The ID of the associated object for this line item. Expandable
            if not null (e.g., expandable to a SKU).
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/sku"
        quantity:
          description: A positive integer representing the number of instances of
            `parent` that are included in this order item. Applicable/present only
            if `type` is `sku`.
          nullable: true
          type: integer
        type:
          description: The type of line item. One of `sku`, `tax`, `shipping`, or
            `discount`.
          maxLength: 5000
          type: string
      required:
      - amount
      - currency
      - description
      - object
      - type
      title: OrderItem
      type: object
      x-expandableFields:
      - parent
    order_return:
      properties:
        amount:
          description: A positive integer in the smallest currency unit (that is,
            100 cents for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency)
            representing the total amount for the returned line item.
          type: integer
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        currency:
          description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
            in lowercase. Must be a [supported currency](https://nexter.io/docs/currencies).
          maxLength: 3
          type: string
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        items:
          description: The items included in this order return.
          items:
            "$ref": "#/components/schemas/order_item"
          type: array
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - order_return
          type: string
        order:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/order"
          description: The order that this return includes items from.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/order"
        refund:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/refund"
          description: The ID of the refund issued for this return.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/refund"
      required:
      - amount
      - created
      - currency
      - id
      - items
      - livemode
      - object
      title: OrderReturn
      type: object
      x-expandableFields:
      - items
      - order
      - refund
      x-resourceId: order_return
    package_dimensions:
      properties:
        height:
          description: Height, in inches.
          type: number
        length:
          description: Length, in inches.
          type: number
        weight:
          description: Weight, in ounces.
          type: number
        width:
          description: Width, in inches.
          type: number
      required:
      - height
      - length
      - weight
      - width
      title: PackageDimensions
      type: object
      x-expandableFields: []
    payment_intent:
      properties:
        amount:
          description: Amount intended to be collected by this PaymentIntent.
          type: integer
        amount_capturable:
          description: Amount that can be captured from this PaymentIntent.
          type: integer
        amount_received:
          description: Amount that was collected by this PaymentIntent.
          type: integer
        application:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/application"
          description: ID of the Connect application that created the PaymentIntent.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/application"
        application_fee_amount:
          description: The amount of the application fee (if any) for the resulting
            payment. See the PaymentIntents [Connect usage guide](https://nexter.io/docs/payments/payment-intents/usage#connect)
            for details.
          nullable: true
          type: integer
        canceled_at:
          description: Populated when `status` is `canceled`, this is the time at
            which the PaymentIntent was canceled. Measured in seconds since the Unix
            epoch.
          format: unix-time
          nullable: true
          type: integer
        cancellation_reason:
          description: User-given reason for cancellation of this PaymentIntent, one
            of `duplicate`, `fraudulent`, `requested_by_customer`, or `failed_invoice`.
          enum:
          - duplicate
          - failed_invoice
          - fraudulent
          - requested_by_customer
          nullable: true
          type: string
        capture_method:
          description: Capture method of this PaymentIntent, one of `automatic` or
            `manual`.
          enum:
          - automatic
          - manual
          type: string
        charges:
          description: Charges that were created by this PaymentIntent, if any. By
            default we only include the latest charge, use [pagnination](https://nexter.io/docs/api/pagination)
            to fetch more charges.
          properties:
            data:
              description: The list contains all Charges that have been created by
                this PaymentIntent.
              items:
                "$ref": "#/components/schemas/charge"
              type: array
            has_more:
              description: True if this list has another page of items after this
                one that can be fetched.
              type: boolean
            object:
              description: String representing the object's type. Objects of the same
                type share the same value. Always has the value `list`.
              enum:
              - list
              type: string
            url:
              description: The URL where this list can be accessed.
              maxLength: 5000
              type: string
          required:
          - data
          - has_more
          - object
          - url
          title: PaymentFlowsPaymentIntentResourceChargeList
          type: object
          x-expandableFields:
          - data
        client_secret:
          description: The client secret of this PaymentIntent. Used for client-side
            retrieval using a publishable key. Please refer to our [automatic confirmation
            quickstart guide](https://nexter.io/docs/payments/payment-intents/quickstart#automatic-confirmation-flow)
            to learn about how `client_secret` should be handled.
          maxLength: 5000
          nullable: true
          type: string
        confirmation_method:
          description: Confirmation method of this PaymentIntent, one of `manual`
            or `automatic`.
          enum:
          - automatic
          - manual
          type: string
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        currency:
          description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
            in lowercase. Must be a [supported currency](https://nexter.io/docs/currencies).
          maxLength: 3
          type: string
        customer:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/customer"
          - "$ref": "#/components/schemas/deleted_customer"
          description: ID of the Customer this PaymentIntent is for if one exists.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/customer"
            - "$ref": "#/components/schemas/deleted_customer"
        description:
          description: An arbitrary string attached to the object. Often useful for
            displaying to users.
          maxLength: 5000
          nullable: true
          type: string
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        invoice:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/invoice"
          description: ID of the invoice that created this PaymentIntent, if it exists.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/invoice"
        last_payment_error:
          anyOf:
          - "$ref": "#/components/schemas/api_errors"
          description: The payment error encountered in the previous PaymentIntent
            confirmation.
          nullable: true
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        metadata:
          additionalProperties:
            maxLength: 500
            type: string
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format. For more information, see the [documentation](https://nexter.io/docs/payments/payment-intents/creating-payment-intents#storing-information-in-metadata).
          type: object
        next_action:
          anyOf:
          - "$ref": "#/components/schemas/payment_intent_next_action"
          description: If present, this property tells you what actions you need to
            take in order for your customer to fulfill a payment using the provided
            source.
          nullable: true
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - payment_intent
          type: string
        on_behalf_of:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/account"
          description: The account (if any) for which the funds of the PaymentIntent
            are intended. See the PaymentIntents [Connect usage guide](https://nexter.io/docs/payments/payment-intents/usage#connect)
            for details.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/account"
        payment_method:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/payment_method"
          description: ID of the payment method used in this PaymentIntent.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/payment_method"
        payment_method_types:
          description: The list of payment method types (e.g. card) that this PaymentIntent
            is allowed to use.
          items:
            type: string
          type: array
        receipt_email:
          description: Email address that the receipt for the resulting payment will
            be sent to.
          maxLength: 5000
          nullable: true
          type: string
        review:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/review"
          description: ID of the review associated with this PaymentIntent, if any.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/review"
        shipping:
          anyOf:
          - "$ref": "#/components/schemas/shipping"
          description: Shipping information for this PaymentIntent.
          nullable: true
        source:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/bank_account"
          - "$ref": "#/components/schemas/card"
          - "$ref": "#/components/schemas/source"
          - "$ref": "#/components/schemas/deleted_bank_account"
          - "$ref": "#/components/schemas/deleted_card"
          description: ID of the source used in this PaymentIntent.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/bank_account"
            - "$ref": "#/components/schemas/card"
            - "$ref": "#/components/schemas/source"
            - "$ref": "#/components/schemas/deleted_bank_account"
            - "$ref": "#/components/schemas/deleted_card"
        statement_descriptor:
          description: Extra information about a PaymentIntent. This will appear on
            your customer's statement when this PaymentIntent succeeds in creating
            a charge.
          maxLength: 5000
          nullable: true
          type: string
        status:
          description: Status of this PaymentIntent, one of `requires_payment_method`,
            `requires_confirmation`, `requires_action`, `processing`, `requires_capture`,
            `canceled`, or `succeeded`. You can read more about PaymentIntent statuses
            [here](https://nexter.io/docs/payments/payment-intents/usage#paymentintent-status-overview).
          enum:
          - canceled
          - processing
          - requires_action
          - requires_capture
          - requires_confirmation
          - requires_payment_method
          - succeeded
          type: string
        transfer_data:
          anyOf:
          - "$ref": "#/components/schemas/transfer_data"
          description: The data with which to automatically create a Transfer when
            the payment is finalized. See the PaymentIntents [Connect usage guide](https://nexter.io/docs/payments/payment-intents/usage#connect)
            for details.
          nullable: true
        transfer_group:
          description: A string that identifies the resulting payment as part of a
            group. See the PaymentIntents [Connect usage guide](https://nexter.io/docs/payments/payment-intents/usage#connect)
            for details.
          maxLength: 5000
          nullable: true
          type: string
      required:
      - amount
      - capture_method
      - confirmation_method
      - created
      - currency
      - id
      - livemode
      - object
      - payment_method_types
      - status
      title: PaymentIntent
      type: object
      x-expandableFields:
      - application
      - charges
      - customer
      - invoice
      - last_payment_error
      - next_action
      - on_behalf_of
      - payment_method
      - review
      - shipping
      - source
      - transfer_data
      x-resourceId: payment_intent
    payment_intent_next_action:
      properties:
        redirect_to_url:
          "$ref": "#/components/schemas/payment_intent_next_action_redirect_to_url"
        type:
          description: Type of the next action to perform, one of `redirect_to_url`
            or `use_nexter_sdk`.
          maxLength: 5000
          type: string
        use_nexter_sdk:
          description: When confirming a PaymentIntent with Nexter.js, Nexter.js depends
            on the contents of this dictionary to invoke authentication flows. The
            shape of the contents is subject to change and is only intended to be
            used by Nexter.js.
          type: object
      required:
      - type
      title: PaymentIntentNextAction
      type: object
      x-expandableFields:
      - redirect_to_url
    payment_intent_next_action_redirect_to_url:
      properties:
        return_url:
          description: If the customer does not exit their browser while authenticating,
            they will be redirected to this specified URL after completion.
          maxLength: 5000
          nullable: true
          type: string
        url:
          description: The URL you must redirect your customer to in order to authenticate
            the payment.
          maxLength: 5000
          nullable: true
          type: string
      title: PaymentIntentNextActionRedirectToUrl
      type: object
      x-expandableFields: []
    payment_method:
      properties:
        billing_details:
          "$ref": "#/components/schemas/billing_details"
        card:
          "$ref": "#/components/schemas/payment_method_card"
        card_present:
          "$ref": "#/components/schemas/payment_method_card_present"
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        customer:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/customer"
          description: The ID of the Customer to which this PaymentMethod is saved.
            This will not be set when the PaymentMethod has not been saved to a Customer.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/customer"
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        metadata:
          additionalProperties:
            maxLength: 500
            type: string
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - payment_method
          type: string
        type:
          description: The type of the PaymentMethod. An additional hash is included
            on the PaymentMethod with a name matching this value. It contains additional
            information specific to the PaymentMethod type.
          enum:
          - card
          - card_present
          type: string
      required:
      - billing_details
      - created
      - id
      - livemode
      - metadata
      - object
      - type
      title: PaymentMethod
      type: object
      x-expandableFields:
      - billing_details
      - card
      - card_present
      - customer
      x-resourceId: payment_method
    payment_method_card:
      properties:
        brand:
          description: Card brand. Can be `amex`, `diners`, `discover`, `jcb`, `mastercard`,
            `unionpay`, `visa`, or `unknown`.
          maxLength: 5000
          type: string
        checks:
          anyOf:
          - "$ref": "#/components/schemas/payment_method_card_checks"
          description: Checks on Card address and CVC if provided.
          nullable: true
        country:
          description: Two-letter ISO code representing the country of the card. You
            could use this attribute to get a sense of the international breakdown
            of cards you've collected.
          maxLength: 5000
          nullable: true
          type: string
        exp_month:
          description: Two-digit number representing the card's expiration month.
          type: integer
        exp_year:
          description: Four-digit number representing the card's expiration year.
          type: integer
        fingerprint:
          description: Uniquely identifies this particular card number. You can use
            this attribute to check whether two customers who've signed up with you
            are using the same card number, for example.
          maxLength: 5000
          nullable: true
          type: string
        funding:
          description: Card funding type. Can be `credit`, `debit`, `prepaid`, or
            `unknown`.
          maxLength: 5000
          type: string
        generated_from:
          anyOf:
          - "$ref": "#/components/schemas/payment_method_card_generated_card"
          description: Details of the original PaymentMethod that created this object.
          nullable: true
        last4:
          description: The last four digits of the card.
          maxLength: 5000
          type: string
        three_d_secure_usage:
          anyOf:
          - "$ref": "#/components/schemas/three_d_secure_usage"
          description: Contains details on how this Card maybe be used for 3D Secure
            authentication.
          nullable: true
        wallet:
          anyOf:
          - "$ref": "#/components/schemas/payment_method_card_wallet"
          description: If this Card is part of a card wallet, this contains the details
            of the card wallet.
          nullable: true
      required:
      - brand
      - exp_month
      - exp_year
      - funding
      - last4
      title: payment_method_card
      type: object
      x-expandableFields:
      - checks
      - generated_from
      - three_d_secure_usage
      - wallet
    payment_method_card_checks:
      properties:
        address_line1_check:
          description: If a address line1 was provided, results of the check, one
            of 'pass', 'failed', 'unavailable' or 'unchecked'.
          maxLength: 5000
          nullable: true
          type: string
        address_postal_code_check:
          description: If a address postal code was provided, results of the check,
            one of 'pass', 'failed', 'unavailable' or 'unchecked'.
          maxLength: 5000
          nullable: true
          type: string
        cvc_check:
          description: If a CVC was provided, results of the check, one of 'pass',
            'failed', 'unavailable' or 'unchecked'.
          maxLength: 5000
          nullable: true
          type: string
      title: payment_method_card_checks
      type: object
      x-expandableFields: []
    payment_method_card_generated_card:
      properties:
        charge:
          description: The charge that created this object.
          maxLength: 5000
          nullable: true
          type: string
        payment_method_details:
          anyOf:
          - "$ref": "#/components/schemas/payment_method_details"
          description: Transaction-specific details of the payment method used in
            the payment.
          nullable: true
      title: payment_method_card_generated_card
      type: object
      x-expandableFields:
      - payment_method_details
    payment_method_card_present:
      properties: {}
      title: payment_method_card_present
      type: object
      x-expandableFields: []
    payment_method_card_wallet:
      properties:
        amex_express_checkout:
          "$ref": "#/components/schemas/payment_method_card_wallet_amex_express_checkout"
        apple_pay:
          "$ref": "#/components/schemas/payment_method_card_wallet_apple_pay"
        dynamic_last4:
          description: "(For tokenized numbers only.) The last four digits of the
            device account number."
          maxLength: 5000
          nullable: true
          type: string
        google_pay:
          "$ref": "#/components/schemas/payment_method_card_wallet_google_pay"
        masterpass:
          "$ref": "#/components/schemas/payment_method_card_wallet_masterpass"
        samsung_pay:
          "$ref": "#/components/schemas/payment_method_card_wallet_samsung_pay"
        type:
          description: The type of the card wallet, one of `amex_express_checkout`,
            `apple_pay`, `google_pay`, `masterpass`, `samsung_pay`, or `visa_checkout`.
            An additional hash is included on the Wallet subhash with a name matching
            this value. It contains additional information specific to the card wallet
            type.
          enum:
          - amex_express_checkout
          - apple_pay
          - google_pay
          - masterpass
          - samsung_pay
          - visa_checkout
          type: string
        visa_checkout:
          "$ref": "#/components/schemas/payment_method_card_wallet_visa_checkout"
      required:
      - type
      title: payment_method_card_wallet
      type: object
      x-expandableFields:
      - amex_express_checkout
      - apple_pay
      - google_pay
      - masterpass
      - samsung_pay
      - visa_checkout
    payment_method_card_wallet_amex_express_checkout:
      properties: {}
      title: payment_method_card_wallet_amex_express_checkout
      type: object
      x-expandableFields: []
    payment_method_card_wallet_apple_pay:
      properties: {}
      title: payment_method_card_wallet_apple_pay
      type: object
      x-expandableFields: []
    payment_method_card_wallet_google_pay:
      properties: {}
      title: payment_method_card_wallet_google_pay
      type: object
      x-expandableFields: []
    payment_method_card_wallet_masterpass:
      properties:
        billing_address:
          anyOf:
          - "$ref": "#/components/schemas/address"
          description: Owner's verified billing address. Values are verified or provided
            by the wallet directly (if supported) at the time of authorization or
            settlement. They cannot be set or mutated.
          nullable: true
        email:
          description: Owner's verified email. Values are verified or provided by
            the wallet directly (if supported) at the time of authorization or settlement.
            They cannot be set or mutated.
          maxLength: 5000
          nullable: true
          type: string
        name:
          description: Owner's verified full name. Values are verified or provided
            by the wallet directly (if supported) at the time of authorization or
            settlement. They cannot be set or mutated.
          maxLength: 5000
          nullable: true
          type: string
        shipping_address:
          anyOf:
          - "$ref": "#/components/schemas/address"
          description: Owner's verified shipping address. Values are verified or provided
            by the wallet directly (if supported) at the time of authorization or
            settlement. They cannot be set or mutated.
          nullable: true
      title: payment_method_card_wallet_masterpass
      type: object
      x-expandableFields:
      - billing_address
      - shipping_address
    payment_method_card_wallet_samsung_pay:
      properties: {}
      title: payment_method_card_wallet_samsung_pay
      type: object
      x-expandableFields: []
    payment_method_card_wallet_visa_checkout:
      properties:
        billing_address:
          anyOf:
          - "$ref": "#/components/schemas/address"
          description: Owner's verified billing address. Values are verified or provided
            by the wallet directly (if supported) at the time of authorization or
            settlement. They cannot be set or mutated.
          nullable: true
        email:
          description: Owner's verified email. Values are verified or provided by
            the wallet directly (if supported) at the time of authorization or settlement.
            They cannot be set or mutated.
          maxLength: 5000
          nullable: true
          type: string
        name:
          description: Owner's verified full name. Values are verified or provided
            by the wallet directly (if supported) at the time of authorization or
            settlement. They cannot be set or mutated.
          maxLength: 5000
          nullable: true
          type: string
        shipping_address:
          anyOf:
          - "$ref": "#/components/schemas/address"
          description: Owner's verified shipping address. Values are verified or provided
            by the wallet directly (if supported) at the time of authorization or
            settlement. They cannot be set or mutated.
          nullable: true
      title: payment_method_card_wallet_visa_checkout
      type: object
      x-expandableFields:
      - billing_address
      - shipping_address
    payment_method_details:
      properties:
        ach_credit_transfer:
          "$ref": "#/components/schemas/payment_method_details_ach_credit_transfer"
        ach_debit:
          "$ref": "#/components/schemas/payment_method_details_ach_debit"
        alipay:
          "$ref": "#/components/schemas/payment_method_details_alipay"
        bancontact:
          "$ref": "#/components/schemas/payment_method_details_bancontact"
        card:
          "$ref": "#/components/schemas/payment_method_details_card"
        card_present:
          "$ref": "#/components/schemas/payment_method_details_card_present"
        eps:
          "$ref": "#/components/schemas/payment_method_details_eps"
        giropay:
          "$ref": "#/components/schemas/payment_method_details_giropay"
        ideal:
          "$ref": "#/components/schemas/payment_method_details_ideal"
        multibanco:
          "$ref": "#/components/schemas/payment_method_details_multibanco"
        p24:
          "$ref": "#/components/schemas/payment_method_details_p24"
        sepa_debit:
          "$ref": "#/components/schemas/payment_method_details_sepa_debit"
        sofort:
          "$ref": "#/components/schemas/payment_method_details_sofort"
        nexter_account:
          "$ref": "#/components/schemas/payment_method_details_nexter_account"
        type:
          description: |-
            The type of transaction-specific details of the payment method used in the payment, one of `ach_credit_transfer`, `alipay`, `bancontact`, `card`, `eps`, `giropay`, `ideal`, `multibanco`, `p24`, `sepa_debit`, or `sofort`.
            An additional hash is included on `payment_method_details` with a name matching this value.
            It contains information specific to the payment method.
          maxLength: 5000
          type: string
        wechat:
          "$ref": "#/components/schemas/payment_method_details_wechat"
      required:
      - type
      title: payment_method_details
      type: object
      x-expandableFields:
      - ach_credit_transfer
      - ach_debit
      - alipay
      - bancontact
      - card
      - card_present
      - eps
      - giropay
      - ideal
      - multibanco
      - p24
      - sepa_debit
      - sofort
      - nexter_account
      - wechat
    payment_method_details_ach_credit_transfer:
      properties:
        account_number:
          description: Account number to transfer funds to.
          maxLength: 5000
          nullable: true
          type: string
        bank_name:
          description: Name of the bank associated with the routing number.
          maxLength: 5000
          nullable: true
          type: string
        routing_number:
          description: Routing transit number for the bank account to transfer funds
            to.
          maxLength: 5000
          nullable: true
          type: string
        swift_code:
          description: SWIFT code of the bank associated with the routing number.
          maxLength: 5000
          nullable: true
          type: string
      title: payment_method_details_ach_credit_transfer
      type: object
      x-expandableFields: []
    payment_method_details_ach_debit:
      properties:
        account_holder_type:
          description: Type of entity that holds the account. This can be either `individual`
            or `company`.
          enum:
          - company
          - individual
          nullable: true
          type: string
        bank_name:
          description: Name of the bank associated with the bank account.
          maxLength: 5000
          nullable: true
          type: string
        country:
          description: Two-letter ISO code representing the country the bank account
            is located in.
          maxLength: 5000
          nullable: true
          type: string
        fingerprint:
          description: Uniquely identifies this particular bank account. You can use
            this attribute to check whether two bank accounts are the same.
          maxLength: 5000
          nullable: true
          type: string
        last4:
          description: Last four digits of the bank account number.
          maxLength: 5000
          nullable: true
          type: string
        routing_number:
          description: Routing transit number of the bank account.
          maxLength: 5000
          nullable: true
          type: string
      title: payment_method_details_ach_debit
      type: object
      x-expandableFields: []
    payment_method_details_alipay:
      properties: {}
      title: payment_method_details_alipay
      type: object
      x-expandableFields: []
    payment_method_details_bancontact:
      properties:
        bank_code:
          description: Bank code of bank associated with the bank account.
          maxLength: 5000
          nullable: true
          type: string
        bank_name:
          description: Name of the bank associated with the bank account.
          maxLength: 5000
          nullable: true
          type: string
        bic:
          description: Bank Identifier Code of the bank associated with the bank account.
          maxLength: 5000
          nullable: true
          type: string
        iban_last4:
          description: Last four characters of the IBAN.
          maxLength: 5000
          nullable: true
          type: string
        preferred_language:
          description: |-
            Preferred language of the Bancontact authorization page that the customer is redirected to.
            Can be one of `en`, `de`, `fr`, or `nl`
          enum:
          - de
          - en
          - fr
          - nl
          nullable: true
          type: string
        verified_name:
          description: |-
            Owner's verified full name. Values are verified or provided by Bancontact directly
            (if supported) at the time of authorization or settlement. They cannot be set or mutated.
          maxLength: 5000
          nullable: true
          type: string
      title: payment_method_details_bancontact
      type: object
      x-expandableFields: []
    payment_method_details_card:
      properties:
        brand:
          description: Card brand. Can be `amex`, `diners`, `discover`, `jcb`, `mastercard`,
            `unionpay`, `visa`, or `unknown`.
          maxLength: 5000
          nullable: true
          type: string
        checks:
          anyOf:
          - "$ref": "#/components/schemas/payment_method_details_card_checks"
          description: Check results by Card networks on Card address and CVC at time
            of payment.
          nullable: true
        country:
          description: Two-letter ISO code representing the country of the card. You
            could use this attribute to get a sense of the international breakdown
            of cards you've collected.
          maxLength: 5000
          nullable: true
          type: string
        exp_month:
          description: Two-digit number representing the card's expiration month.
          nullable: true
          type: integer
        exp_year:
          description: Four-digit number representing the card's expiration year.
          nullable: true
          type: integer
        fingerprint:
          description: Uniquely identifies this particular card number. You can use
            this attribute to check whether two customers who've signed up with you
            are using the same card number, for example.
          maxLength: 5000
          nullable: true
          type: string
        funding:
          description: Card funding type. Can be `credit`, `debit`, `prepaid`, or
            `unknown`.
          maxLength: 5000
          nullable: true
          type: string
        last4:
          description: The last four digits of the card.
          maxLength: 5000
          nullable: true
          type: string
        three_d_secure:
          anyOf:
          - "$ref": "#/components/schemas/three_d_secure_details"
          description: Populated if this transaction used 3D Secure authentication.
          nullable: true
        wallet:
          anyOf:
          - "$ref": "#/components/schemas/payment_method_details_card_wallet"
          description: If this Card is part of a card wallet, this contains the details
            of the card wallet.
          nullable: true
      title: payment_method_details_card
      type: object
      x-expandableFields:
      - checks
      - three_d_secure
      - wallet
    payment_method_details_card_checks:
      properties:
        address_line1_check:
          description: If a address line1 was provided, results of the check, one
            of 'pass', 'failed', 'unavailable' or 'unchecked'.
          maxLength: 5000
          nullable: true
          type: string
        address_postal_code_check:
          description: If a address postal code was provided, results of the check,
            one of 'pass', 'failed', 'unavailable' or 'unchecked'.
          maxLength: 5000
          nullable: true
          type: string
        cvc_check:
          description: If a CVC was provided, results of the check, one of 'pass',
            'failed', 'unavailable' or 'unchecked'.
          maxLength: 5000
          nullable: true
          type: string
      title: payment_method_details_card_checks
      type: object
      x-expandableFields: []
    payment_method_details_card_present:
      properties:
        brand:
          description: Card brand. Can be `amex`, `diners`, `discover`, `jcb`, `mastercard`,
            `unionpay`, `visa`, or `unknown`.
          maxLength: 5000
          nullable: true
          type: string
        country:
          description: Two-letter ISO code representing the country of the card. You
            could use this attribute to get a sense of the international breakdown
            of cards you've collected.
          maxLength: 5000
          nullable: true
          type: string
        emv_auth_data:
          description: Authorization response cryptogram.
          maxLength: 5000
          nullable: true
          type: string
        exp_month:
          description: Two-digit number representing the card's expiration month.
          nullable: true
          type: integer
        exp_year:
          description: Four-digit number representing the card's expiration year.
          nullable: true
          type: integer
        fingerprint:
          description: Uniquely identifies this particular card number. You can use
            this attribute to check whether two customers who've signed up with you
            are using the same card number, for example.
          maxLength: 5000
          nullable: true
          type: string
        funding:
          description: Card funding type. Can be `credit`, `debit`, `prepaid`, or
            `unknown`.
          maxLength: 5000
          nullable: true
          type: string
        generated_card:
          description: ID of a card PaymentMethod generated from the card_present
            PaymentMethod that may be attached to a Customer for future transactions.
            Only present if it was possible to generate a card PaymentMethod.
          maxLength: 5000
          nullable: true
          type: string
        last4:
          description: The last four digits of the card.
          maxLength: 5000
          nullable: true
          type: string
        read_method:
          description: How were card details read in this transaction. Can be contact_emv,
            contactless_emv, magnetic_nexter_fallback, magnetic_nexter_track2, or
            contactless_magnexter_mode
          maxLength: 5000
          nullable: true
          type: string
        receipt:
          anyOf:
          - "$ref": "#/components/schemas/payment_method_details_card_present_receipt"
          description: A collection of fields required to be displayed on receipts.
            Only required for EMV transactions.
          nullable: true
      title: payment_method_details_card_present
      type: object
      x-expandableFields:
      - receipt
    payment_method_details_card_present_receipt:
      properties:
        application_cryptogram:
          description: EMV tag 9F26, cryptogram generated by the integrated circuit
            chip.
          maxLength: 5000
          nullable: true
          type: string
        application_preferred_name:
          description: Mnenomic of the Application Identifier.
          maxLength: 5000
          nullable: true
          type: string
        authorization_code:
          description: Identifier for this transaction.
          maxLength: 5000
          nullable: true
          type: string
        authorization_response_code:
          description: EMV tag 8A. A code returned by the card issuer.
          maxLength: 5000
          nullable: true
          type: string
        cardholder_verification_method:
          description: How the cardholder verified ownership of the card.
          maxLength: 5000
          nullable: true
          type: string
        dedicated_file_name:
          description: EMV tag 84. Similar to the application identifier stored on
            the integrated circuit chip.
          maxLength: 5000
          nullable: true
          type: string
        terminal_verification_results:
          description: The outcome of a series of EMV functions performed by the card
            reader.
          maxLength: 5000
          nullable: true
          type: string
        transaction_status_information:
          description: An indication of various EMV functions performed during the
            transaction.
          maxLength: 5000
          nullable: true
          type: string
      title: payment_method_details_card_present_receipt
      type: object
      x-expandableFields: []
    payment_method_details_card_wallet:
      properties:
        amex_express_checkout:
          "$ref": "#/components/schemas/payment_method_details_card_wallet_amex_express_checkout"
        apple_pay:
          "$ref": "#/components/schemas/payment_method_details_card_wallet_apple_pay"
        dynamic_last4:
          description: "(For tokenized numbers only.) The last four digits of the
            device account number."
          maxLength: 5000
          nullable: true
          type: string
        google_pay:
          "$ref": "#/components/schemas/payment_method_details_card_wallet_google_pay"
        masterpass:
          "$ref": "#/components/schemas/payment_method_details_card_wallet_masterpass"
        samsung_pay:
          "$ref": "#/components/schemas/payment_method_details_card_wallet_samsung_pay"
        type:
          description: The type of the card wallet, one of `amex_express_checkout`,
            `apple_pay`, `google_pay`, `masterpass`, `samsung_pay`, or `visa_checkout`.
            An additional hash is included on the Wallet subhash with a name matching
            this value. It contains additional information specific to the card wallet
            type.
          enum:
          - amex_express_checkout
          - apple_pay
          - google_pay
          - masterpass
          - samsung_pay
          - visa_checkout
          type: string
        visa_checkout:
          "$ref": "#/components/schemas/payment_method_details_card_wallet_visa_checkout"
      required:
      - type
      title: payment_method_details_card_wallet
      type: object
      x-expandableFields:
      - amex_express_checkout
      - apple_pay
      - google_pay
      - masterpass
      - samsung_pay
      - visa_checkout
    payment_method_details_card_wallet_amex_express_checkout:
      properties: {}
      title: payment_method_details_card_wallet_amex_express_checkout
      type: object
      x-expandableFields: []
    payment_method_details_card_wallet_apple_pay:
      properties: {}
      title: payment_method_details_card_wallet_apple_pay
      type: object
      x-expandableFields: []
    payment_method_details_card_wallet_google_pay:
      properties: {}
      title: payment_method_details_card_wallet_google_pay
      type: object
      x-expandableFields: []
    payment_method_details_card_wallet_masterpass:
      properties:
        billing_address:
          anyOf:
          - "$ref": "#/components/schemas/address"
          description: Owner's verified billing address. Values are verified or provided
            by the wallet directly (if supported) at the time of authorization or
            settlement. They cannot be set or mutated.
          nullable: true
        email:
          description: Owner's verified email. Values are verified or provided by
            the wallet directly (if supported) at the time of authorization or settlement.
            They cannot be set or mutated.
          maxLength: 5000
          nullable: true
          type: string
        name:
          description: Owner's verified full name. Values are verified or provided
            by the wallet directly (if supported) at the time of authorization or
            settlement. They cannot be set or mutated.
          maxLength: 5000
          nullable: true
          type: string
        shipping_address:
          anyOf:
          - "$ref": "#/components/schemas/address"
          description: Owner's verified shipping address. Values are verified or provided
            by the wallet directly (if supported) at the time of authorization or
            settlement. They cannot be set or mutated.
          nullable: true
      title: payment_method_details_card_wallet_masterpass
      type: object
      x-expandableFields:
      - billing_address
      - shipping_address
    payment_method_details_card_wallet_samsung_pay:
      properties: {}
      title: payment_method_details_card_wallet_samsung_pay
      type: object
      x-expandableFields: []
    payment_method_details_card_wallet_visa_checkout:
      properties:
        billing_address:
          anyOf:
          - "$ref": "#/components/schemas/address"
          description: Owner's verified billing address. Values are verified or provided
            by the wallet directly (if supported) at the time of authorization or
            settlement. They cannot be set or mutated.
          nullable: true
        email:
          description: Owner's verified email. Values are verified or provided by
            the wallet directly (if supported) at the time of authorization or settlement.
            They cannot be set or mutated.
          maxLength: 5000
          nullable: true
          type: string
        name:
          description: Owner's verified full name. Values are verified or provided
            by the wallet directly (if supported) at the time of authorization or
            settlement. They cannot be set or mutated.
          maxLength: 5000
          nullable: true
          type: string
        shipping_address:
          anyOf:
          - "$ref": "#/components/schemas/address"
          description: Owner's verified shipping address. Values are verified or provided
            by the wallet directly (if supported) at the time of authorization or
            settlement. They cannot be set or mutated.
          nullable: true
      title: payment_method_details_card_wallet_visa_checkout
      type: object
      x-expandableFields:
      - billing_address
      - shipping_address
    payment_method_details_eps:
      properties:
        verified_name:
          description: |-
            Owner's verified full name. Values are verified or provided by EPS directly
            (if supported) at the time of authorization or settlement. They cannot be set or mutated.
          maxLength: 5000
          nullable: true
          type: string
      title: payment_method_details_eps
      type: object
      x-expandableFields: []
    payment_method_details_giropay:
      properties:
        bank_code:
          description: Bank code of bank associated with the bank account.
          maxLength: 5000
          nullable: true
          type: string
        bank_name:
          description: Name of the bank associated with the bank account.
          maxLength: 5000
          nullable: true
          type: string
        bic:
          description: Bank Identifier Code of the bank associated with the bank account.
          maxLength: 5000
          nullable: true
          type: string
        verified_name:
          description: |-
            Owner's verified full name. Values are verified or provided by Giropay directly
            (if supported) at the time of authorization or settlement. They cannot be set or mutated.
          maxLength: 5000
          nullable: true
          type: string
      title: payment_method_details_giropay
      type: object
      x-expandableFields: []
    payment_method_details_ideal:
      properties:
        bank:
          description: The customer's bank. Can be one of `abn_amro`, `asn_bank`,
            `bunq`, `handelsbanken`, `ing`, `knab`, `moneyou`, `rabobank`, `regiobank`,
            `sns_bank`, `triodos_bank`, or `van_lanschot`.
          enum:
          - abn_amro
          - asn_bank
          - bunq
          - handelsbanken
          - ing
          - knab
          - moneyou
          - rabobank
          - regiobank
          - sns_bank
          - triodos_bank
          - van_lanschot
          nullable: true
          type: string
        bic:
          description: The Bank Identifier Code of the customer's bank.
          enum:
          - ABNANL2A
          - ASNBNL21
          - BUNQNL2A
          - FVLBNL22
          - HANDNL2A
          - INGBNL2A
          - KNABNL2H
          - MOYONL21
          - RABONL2U
          - RBRBNL21
          - SNSBNL2A
          - TRIONL2U
          nullable: true
          type: string
        iban_last4:
          description: Last four characters of the IBAN.
          maxLength: 5000
          nullable: true
          type: string
        verified_name:
          description: |-
            Owner's verified full name. Values are verified or provided by iDEAL directly
            (if supported) at the time of authorization or settlement. They cannot be set or mutated.
          maxLength: 5000
          nullable: true
          type: string
      title: payment_method_details_ideal
      type: object
      x-expandableFields: []
    payment_method_details_multibanco:
      properties:
        entity:
          description: Entity number associated with this Multibanco payment.
          maxLength: 5000
          nullable: true
          type: string
        reference:
          description: Reference number associated with this Multibanco payment.
          maxLength: 5000
          nullable: true
          type: string
      title: payment_method_details_multibanco
      type: object
      x-expandableFields: []
    payment_method_details_p24:
      properties:
        reference:
          description: Unique reference for this Przelewy24 payment.
          maxLength: 5000
          nullable: true
          type: string
        verified_name:
          description: |-
            Owner's verified full name. Values are verified or provided by Przelewy24 directly
            (if supported) at the time of authorization or settlement. They cannot be set or mutated.
          maxLength: 5000
          nullable: true
          type: string
      title: payment_method_details_p24
      type: object
      x-expandableFields: []
    payment_method_details_sepa_debit:
      properties:
        bank_code:
          description: Bank code of bank associated with the bank account.
          maxLength: 5000
          nullable: true
          type: string
        branch_code:
          description: Branch code of bank associated with the bank account.
          maxLength: 5000
          nullable: true
          type: string
        country:
          description: Two-letter ISO code representing the country the bank account
            is located in.
          maxLength: 5000
          nullable: true
          type: string
        fingerprint:
          description: Uniquely identifies this particular bank account. You can use
            this attribute to check whether two bank accounts are the same.
          maxLength: 5000
          nullable: true
          type: string
        last4:
          description: Last four characters of the IBAN.
          maxLength: 5000
          nullable: true
          type: string
      title: payment_method_details_sepa_debit
      type: object
      x-expandableFields: []
    payment_method_details_sofort:
      properties:
        bank_code:
          description: Bank code of bank associated with the bank account.
          maxLength: 5000
          nullable: true
          type: string
        bank_name:
          description: Name of the bank associated with the bank account.
          maxLength: 5000
          nullable: true
          type: string
        bic:
          description: Bank Identifier Code of the bank associated with the bank account.
          maxLength: 5000
          nullable: true
          type: string
        country:
          description: Two-letter ISO code representing the country the bank account
            is located in.
          maxLength: 5000
          nullable: true
          type: string
        iban_last4:
          description: Last four characters of the IBAN.
          maxLength: 5000
          nullable: true
          type: string
        verified_name:
          description: |-
            Owner's verified full name. Values are verified or provided by SOFORT directly
            (if supported) at the time of authorization or settlement. They cannot be set or mutated.
          maxLength: 5000
          nullable: true
          type: string
      title: payment_method_details_sofort
      type: object
      x-expandableFields: []
    payment_method_details_nexter_account:
      properties: {}
      title: payment_method_details_nexter_account
      type: object
      x-expandableFields: []
    payment_method_details_wechat:
      properties: {}
      title: payment_method_details_wechat
      type: object
      x-expandableFields: []
    payment_source:
      anyOf:
      - "$ref": "#/components/schemas/account"
      - "$ref": "#/components/schemas/alipay_account"
      - "$ref": "#/components/schemas/bank_account"
      - "$ref": "#/components/schemas/bitcoin_receiver"
      - "$ref": "#/components/schemas/card"
      - "$ref": "#/components/schemas/source"
      title: Polymorphic
      x-resourceId: payment_source
    payout:
      properties:
        amount:
          description: Amount (in %s) to be transferred to your bank account or debit
            card.
          type: integer
        arrival_date:
          description: Date the payout is expected to arrive in the bank. This factors
            in delays like weekends or bank holidays.
          format: unix-time
          type: integer
        automatic:
          description: Returns `true` if the payout was created by an [automated payout
            schedule](https://nexter.io/docs/payouts#payout-schedule), and `false`
            if it was [requested manually](https://nexter.io/docs/payouts#manual-payouts).
          type: boolean
        balance_transaction:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/balance_transaction"
          description: ID of the balance transaction that describes the impact of
            this payout on your account balance.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/balance_transaction"
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        currency:
          description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
            in lowercase. Must be a [supported currency](https://nexter.io/docs/currencies).
          maxLength: 3
          type: string
        description:
          description: An arbitrary string attached to the object. Often useful for
            displaying to users.
          maxLength: 5000
          nullable: true
          type: string
        destination:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/bank_account"
          - "$ref": "#/components/schemas/card"
          - "$ref": "#/components/schemas/deleted_bank_account"
          - "$ref": "#/components/schemas/deleted_card"
          description: ID of the bank account or card the payout was sent to.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/bank_account"
            - "$ref": "#/components/schemas/card"
            - "$ref": "#/components/schemas/deleted_bank_account"
            - "$ref": "#/components/schemas/deleted_card"
        failure_balance_transaction:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/balance_transaction"
          description: If the payout failed or was canceled, this will be the ID of
            the balance transaction that reversed the initial balance transaction,
            and puts the funds from the failed payout back in your balance.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/balance_transaction"
        failure_code:
          description: Error code explaining reason for payout failure if available.
            See [Types of payout failures](https://nexter.io/docs/api#payout_failures)
            for a list of failure codes.
          maxLength: 5000
          nullable: true
          type: string
        failure_message:
          description: Message to user further explaining reason for payout failure
            if available.
          maxLength: 5000
          nullable: true
          type: string
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        metadata:
          additionalProperties:
            maxLength: 500
            type: string
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
          type: object
        method:
          description: The method used to send this payout, which can be `standard`
            or `instant`. `instant` is only supported for payouts to debit cards.
            (See [Instant payouts for marketplaces](/blog/instant-payouts-for-marketplaces)
            for more information.)
          maxLength: 5000
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - payout
          type: string
        source_type:
          description: The source balance this payout came from. One of `card` or
            `bank_account`.
          maxLength: 5000
          type: string
        statement_descriptor:
          description: Extra information about a payout to be displayed on the user's
            bank statement.
          maxLength: 5000
          nullable: true
          type: string
        status:
          description: Current status of the payout (`paid`, `pending`, `in_transit`,
            `canceled` or `failed`). A payout will be `pending` until it is submitted
            to the bank, at which point it becomes `in_transit`. It will then change
            to `paid` if the transaction goes through. If it does not go through successfully,
            its status will change to `failed` or `canceled`.
          maxLength: 5000
          type: string
        type:
          description: Can be `bank_account` or `card`.
          enum:
          - bank_account
          - card
          type: string
      required:
      - amount
      - arrival_date
      - automatic
      - created
      - currency
      - id
      - livemode
      - metadata
      - method
      - object
      - source_type
      - status
      - type
      title: Payout
      type: object
      x-expandableFields:
      - balance_transaction
      - destination
      - failure_balance_transaction
      x-resourceId: payout
    period:
      properties:
        end:
          description: The end date of this usage period. All usage up to and including
            this point in time is included.
          format: unix-time
          nullable: true
          type: integer
        start:
          description: The start date of this usage period. All usage after this point
            in time is included.
          format: unix-time
          nullable: true
          type: integer
      title: Period
      type: object
      x-expandableFields: []
    person:
      properties:
        account:
          maxLength: 5000
          type: string
        address:
          "$ref": "#/components/schemas/address"
        address_kana:
          anyOf:
          - "$ref": "#/components/schemas/legal_entity_japan_address"
          nullable: true
        address_kanji:
          anyOf:
          - "$ref": "#/components/schemas/legal_entity_japan_address"
          nullable: true
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        dob:
          "$ref": "#/components/schemas/legal_entity_dob"
        email:
          maxLength: 5000
          nullable: true
          type: string
        first_name:
          maxLength: 5000
          nullable: true
          type: string
        first_name_kana:
          maxLength: 5000
          nullable: true
          type: string
        first_name_kanji:
          maxLength: 5000
          nullable: true
          type: string
        gender:
          maxLength: 5000
          nullable: true
          type: string
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        id_number_provided:
          type: boolean
        last_name:
          maxLength: 5000
          nullable: true
          type: string
        last_name_kana:
          maxLength: 5000
          nullable: true
          type: string
        last_name_kanji:
          maxLength: 5000
          nullable: true
          type: string
        maiden_name:
          maxLength: 5000
          nullable: true
          type: string
        metadata:
          additionalProperties:
            maxLength: 500
            type: string
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - person
          type: string
        phone:
          maxLength: 5000
          nullable: true
          type: string
        relationship:
          "$ref": "#/components/schemas/person_relationship"
        requirements:
          anyOf:
          - "$ref": "#/components/schemas/person_requirements"
          nullable: true
        ssn_last_4_provided:
          type: boolean
        verification:
          "$ref": "#/components/schemas/legal_entity_verification"
      required:
      - account
      - created
      - id
      - object
      title: Person
      type: object
      x-expandableFields:
      - address
      - address_kana
      - address_kanji
      - dob
      - relationship
      - requirements
      - verification
      x-resourceId: person
    person_relationship:
      properties:
        account_opener:
          description: Whether the person opened the account. This person provides
            information about themselves, and general information about the account.
          nullable: true
          type: boolean
        director:
          description: Whether the person is a director of the account's legal entity.
            Currently only required for accounts in the EU. Directors are typically
            members of the governing board of the company, or responsible for ensuring
            the company meets its regulatory obligations.
          nullable: true
          type: boolean
        owner:
          description: Whether the person is an owner of the account’s legal entity.
          nullable: true
          type: boolean
        percent_ownership:
          description: The percent owned by the person of the account's legal entity.
          nullable: true
          type: number
        title:
          description: The person's title (e.g., CEO, Support Engineer).
          maxLength: 5000
          nullable: true
          type: string
      title: PersonRelationship
      type: object
      x-expandableFields: []
    person_requirements:
      properties:
        currently_due:
          description: Fields that need to be collected to keep the person's account
            enabled. If not collected by the account's `current_deadline`, these fields
            are moved to `past_due` and the account is disabled.
          items:
            type: string
          type: array
        eventually_due:
          description: Fields that need to be collected assuming all volume thresholds
            are reached. As fields are needed, they are moved to `currently_due` and
            the account's `current_deadline` is set.
          items:
            type: string
          type: array
        past_due:
          description: Fields that weren't collected by the account's `current_deadline`.
            These fields need to be collected to enable payouts for the person's account.
          items:
            type: string
          type: array
      required:
      - currently_due
      - eventually_due
      - past_due
      title: PersonRequirements
      type: object
      x-expandableFields: []
    plan:
      properties:
        active:
          description: Whether the plan is currently available for new subscriptions.
          type: boolean
        aggregate_usage:
          description: Specifies a usage aggregation strategy for plans of `usage_type=metered`.
            Allowed values are `sum` for summing up all usage during a period, `last_during_period`
            for picking the last usage record reported within a period, `last_ever`
            for picking the last usage record ever (across period bounds) or `max`
            which picks the usage record with the maximum reported usage during a
            period. Defaults to `sum`.
          enum:
          - last_during_period
          - last_ever
          - max
          - sum
          nullable: true
          type: string
        amount:
          description: The amount in %s to be charged on the interval specified.
          nullable: true
          type: integer
        billing_scheme:
          description: Describes how to compute the price per period. Either `per_unit`
            or `tiered`. `per_unit` indicates that the fixed amount (specified in
            `amount`) will be charged per unit in `quantity` (for plans with `usage_type=licensed`),
            or per unit of total usage (for plans with `usage_type=metered`). `tiered`
            indicates that the unit pricing will be computed using a tiering strategy
            as defined using the `tiers` and `tiers_mode` attributes.
          enum:
          - per_unit
          - tiered
          nullable: true
          type: string
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        currency:
          description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
            in lowercase. Must be a [supported currency](https://nexter.io/docs/currencies).
          maxLength: 3
          type: string
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        interval:
          description: One of `day`, `week`, `month` or `year`. The frequency with
            which a subscription should be billed.
          enum:
          - day
          - month
          - week
          - year
          type: string
        interval_count:
          description: The number of intervals (specified in the `interval` property)
            between subscription billings. For example, `interval=month` and `interval_count=3`
            bills every 3 months.
          type: integer
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        metadata:
          additionalProperties:
            maxLength: 500
            type: string
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
          type: object
        nickname:
          description: A brief description of the plan, hidden from customers.
          maxLength: 5000
          nullable: true
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - plan
          type: string
        product:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/product"
          - "$ref": "#/components/schemas/deleted_product"
          description: The product whose pricing this plan determines.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/product"
            - "$ref": "#/components/schemas/deleted_product"
        tiers:
          description: Each element represents a pricing tier. This parameter requires
            `billing_scheme` to be set to `tiered`. See also the documentation for
            `billing_scheme`.
          items:
            "$ref": "#/components/schemas/plan_tier"
          nullable: true
          type: array
        tiers_mode:
          description: Defines if the tiering price should be `graduated` or `volume`
            based. In `volume`-based tiering, the maximum quantity within a period
            determines the per unit price, in `graduated` tiering pricing can successively
            change as the quantity grows.
          enum:
          - graduated
          - volume
          nullable: true
          type: string
        transform_usage:
          anyOf:
          - "$ref": "#/components/schemas/transform_usage"
          description: Apply a transformation to the reported usage or set quantity
            before computing the billed price. Cannot be combined with `tiers`.
          nullable: true
        trial_period_days:
          description: Default number of trial days when subscribing a customer to
            this plan using [`trial_from_plan=true`](https://nexter.io/docs/api#create_subscription-trial_from_plan).
          nullable: true
          type: integer
        usage_type:
          description: Configures how the quantity per period should be determined,
            can be either `metered` or `licensed`. `licensed` will automatically bill
            the `quantity` set for a plan when adding it to a subscription, `metered`
            will aggregate the total usage based on usage records. Defaults to `licensed`.
          enum:
          - licensed
          - metered
          type: string
      required:
      - active
      - created
      - currency
      - id
      - interval
      - interval_count
      - livemode
      - metadata
      - object
      - usage_type
      title: Plan
      type: object
      x-expandableFields:
      - product
      - tiers
      - transform_usage
      x-resourceId: plan
    plan_tier:
      properties:
        flat_amount:
          description: Price for the entire tier.
          nullable: true
          type: integer
        unit_amount:
          description: Per unit price for units relevant to the tier.
          nullable: true
          type: integer
        up_to:
          description: Up to and including to this quantity will be contained in the
            tier.
          nullable: true
          type: integer
      title: PlanTier
      type: object
      x-expandableFields: []
    product:
      properties:
        active:
          description: Whether the product is currently available for purchase.
          nullable: true
          type: boolean
        attributes:
          description: A list of up to 5 attributes that each SKU can provide values
            for (e.g., `["color", "size"]`). Only applicable to products of `type=good`.
          items:
            type: string
          nullable: true
          type: array
        caption:
          description: A short one-line description of the product, meant to be displayable
            to the customer. Only applicable to products of `type=good`.
          maxLength: 5000
          nullable: true
          type: string
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        deactivate_on:
          description: An array of connect application identifiers that cannot purchase
            this product. Only applicable to products of `type=good`.
          items:
            type: string
          type: array
        description:
          description: The product's description, meant to be displayable to the customer.
            Only applicable to products of `type=good`.
          maxLength: 5000
          nullable: true
          type: string
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        images:
          description: A list of up to 8 URLs of images for this product, meant to
            be displayable to the customer. Only applicable to products of `type=good`.
          items:
            type: string
          type: array
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        metadata:
          additionalProperties:
            maxLength: 500
            type: string
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
          type: object
        name:
          description: The product's name, meant to be displayable to the customer.
            Applicable to both `service` and `good` types.
          maxLength: 5000
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - product
          type: string
        package_dimensions:
          anyOf:
          - "$ref": "#/components/schemas/package_dimensions"
          description: The dimensions of this product for shipping purposes. A SKU
            associated with this product can override this value by having its own
            `package_dimensions`. Only applicable to products of `type=good`.
          nullable: true
        shippable:
          description: Whether this product is a shipped good. Only applicable to
            products of `type=good`.
          nullable: true
          type: boolean
        statement_descriptor:
          description: Extra information about a product which will appear on your
            customer's credit card statement. In the case that multiple products are
            billed at once, the first statement descriptor will be used. Only available
            on products of type=`service`.
          maxLength: 5000
          nullable: true
          type: string
        type:
          description: The type of the product. The product is either of type `good`,
            which is eligible for use with Orders and SKUs, or `service`, which is
            eligible for use with Subscriptions and Plans.
          enum:
          - good
          - service
          type: string
        unit_label:
          description: A label that represents units of this product, such as seat(s),
            in Nexter and on customers’ receipts and invoices. Only available on products
            of type=`service`.
          maxLength: 5000
          nullable: true
          type: string
        updated:
          format: unix-time
          type: integer
        url:
          description: A URL of a publicly-accessible webpage for this product. Only
            applicable to products of `type=good`.
          maxLength: 2048
          nullable: true
          type: string
      required:
      - created
      - id
      - images
      - livemode
      - metadata
      - name
      - object
      - type
      - updated
      title: Product
      type: object
      x-expandableFields:
      - package_dimensions
      x-resourceId: product
    radar.value_list:
      properties:
        alias:
          description: The name of the value list for use in rules.
          maxLength: 5000
          type: string
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        created_by:
          description: The name or email address of the user who created this value
            list.
          maxLength: 5000
          type: string
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        item_type:
          description: The type of items in the value list. One of `card_fingerprint`,
            `card_bin`, `email`, `ip_address`, `country`, `string`, or `case_sensitive_string`.
          enum:
          - card_bin
          - card_fingerprint
          - case_sensitive_string
          - country
          - email
          - ip_address
          - string
          type: string
        list_items:
          description: List of items contained within this value list.
          properties:
            data:
              items:
                "$ref": "#/components/schemas/radar.value_list_item"
              type: array
            has_more:
              description: True if this list has another page of items after this
                one that can be fetched.
              type: boolean
            object:
              description: String representing the object's type. Objects of the same
                type share the same value. Always has the value `list`.
              enum:
              - list
              type: string
            url:
              description: The URL where this list can be accessed.
              maxLength: 5000
              type: string
          required:
          - data
          - has_more
          - object
          - url
          title: RadarListListItemList
          type: object
          x-expandableFields:
          - data
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        metadata:
          additionalProperties:
            maxLength: 500
            type: string
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
          type: object
        name:
          description: The name of the value list.
          maxLength: 5000
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - radar.value_list
          type: string
      required:
      - alias
      - created
      - created_by
      - id
      - item_type
      - list_items
      - livemode
      - metadata
      - name
      - object
      title: RadarListList
      type: object
      x-expandableFields:
      - list_items
      x-resourceId: radar.value_list
    radar.value_list_item:
      properties:
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        created_by:
          description: The name or email address of the user who added this item to
            the value list.
          maxLength: 5000
          type: string
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - radar.value_list_item
          type: string
        value:
          description: The value of the item.
          maxLength: 5000
          type: string
        value_list:
          description: The identifier of the value list this item belongs to.
          maxLength: 5000
          type: string
      required:
      - created
      - created_by
      - id
      - livemode
      - object
      - value
      - value_list
      title: RadarListListItem
      type: object
      x-expandableFields: []
      x-resourceId: radar.value_list_item
    radar_review_resource_location:
      properties:
        city:
          description: The city where the payment originated.
          maxLength: 5000
          nullable: true
          type: string
        country:
          description: Two-letter ISO code representing the country where the payment
            originated.
          maxLength: 5000
          nullable: true
          type: string
        latitude:
          description: The geographic latitude where the payment originated.
          nullable: true
          type: number
        longitude:
          description: The geographic longitude where the payment originated.
          nullable: true
          type: number
        region:
          description: The state/county/province/region where the payment originated.
          maxLength: 5000
          nullable: true
          type: string
      title: RadarReviewResourceLocation
      type: object
      x-expandableFields: []
    radar_review_resource_session:
      properties:
        browser:
          description: The browser used in this browser session (e.g., `Chrome`).
          maxLength: 5000
          nullable: true
          type: string
        device:
          description: Information about the device used for the browser session (e.g.,
            `Samsung SM-G930T`).
          maxLength: 5000
          nullable: true
          type: string
        platform:
          description: The platform for the browser session (e.g., `Macintosh`).
          maxLength: 5000
          nullable: true
          type: string
        version:
          description: The version for the browser session (e.g., `61.0.3163.100`).
          maxLength: 5000
          nullable: true
          type: string
      title: RadarReviewResourceSession
      type: object
      x-expandableFields: []
    recipient:
      properties:
        active_account:
          anyOf:
          - "$ref": "#/components/schemas/bank_account"
          description: Hash describing the current account on the recipient, if there
            is one.
          nullable: true
        cards:
          nullable: true
          properties:
            data:
              items:
                "$ref": "#/components/schemas/card"
              type: array
            has_more:
              description: True if this list has another page of items after this
                one that can be fetched.
              type: boolean
            object:
              description: String representing the object's type. Objects of the same
                type share the same value. Always has the value `list`.
              enum:
              - list
              type: string
            url:
              description: The URL where this list can be accessed.
              maxLength: 5000
              type: string
          required:
          - data
          - has_more
          - object
          - url
          title: CardList
          type: object
          x-expandableFields:
          - data
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        default_card:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/card"
          description: The default card to use for creating transfers to this recipient.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/card"
        description:
          description: An arbitrary string attached to the object. Often useful for
            displaying to users.
          maxLength: 5000
          nullable: true
          type: string
        email:
          maxLength: 5000
          nullable: true
          type: string
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        metadata:
          additionalProperties:
            maxLength: 500
            type: string
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
          type: object
        migrated_to:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/account"
          description: 'The ID of the [Custom account](https://nexter.io/docs/connect/custom-accounts)
            this recipient was migrated to. If set, the recipient can no longer be
            updated, nor can transfers be made to it: use the Custom account instead.'
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/account"
        name:
          description: Full, legal name of the recipient.
          maxLength: 5000
          nullable: true
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - recipient
          type: string
        rolled_back_from:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/account"
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/account"
        type:
          description: Type of the recipient, one of `individual` or `corporation`.
          maxLength: 5000
          type: string
      required:
      - created
      - id
      - livemode
      - metadata
      - object
      - type
      title: TransferRecipient
      type: object
      x-expandableFields:
      - active_account
      - cards
      - default_card
      - migrated_to
      - rolled_back_from
      x-resourceId: recipient
    refund:
      properties:
        amount:
          description: Amount, in %s.
          type: integer
        balance_transaction:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/balance_transaction"
          description: Balance transaction that describes the impact on your account
            balance.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/balance_transaction"
        charge:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/charge"
          description: ID of the charge that was refunded.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/charge"
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        currency:
          description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
            in lowercase. Must be a [supported currency](https://nexter.io/docs/currencies).
          maxLength: 3
          type: string
        description:
          description: An arbitrary string attached to the object. Often useful for
            displaying to users. (Available on non-card refunds only)
          maxLength: 5000
          type: string
        failure_balance_transaction:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/balance_transaction"
          description: If the refund failed, this balance transaction describes the
            adjustment made on your account balance that reverses the initial balance
            transaction.
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/balance_transaction"
        failure_reason:
          description: If the refund failed, the reason for refund failure if known.
            Possible values are `lost_or_stolen_card`, `expired_or_canceled_card`,
            or `unknown`.
          maxLength: 5000
          type: string
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        metadata:
          additionalProperties:
            maxLength: 500
            type: string
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - refund
          type: string
        reason:
          description: Reason for the refund. If set, possible values are `duplicate`,
            `fraudulent`, and `requested_by_customer`.
          maxLength: 5000
          nullable: true
          type: string
        receipt_number:
          description: This is the transaction number that appears on email receipts
            sent for this refund.
          maxLength: 5000
          nullable: true
          type: string
        source_transfer_reversal:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/transfer_reversal"
          description: The transfer reversal that is associated with the refund. Only
            present if the charge came from another Nexter account. See the Connect
            documentation for details.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/transfer_reversal"
        status:
          description: Status of the refund. For credit card refunds, this can be
            `pending`, `succeeded`, or `failed`. For other types of refunds, it can
            be `pending`, `succeeded`, `failed`, or `canceled`. Refer to our [refunds](https://nexter.io/docs/refunds#failed-refunds)
            documentation for more details.
          maxLength: 5000
          nullable: true
          type: string
        transfer_reversal:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/transfer_reversal"
          description: If the accompanying transfer was reversed, the transfer reversal
            object. Only applicable if the charge was created using the destination
            parameter.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/transfer_reversal"
      required:
      - amount
      - created
      - currency
      - id
      - metadata
      - object
      title: Refund
      type: object
      x-expandableFields:
      - balance_transaction
      - charge
      - failure_balance_transaction
      - source_transfer_reversal
      - transfer_reversal
      x-resourceId: refund
    reporting.report_run:
      properties:
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        error:
          description: |-
            If something should go wrong during the run, a message about the failure (populated when
             `status=failed`).
          maxLength: 5000
          nullable: true
          type: string
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        livemode:
          description: 'Always `true`: reports can only be run on live-mode data.'
          type: boolean
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - reporting.report_run
          type: string
        parameters:
          "$ref": "#/components/schemas/financial_reporting_finance_report_run_run_parameters"
        report_type:
          description: The ID of the [report type](https://nexter.io/docs/reporting/statements/api#report-types)
            to run, such as `"balance.summary.1"`.
          maxLength: 5000
          type: string
        result:
          anyOf:
          - "$ref": "#/components/schemas/file"
          description: |-
            The file object representing the result of the report run (populated when
             `status=succeeded`).
          nullable: true
        status:
          description: |-
            Status of this report run. This will be `pending` when the run is initially created.
             When the run finishes, this will be set to `succeeded` and the `result` field will be populated.
             Rarely, we may encounter an error, at which point this will be set to `failed` and the `error` field will be populated.
          maxLength: 5000
          type: string
        succeeded_at:
          description: |-
            Timestamp at which this run successfully finished (populated when
             `status=succeeded`). Measured in seconds since the Unix epoch.
          format: unix-time
          nullable: true
          type: integer
      required:
      - created
      - id
      - livemode
      - object
      - parameters
      - report_type
      - status
      title: reporting_report_run
      type: object
      x-expandableFields:
      - parameters
      - result
      x-resourceId: reporting.report_run
    reporting.report_type:
      properties:
        data_available_end:
          description: Most recent time for which this Report Type is available. Measured
            in seconds since the Unix epoch.
          format: unix-time
          type: integer
        data_available_start:
          description: Earliest time for which this Report Type is available. Measured
            in seconds since the Unix epoch.
          format: unix-time
          type: integer
        default_columns:
          description: List of column names that are included by default when this
            Report Type gets run. (If the Report Type doesn't support the `columns`
            parameter, this will be null.)
          items:
            type: string
          nullable: true
          type: array
        id:
          description: The [ID of the Report Type](https://nexter.io/docs/reporting/statements/api#available-report-types),
            such as `balance.summary.1`.
          maxLength: 5000
          type: string
        name:
          description: Human-readable name of the Report Type
          maxLength: 5000
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - reporting.report_type
          type: string
        updated:
          description: When this Report Type was latest updated. Measured in seconds
            since the Unix epoch.
          format: unix-time
          type: integer
        version:
          description: Version of the Report Type. Different versions report with
            the same ID will have the same purpose, but may take different run parameters
            or have different result schemas.
          type: integer
      required:
      - data_available_end
      - data_available_start
      - id
      - name
      - object
      - updated
      - version
      title: reporting_report_type
      type: object
      x-expandableFields: []
      x-resourceId: reporting.report_type
    reserve_transaction:
      properties:
        amount:
          type: integer
        currency:
          description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
            in lowercase. Must be a [supported currency](https://nexter.io/docs/currencies).
          maxLength: 3
          type: string
        description:
          description: An arbitrary string attached to the object. Often useful for
            displaying to users.
          maxLength: 5000
          nullable: true
          type: string
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - reserve_transaction
          type: string
      required:
      - amount
      - currency
      - id
      - object
      title: ReserveTransaction
      type: object
      x-expandableFields: []
    review:
      properties:
        billing_zip:
          description: The ZIP or postal code of the card used, if applicable.
          maxLength: 5000
          nullable: true
          type: string
        charge:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/charge"
          description: The charge associated with this review.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/charge"
        closed_reason:
          description: The reason the review was closed, or null if it has not yet
            been closed. One of `approved`, `refunded`, `refunded_as_fraud`, or `disputed`.
          enum:
          - approved
          - disputed
          - refunded
          - refunded_as_fraud
          nullable: true
          type: string
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        ip_address:
          description: The IP address where the payment originated.
          maxLength: 5000
          nullable: true
          type: string
        ip_address_location:
          anyOf:
          - "$ref": "#/components/schemas/radar_review_resource_location"
          description: Information related to the location of the payment. Note that
            this information is an approximation and attempts to locate the nearest
            population center - it should not be used to determine a specific address.
          nullable: true
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - review
          type: string
        open:
          description: If `true`, the review needs action.
          type: boolean
        opened_reason:
          description: The reason the review was opened. One of `rule` or `manual`.
          enum:
          - manual
          - rule
          type: string
        payment_intent:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/payment_intent"
          description: The PaymentIntent ID associated with this review, if one exists.
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/payment_intent"
        reason:
          description: The reason the review is currently open or closed. One of `rule`,
            `manual`, `approved`, `refunded`, `refunded_as_fraud`, or `disputed`.
          maxLength: 5000
          type: string
        session:
          anyOf:
          - "$ref": "#/components/schemas/radar_review_resource_session"
          description: Information related to the browsing session of the user who
            initiated the payment.
          nullable: true
      required:
      - created
      - id
      - livemode
      - object
      - open
      - opened_reason
      - reason
      title: RadarReview
      type: object
      x-expandableFields:
      - charge
      - ip_address_location
      - payment_intent
      - session
      x-resourceId: review
    rule:
      properties:
        action:
          description: The action taken on the payment.
          maxLength: 5000
          type: string
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        predicate:
          description: The predicate to evaluate the payment against.
          maxLength: 5000
          type: string
      required:
      - action
      - id
      - predicate
      title: RadarRule
      type: object
      x-expandableFields: []
    scheduled_query_run:
      properties:
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        data_load_time:
          description: When the query was run, Sigma contained a snapshot of your
            Nexter data at this time.
          format: unix-time
          type: integer
        error:
          "$ref": "#/components/schemas/sigma_scheduled_query_run_error"
        file:
          anyOf:
          - "$ref": "#/components/schemas/file"
          description: The file object representing the results of the query.
          nullable: true
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - scheduled_query_run
          type: string
        result_available_until:
          description: Time at which the result expires and is no longer available
            for download.
          format: unix-time
          type: integer
        sql:
          description: SQL for the query.
          maxLength: 100000
          type: string
        status:
          description: The query's execution status, which will be `completed` for
            successful runs, and `canceled`, `failed`, or `timed_out` otherwise.
          maxLength: 5000
          type: string
        title:
          description: Title of the query.
          maxLength: 5000
          type: string
      required:
      - created
      - data_load_time
      - id
      - livemode
      - object
      - result_available_until
      - sql
      - status
      - title
      title: ScheduledQueryRun
      type: object
      x-expandableFields:
      - error
      - file
      x-resourceId: scheduled_query_run
    shipping:
      properties:
        address:
          "$ref": "#/components/schemas/address"
        carrier:
          description: The delivery service that shipped a physical product, such
            as Fedex, UPS, USPS, etc.
          maxLength: 5000
          nullable: true
          type: string
        name:
          description: Recipient name.
          maxLength: 5000
          nullable: true
          type: string
        phone:
          description: Recipient phone (including extension).
          maxLength: 5000
          nullable: true
          type: string
        tracking_number:
          description: The tracking number for a physical product, obtained from the
            delivery service. If multiple tracking numbers were generated for this
            purchase, please separate them with commas.
          maxLength: 5000
          nullable: true
          type: string
      required:
      - address
      title: Shipping
      type: object
      x-expandableFields:
      - address
    shipping_method:
      properties:
        amount:
          description: A positive integer in the smallest currency unit (that is,
            100 cents for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency)
            representing the total amount for the line item.
          type: integer
        currency:
          description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
            in lowercase. Must be a [supported currency](https://nexter.io/docs/currencies).
          maxLength: 3
          type: string
        delivery_estimate:
          anyOf:
          - "$ref": "#/components/schemas/delivery_estimate"
          description: The estimated delivery date for the given shipping method.
            Can be either a specific date or a range.
          nullable: true
        description:
          description: An arbitrary string attached to the object. Often useful for
            displaying to users.
          maxLength: 5000
          type: string
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
      required:
      - amount
      - currency
      - description
      - id
      title: ShippingMethod
      type: object
      x-expandableFields:
      - delivery_estimate
    sigma_scheduled_query_run_error:
      properties:
        message:
          description: Information about the run failure.
          maxLength: 5000
          type: string
      required:
      - message
      title: SigmaScheduledQueryRunError
      type: object
      x-expandableFields: []
    sku:
      properties:
        active:
          description: Whether the SKU is available for purchase.
          type: boolean
        attributes:
          additionalProperties:
            maxLength: 5000
            type: string
          description: 'A dictionary of attributes and values for the attributes defined
            by the product. If, for example, a product''s attributes are `["size",
            "gender"]`, a valid SKU has the following dictionary of attributes: `{"size":
            "Medium", "gender": "Unisex"}`.'
          type: object
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        currency:
          description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
            in lowercase. Must be a [supported currency](https://nexter.io/docs/currencies).
          maxLength: 3
          type: string
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        image:
          description: The URL of an image for this SKU, meant to be displayable to
            the customer.
          maxLength: 2048
          nullable: true
          type: string
        inventory:
          "$ref": "#/components/schemas/inventory"
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        metadata:
          additionalProperties:
            maxLength: 500
            type: string
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - sku
          type: string
        package_dimensions:
          anyOf:
          - "$ref": "#/components/schemas/package_dimensions"
          description: The dimensions of this SKU for shipping purposes.
          nullable: true
        price:
          description: The cost of the item as a positive integer in the smallest
            currency unit (that is, 100 cents to charge $1.00, or 100 to charge ¥100,
            Japanese Yen being a zero-decimal currency).
          type: integer
        product:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/product"
          description: The ID of the product this SKU is associated with. The product
            must be currently active.
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/product"
        updated:
          format: unix-time
          type: integer
      required:
      - active
      - attributes
      - created
      - currency
      - id
      - inventory
      - livemode
      - metadata
      - object
      - price
      - product
      - updated
      title: SKU
      type: object
      x-expandableFields:
      - inventory
      - package_dimensions
      - product
      x-resourceId: sku
    source:
      properties:
        ach_credit_transfer:
          "$ref": "#/components/schemas/source_type_ach_credit_transfer"
        ach_debit:
          "$ref": "#/components/schemas/source_type_ach_debit"
        alipay:
          "$ref": "#/components/schemas/source_type_alipay"
        amount:
          description: A positive integer in the smallest currency unit (that is,
            100 cents for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency)
            representing the total amount associated with the source. This is the
            amount for which the source will be chargeable once ready. Required for
            `single_use` sources.
          nullable: true
          type: integer
        bancontact:
          "$ref": "#/components/schemas/source_type_bancontact"
        card:
          "$ref": "#/components/schemas/source_type_card"
        card_present:
          "$ref": "#/components/schemas/source_type_card_present"
        client_secret:
          description: The client secret of the source. Used for client-side retrieval
            using a publishable key.
          maxLength: 5000
          type: string
        code_verification:
          "$ref": "#/components/schemas/source_code_verification_flow"
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        currency:
          description: Three-letter [ISO code for the currency](https://nexter.io/docs/currencies)
            associated with the source. This is the currency for which the source
            will be chargeable once ready. Required for `single_use` sources.
          maxLength: 3
          nullable: true
          type: string
        customer:
          description: The ID of the customer to which this source is attached. This
            will not be present when the source has not been attached to a customer.
          maxLength: 5000
          type: string
        eps:
          "$ref": "#/components/schemas/source_type_eps"
        flow:
          description: The authentication `flow` of the source. `flow` is one of `redirect`,
            `receiver`, `code_verification`, `none`.
          maxLength: 5000
          type: string
        giropay:
          "$ref": "#/components/schemas/source_type_giropay"
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        ideal:
          "$ref": "#/components/schemas/source_type_ideal"
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        metadata:
          additionalProperties:
            maxLength: 500
            type: string
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
          nullable: true
          type: object
        multibanco:
          "$ref": "#/components/schemas/source_type_multibanco"
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - source
          type: string
        owner:
          anyOf:
          - "$ref": "#/components/schemas/source_owner"
          description: Information about the owner of the payment instrument that
            may be used or required by particular source types.
          nullable: true
        p24:
          "$ref": "#/components/schemas/source_type_p24"
        receiver:
          "$ref": "#/components/schemas/source_receiver_flow"
        redirect:
          "$ref": "#/components/schemas/source_redirect_flow"
        sepa_debit:
          "$ref": "#/components/schemas/source_type_sepa_debit"
        sofort:
          "$ref": "#/components/schemas/source_type_sofort"
        statement_descriptor:
          description: Extra information about a source. This will appear on your
            customer's statement every time you charge the source.
          maxLength: 5000
          nullable: true
          type: string
        status:
          description: The status of the source, one of `canceled`, `chargeable`,
            `consumed`, `failed`, or `pending`. Only `chargeable` sources can be used
            to create a charge.
          maxLength: 5000
          type: string
        three_d_secure:
          "$ref": "#/components/schemas/source_type_three_d_secure"
        type:
          description: The `type` of the source. The `type` is a payment method, one
            of `ach_credit_transfer`, `ach_debit`, `alipay`, `bancontact`, `card`,
            `card_present`, `eps`, `giropay`, `ideal`, `multibanco`, `p24`, `sepa_debit`,
            `sofort`, `three_d_secure`, or `wechat`. An additional hash is included
            on the source with a name matching this value. It contains additional
            information specific to the [payment method](https://nexter.io/docs/sources)
            used.
          enum:
          - ach_credit_transfer
          - ach_debit
          - alipay
          - bancontact
          - card
          - card_present
          - eps
          - giropay
          - ideal
          - multibanco
          - p24
          - sepa_debit
          - sofort
          - three_d_secure
          - wechat
          type: string
          x-nexterBypassValidation: true
        usage:
          description: Either `reusable` or `single_use`. Whether this source should
            be reusable or not. Some source types may or may not be reusable by construction,
            while others may leave the option at creation. If an incompatible value
            is passed, an error will be returned.
          maxLength: 5000
          nullable: true
          type: string
        wechat:
          "$ref": "#/components/schemas/source_type_wechat"
      required:
      - client_secret
      - created
      - flow
      - id
      - livemode
      - object
      - status
      - type
      title: Source
      type: object
      x-expandableFields:
      - code_verification
      - owner
      - receiver
      - redirect
      x-resourceId: source
    source_code_verification_flow:
      properties:
        attempts_remaining:
          description: The number of attempts remaining to authenticate the source
            object with a verification code.
          type: integer
        status:
          description: The status of the code verification, either `pending` (awaiting
            verification, `attempts_remaining` should be greater than 0), `succeeded`
            (successful verification) or `failed` (failed verification, cannot be
            verified anymore as `attempts_remaining` should be 0).
          maxLength: 5000
          type: string
      required:
      - attempts_remaining
      - status
      title: SourceCodeVerificationFlow
      type: object
      x-expandableFields: []
    source_mandate_notification:
      properties:
        amount:
          description: A positive integer in the smallest currency unit (that is,
            100 cents for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency)
            representing the amount associated with the mandate notification. The
            amount is expressed in the currency of the underlying source. Required
            if the notification type is `debit_initiated`.
          nullable: true
          type: integer
        bacs_debit:
          "$ref": "#/components/schemas/source_mandate_notification_bacs_debit_data"
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - source_mandate_notification
          type: string
        reason:
          description: The reason of the mandate notification. Valid reasons are `mandate_confirmed`
            or `debit_initiated`.
          maxLength: 5000
          type: string
        sepa_debit:
          "$ref": "#/components/schemas/source_mandate_notification_sepa_debit_data"
        source:
          "$ref": "#/components/schemas/source"
        status:
          description: The status of the mandate notification. Valid statuses are
            `pending` or `submitted`.
          maxLength: 5000
          type: string
        type:
          description: The type of source this mandate notification is attached to.
            Should be the source type identifier code for the payment method, such
            as `three_d_secure`.
          maxLength: 5000
          type: string
      required:
      - created
      - id
      - livemode
      - object
      - reason
      - source
      - status
      - type
      title: SourceMandateNotification
      type: object
      x-expandableFields:
      - bacs_debit
      - sepa_debit
      - source
      x-resourceId: source_mandate_notification
    source_mandate_notification_bacs_debit_data:
      properties:
        last4:
          description: Last 4 digits of the account number associated with the debit.
          maxLength: 5000
          type: string
      title: SourceMandateNotificationBacsDebitData
      type: object
      x-expandableFields: []
    source_mandate_notification_sepa_debit_data:
      properties:
        creditor_identifier:
          description: SEPA creditor ID.
          maxLength: 5000
          type: string
        last4:
          description: Last 4 digits of the account number associated with the debit.
          maxLength: 5000
          type: string
        mandate_reference:
          description: Mandate reference associated with the debit.
          maxLength: 5000
          type: string
      title: SourceMandateNotificationSepaDebitData
      type: object
      x-expandableFields: []
    source_owner:
      properties:
        address:
          anyOf:
          - "$ref": "#/components/schemas/address"
          description: Owner's address.
          nullable: true
        email:
          description: Owner's email address.
          maxLength: 5000
          nullable: true
          type: string
        name:
          description: Owner's full name.
          maxLength: 5000
          nullable: true
          type: string
        phone:
          description: Owner's phone number (including extension).
          maxLength: 5000
          nullable: true
          type: string
        verified_address:
          anyOf:
          - "$ref": "#/components/schemas/address"
          description: Verified owner's address. Verified values are verified or provided
            by the payment method directly (and if supported) at the time of authorization
            or settlement. They cannot be set or mutated.
          nullable: true
        verified_email:
          description: Verified owner's email address. Verified values are verified
            or provided by the payment method directly (and if supported) at the time
            of authorization or settlement. They cannot be set or mutated.
          maxLength: 5000
          nullable: true
          type: string
        verified_name:
          description: Verified owner's full name. Verified values are verified or
            provided by the payment method directly (and if supported) at the time
            of authorization or settlement. They cannot be set or mutated.
          maxLength: 5000
          nullable: true
          type: string
        verified_phone:
          description: Verified owner's phone number (including extension). Verified
            values are verified or provided by the payment method directly (and if
            supported) at the time of authorization or settlement. They cannot be
            set or mutated.
          maxLength: 5000
          nullable: true
          type: string
      title: SourceOwner
      type: object
      x-expandableFields:
      - address
      - verified_address
    source_receiver_flow:
      properties:
        address:
          description: The address of the receiver source. This is the value that
            should be communicated to the customer to send their funds to.
          maxLength: 5000
          nullable: true
          type: string
        amount_charged:
          description: The total amount that was charged by you. The amount charged
            is expressed in the source's currency.
          type: integer
        amount_received:
          description: The total amount received by the receiver source. `amount_received
            = amount_returned + amount_charged` is true at all time. The amount received
            is expressed in the source's currency.
          type: integer
        amount_returned:
          description: The total amount that was returned to the customer. The amount
            returned is expressed in the source's currency.
          type: integer
        refund_attributes_method:
          description: Type of refund attribute method, one of `email`, `manual`,
            or `none`.
          maxLength: 5000
          type: string
        refund_attributes_status:
          description: Type of refund attribute status, one of `missing`, `requested`,
            or `available`.
          maxLength: 5000
          type: string
      required:
      - amount_charged
      - amount_received
      - amount_returned
      - refund_attributes_method
      - refund_attributes_status
      title: SourceReceiverFlow
      type: object
      x-expandableFields: []
    source_redirect_flow:
      properties:
        failure_reason:
          description: The failure reason for the redirect, either `user_abort` (the
            customer aborted or dropped out of the redirect flow), `declined` (the
            authentication failed or the transaction was declined), or `processing_error`
            (the redirect failed due to a technical error). Present only if the redirect
            status is `failed`.
          maxLength: 5000
          nullable: true
          type: string
        return_url:
          description: The URL you provide to redirect the customer to after they
            authenticated their payment.
          maxLength: 5000
          type: string
        status:
          description: The status of the redirect, either `pending` (ready to be used
            by your customer to authenticate the transaction), `succeeded` (succesful
            authentication, cannot be reused) or `not_required` (redirect should not
            be used) or `failed` (failed authentication, cannot be reused).
          maxLength: 5000
          type: string
        url:
          description: The URL provided to you to redirect a customer to as part of
            a `redirect` authentication flow.
          maxLength: 2048
          type: string
      required:
      - return_url
      - status
      - url
      title: SourceRedirectFlow
      type: object
      x-expandableFields: []
    source_transaction:
      properties:
        ach_credit_transfer:
          "$ref": "#/components/schemas/source_transaction_ach_credit_transfer_data"
        amount:
          description: A positive integer in the smallest currency unit (that is,
            100 cents for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency)
            representing the amount your customer has pushed to the receiver.
          type: integer
        chf_credit_transfer:
          "$ref": "#/components/schemas/source_transaction_chf_credit_transfer_data"
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        currency:
          description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
            in lowercase. Must be a [supported currency](https://nexter.io/docs/currencies).
          maxLength: 3
          type: string
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - source_transaction
          type: string
        paper_check:
          "$ref": "#/components/schemas/source_transaction_paper_check_data"
        sepa_credit_transfer:
          "$ref": "#/components/schemas/source_transaction_sepa_credit_transfer_data"
        source:
          description: The ID of the source this transaction is attached to.
          maxLength: 5000
          type: string
        status:
          description: The status of the transaction, one of `succeeded`, `pending`,
            or `failed`.
          maxLength: 5000
          type: string
        type:
          description: The type of source this transaction is attached to.
          enum:
          - ach_credit_transfer
          - ach_debit
          - alipay
          - bancontact
          - card
          - card_present
          - eps
          - giropay
          - ideal
          - multibanco
          - p24
          - sepa_debit
          - sofort
          - three_d_secure
          - wechat
          type: string
      required:
      - amount
      - created
      - currency
      - id
      - livemode
      - object
      - source
      - status
      - type
      title: SourceTransaction
      type: object
      x-expandableFields:
      - ach_credit_transfer
      - chf_credit_transfer
      - paper_check
      - sepa_credit_transfer
      x-resourceId: source_transaction
    source_transaction_ach_credit_transfer_data:
      properties:
        customer_data:
          description: Customer data associated with the transfer.
          maxLength: 5000
          type: string
        fingerprint:
          description: Bank account fingerprint associated with the transfer.
          maxLength: 5000
          type: string
        last4:
          description: Last 4 digits of the account number associated with the transfer.
          maxLength: 5000
          type: string
        routing_number:
          description: Routing number associated with the transfer.
          maxLength: 5000
          type: string
      title: SourceTransactionAchCreditTransferData
      type: object
      x-expandableFields: []
    source_transaction_chf_credit_transfer_data:
      properties:
        reference:
          description: Reference associated with the transfer.
          maxLength: 5000
          type: string
        sender_address_country:
          description: Sender's country address.
          maxLength: 5000
          type: string
        sender_address_line1:
          description: Sender's line 1 address.
          maxLength: 5000
          type: string
        sender_iban:
          description: Sender's bank account IBAN.
          maxLength: 5000
          type: string
        sender_name:
          description: Sender's name.
          maxLength: 5000
          type: string
      title: SourceTransactionChfCreditTransferData
      type: object
      x-expandableFields: []
    source_transaction_paper_check_data:
      properties:
        available_at:
          description: String unix time for the available date.
          maxLength: 5000
          type: string
        invoices:
          description: Invoice ID associated with the paper check.
          maxLength: 5000
          type: string
      title: SourceTransactionPaperCheckData
      type: object
      x-expandableFields: []
    source_transaction_sepa_credit_transfer_data:
      properties:
        reference:
          description: Reference associated with the transfer.
          maxLength: 5000
          type: string
        sender_iban:
          description: Sender's bank account IBAN.
          maxLength: 5000
          type: string
        sender_name:
          description: Sender's name.
          maxLength: 5000
          type: string
      title: SourceTransactionSepaCreditTransferData
      type: object
      x-expandableFields: []
    source_type_ach_credit_transfer:
      properties:
        account_number:
          nullable: true
          type: string
        bank_name:
          nullable: true
          type: string
        fingerprint:
          nullable: true
          type: string
        refund_account_holder_name:
          nullable: true
          type: string
        refund_account_holder_type:
          nullable: true
          type: string
        refund_routing_number:
          nullable: true
          type: string
        routing_number:
          nullable: true
          type: string
        swift_code:
          nullable: true
          type: string
      type: object
    source_type_ach_debit:
      properties:
        bank_name:
          nullable: true
          type: string
        country:
          nullable: true
          type: string
        fingerprint:
          nullable: true
          type: string
        last4:
          nullable: true
          type: string
        routing_number:
          nullable: true
          type: string
        type:
          nullable: true
          type: string
      type: object
    source_type_alipay:
      properties:
        data_string:
          nullable: true
          type: string
        native_url:
          nullable: true
          type: string
        statement_descriptor:
          nullable: true
          type: string
      type: object
    source_type_bancontact:
      properties:
        bank_code:
          nullable: true
          type: string
        bank_name:
          nullable: true
          type: string
        bic:
          nullable: true
          type: string
        iban_last4:
          nullable: true
          type: string
        preferred_language:
          nullable: true
          type: string
        statement_descriptor:
          nullable: true
          type: string
      type: object
    source_type_card:
      properties:
        address_line1_check:
          nullable: true
          type: string
        address_zip_check:
          nullable: true
          type: string
        brand:
          nullable: true
          type: string
        country:
          nullable: true
          type: string
        cvc_check:
          nullable: true
          type: string
        dynamic_last4:
          nullable: true
          type: string
        exp_month:
          nullable: true
          type: integer
        exp_year:
          nullable: true
          type: integer
        fingerprint:
          type: string
        funding:
          nullable: true
          type: string
        last4:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        three_d_secure:
          type: string
        tokenization_method:
          nullable: true
          type: string
      type: object
    source_type_card_present:
      properties:
        application_cryptogram:
          type: string
        application_preferred_name:
          type: string
        authorization_code:
          nullable: true
          type: string
        authorization_response_code:
          type: string
        brand:
          nullable: true
          type: string
        country:
          nullable: true
          type: string
        cvm_type:
          type: string
        data_type:
          nullable: true
          type: string
        dedicated_file_name:
          type: string
        emv_auth_data:
          type: string
        evidence_customer_signature:
          nullable: true
          type: string
        evidence_transaction_certificate:
          nullable: true
          type: string
        exp_month:
          nullable: true
          type: integer
        exp_year:
          nullable: true
          type: integer
        fingerprint:
          type: string
        funding:
          nullable: true
          type: string
        last4:
          nullable: true
          type: string
        pos_device_id:
          nullable: true
          type: string
        pos_entry_mode:
          type: string
        read_method:
          nullable: true
          type: string
        reader:
          nullable: true
          type: string
        terminal_verification_results:
          type: string
        transaction_status_information:
          type: string
      type: object
    source_type_eps:
      properties:
        reference:
          nullable: true
          type: string
        statement_descriptor:
          nullable: true
          type: string
      type: object
    source_type_giropay:
      properties:
        bank_code:
          nullable: true
          type: string
        bank_name:
          nullable: true
          type: string
        bic:
          nullable: true
          type: string
        statement_descriptor:
          nullable: true
          type: string
      type: object
    source_type_ideal:
      properties:
        bank:
          nullable: true
          type: string
        bic:
          nullable: true
          type: string
        iban_last4:
          nullable: true
          type: string
        statement_descriptor:
          nullable: true
          type: string
      type: object
    source_type_multibanco:
      properties:
        entity:
          nullable: true
          type: string
        reference:
          nullable: true
          type: string
        refund_account_holder_address_city:
          nullable: true
          type: string
        refund_account_holder_address_country:
          nullable: true
          type: string
        refund_account_holder_address_line1:
          nullable: true
          type: string
        refund_account_holder_address_line2:
          nullable: true
          type: string
        refund_account_holder_address_postal_code:
          nullable: true
          type: string
        refund_account_holder_address_state:
          nullable: true
          type: string
        refund_account_holder_name:
          nullable: true
          type: string
        refund_iban:
          nullable: true
          type: string
      type: object
    source_type_p24:
      properties:
        reference:
          nullable: true
          type: string
      type: object
    source_type_sepa_debit:
      properties:
        bank_code:
          nullable: true
          type: string
        branch_code:
          nullable: true
          type: string
        country:
          nullable: true
          type: string
        fingerprint:
          nullable: true
          type: string
        last4:
          nullable: true
          type: string
        mandate_reference:
          nullable: true
          type: string
        mandate_url:
          nullable: true
          type: string
      type: object
    source_type_sofort:
      properties:
        bank_code:
          nullable: true
          type: string
        bank_name:
          nullable: true
          type: string
        bic:
          nullable: true
          type: string
        country:
          nullable: true
          type: string
        iban_last4:
          nullable: true
          type: string
        preferred_language:
          nullable: true
          type: string
        statement_descriptor:
          nullable: true
          type: string
      type: object
    source_type_three_d_secure:
      properties:
        address_line1_check:
          nullable: true
          type: string
        address_zip_check:
          nullable: true
          type: string
        authenticated:
          nullable: true
          type: boolean
        brand:
          nullable: true
          type: string
        card:
          nullable: true
          type: string
        country:
          nullable: true
          type: string
        customer:
          nullable: true
          type: string
        cvc_check:
          nullable: true
          type: string
        dynamic_last4:
          nullable: true
          type: string
        exp_month:
          nullable: true
          type: integer
        exp_year:
          nullable: true
          type: integer
        fingerprint:
          type: string
        funding:
          nullable: true
          type: string
        last4:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        three_d_secure:
          type: string
        tokenization_method:
          nullable: true
          type: string
      type: object
    source_type_wechat:
      properties:
        native_url:
          type: string
        prepay_id:
          type: string
        qr_code_url:
          nullable: true
          type: string
        statement_descriptor:
          type: string
      type: object
    status_transitions:
      properties:
        canceled:
          format: unix-time
          nullable: true
          type: integer
        fulfiled:
          format: unix-time
          nullable: true
          type: integer
        paid:
          format: unix-time
          nullable: true
          type: integer
        returned:
          format: unix-time
          nullable: true
          type: integer
      title: StatusTransitions
      type: object
      x-expandableFields: []
    subscription:
      properties:
        application_fee_percent:
          description: A non-negative decimal between 0 and 100, with at most two
            decimal places. This represents the percentage of the subscription invoice
            subtotal that will be transferred to the application owner's Nexter account.
          nullable: true
          type: number
        billing:
          description: Either `charge_automatically`, or `send_invoice`. When charging
            automatically, Nexter will attempt to pay this subscription at the end
            of the cycle using the default source attached to the customer. When sending
            an invoice, Nexter will email your customer an invoice with payment instructions.
          enum:
          - charge_automatically
          - send_invoice
          type: string
        billing_cycle_anchor:
          description: Determines the date of the first full invoice, and, for plans
            with `month` or `year` intervals, the day of the month for subsequent
            invoices.
          format: unix-time
          type: integer
        billing_thresholds:
          anyOf:
          - "$ref": "#/components/schemas/subscription_billing_thresholds"
          description: Define thresholds at which an invoice will be sent, and the
            subscription advanced to a new billing period
          nullable: true
        cancel_at_period_end:
          description: If the subscription has been canceled with the `at_period_end`
            flag set to `true`, `cancel_at_period_end` on the subscription will be
            true. You can use this attribute to determine whether a subscription that
            has a status of active is scheduled to be canceled at the end of the current
            period.
          type: boolean
        canceled_at:
          description: If the subscription has been canceled, the date of that cancellation.
            If the subscription was canceled with `cancel_at_period_end`, `canceled_at`
            will still reflect the date of the initial cancellation request, not the
            end of the subscription period when the subscription is automatically
            moved to a canceled state.
          format: unix-time
          nullable: true
          type: integer
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        current_period_end:
          description: End of the current period that the subscription has been invoiced
            for. At the end of this period, a new invoice will be created.
          format: unix-time
          type: integer
        current_period_start:
          description: Start of the current period that the subscription has been
            invoiced for.
          format: unix-time
          type: integer
        customer:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/customer"
          - "$ref": "#/components/schemas/deleted_customer"
          description: ID of the customer who owns the subscription.
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/customer"
            - "$ref": "#/components/schemas/deleted_customer"
        days_until_due:
          description: Number of days a customer has to pay invoices generated by
            this subscription. This value will be `null` for subscriptions where `billing=charge_automatically`.
          nullable: true
          type: integer
        default_payment_method:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/payment_method"
          description: ID of the default payment method for the subscription. It must
            belong to the customer associated with the subscription. If not set, invoices
            will use the default payment method in the customer's invoice settings.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/payment_method"
        default_source:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/alipay_account"
          - "$ref": "#/components/schemas/bank_account"
          - "$ref": "#/components/schemas/bitcoin_receiver"
          - "$ref": "#/components/schemas/card"
          - "$ref": "#/components/schemas/source"
          description: ID of the default payment source for the subscription. It must
            belong to the customer associated with the subscription and be in a chargeable
            state. If not set, defaults to the customer's default source.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/alipay_account"
            - "$ref": "#/components/schemas/bank_account"
            - "$ref": "#/components/schemas/bitcoin_receiver"
            - "$ref": "#/components/schemas/card"
            - "$ref": "#/components/schemas/source"
        default_tax_rates:
          description: The tax rates that will apply to any subscription item that
            does not have `tax_rates` set. Invoices created will have their `default_tax_rates`
            populated from the subscription.
          items:
            "$ref": "#/components/schemas/tax_rate"
          nullable: true
          type: array
        discount:
          anyOf:
          - "$ref": "#/components/schemas/discount"
          description: Describes the current discount applied to this subscription,
            if there is one. When billing, a discount applied to a subscription overrides
            a discount applied on a customer-wide basis.
          nullable: true
        ended_at:
          description: If the subscription has ended, the date the subscription ended.
          format: unix-time
          nullable: true
          type: integer
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        items:
          description: List of subscription items, each with an attached plan.
          properties:
            data:
              items:
                "$ref": "#/components/schemas/subscription_item"
              type: array
            has_more:
              description: True if this list has another page of items after this
                one that can be fetched.
              type: boolean
            object:
              description: String representing the object's type. Objects of the same
                type share the same value. Always has the value `list`.
              enum:
              - list
              type: string
            url:
              description: The URL where this list can be accessed.
              maxLength: 5000
              type: string
          required:
          - data
          - has_more
          - object
          - url
          title: SubscriptionItemList
          type: object
          x-expandableFields:
          - data
        latest_invoice:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/invoice"
          description: The most recent invoice this subscription has generated.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/invoice"
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        metadata:
          additionalProperties:
            maxLength: 500
            type: string
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - subscription
          type: string
        plan:
          anyOf:
          - "$ref": "#/components/schemas/plan"
          description: Hash describing the plan the customer is subscribed to. Only
            set if the subscription contains a single plan.
          nullable: true
        quantity:
          description: The quantity of the plan to which the customer is subscribed.
            For example, if your plan is $10/user/month, and your customer has 5 users,
            you could pass 5 as the quantity to have the customer charged $50 (5 x
            $10) monthly. Only set if the subscription contains a single plan.
          nullable: true
          type: integer
        start:
          description: Date of the last substantial change to this subscription. For
            example, a change to the items array, or a change of status, will reset
            this timestamp.
          format: unix-time
          type: integer
        status:
          description: "Possible values are `incomplete`, `incomplete_expired`, `trialing`,
            `active`, `past_due`, `canceled`, or `unpaid`. \n\nFor `billing=charge_automatically`
            a subscription moves into `incomplete` if the initial payment attempt
            fails. A subscription in this state can only have metadata and default_source
            updated. Once the first invoice is paid, the subscription moves into an
            `active` state. If the first invoice is not paid within 23 hours, the
            subscription transitions to `incomplete_expired`. This is a terminal state,
            the open invoice will be voided and no further invoices will be generated.
            \n\nA subscription that is currently in a trial period is `trialing` and
            moves to `active` when the trial period is over. \n\nIf subscription `billing=charge_automatically`
            it becomes `past_due` when payment to renew it fails and `canceled` or
            `unpaid` (depending on your subscriptions settings) when Nexter has exhausted
            all payment retry attempts. \n\nIf subscription `billing=send_invoice`
            it becomes `past_due` when its invoice is not paid by the due date, and
            `canceled` or `unpaid` if it is still not paid by an additional deadline
            after that. Note that when a subscription has a status of `unpaid`, no
            subsequent invoices will be attempted (invoices will be created, but then
            immediately automatically closed). After receiving updated payment information
            from a customer, you may choose to reopen and pay their closed invoices."
          enum:
          - active
          - canceled
          - incomplete
          - incomplete_expired
          - past_due
          - trialing
          - unpaid
          type: string
        tax_percent:
          description: If provided, each invoice created by this subscription will
            apply the tax rate, increasing the amount billed to the customer.
          nullable: true
          type: number
        trial_end:
          description: If the subscription has a trial, the end of that trial.
          format: unix-time
          nullable: true
          type: integer
        trial_start:
          description: If the subscription has a trial, the beginning of that trial.
          format: unix-time
          nullable: true
          type: integer
      required:
      - billing
      - billing_cycle_anchor
      - cancel_at_period_end
      - created
      - current_period_end
      - current_period_start
      - customer
      - id
      - items
      - livemode
      - metadata
      - object
      - start
      - status
      title: Subscription
      type: object
      x-expandableFields:
      - billing_thresholds
      - customer
      - default_payment_method
      - default_source
      - default_tax_rates
      - discount
      - items
      - latest_invoice
      - plan
      x-resourceId: subscription
    subscription_billing_thresholds:
      properties:
        amount_gte:
          description: Monetary threshold that triggers the subscription to create
            an invoice
          nullable: true
          type: integer
        reset_billing_cycle_anchor:
          description: Indicates if the `billing_cycle_anchor` should be reset when
            a threshold is reached. If true, `billing_cycle_anchor` will be updated
            to the date/time the threshold was last reached; otherwise, the value
            will remain unchanged. This value may not be `true` if the subscription
            contains items with plans that have `aggregate_usage=last_ever`.
          nullable: true
          type: boolean
      title: SubscriptionBillingThresholds
      type: object
      x-expandableFields: []
    subscription_item:
      properties:
        billing_thresholds:
          anyOf:
          - "$ref": "#/components/schemas/subscription_item_billing_thresholds"
          description: Define thresholds at which an invoice will be sent, and the
            related subscription advanced to a new billing period
          nullable: true
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          type: integer
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        metadata:
          additionalProperties:
            maxLength: 500
            type: string
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - subscription_item
          type: string
        plan:
          "$ref": "#/components/schemas/plan"
        quantity:
          description: The [quantity](https://nexter.io/docs/subscriptions/quantities)
            of the plan to which the customer should be subscribed.
          type: integer
        subscription:
          description: The `subscription` this `subscription_item` belongs to.
          maxLength: 5000
          type: string
        tax_rates:
          description: The tax rates which apply to this `subscription_item`. When
            set, the `default_tax_rates` on the subscription do not apply to this
            `subscription_item`.
          items:
            "$ref": "#/components/schemas/tax_rate"
          nullable: true
          type: array
      required:
      - created
      - id
      - metadata
      - object
      - plan
      - subscription
      title: SubscriptionItem
      type: object
      x-expandableFields:
      - billing_thresholds
      - plan
      - tax_rates
      x-resourceId: subscription_item
    subscription_item_billing_thresholds:
      properties:
        usage_gte:
          description: Usage threshold that triggers the subscription to create an
            invoice
          nullable: true
          type: integer
      title: SubscriptionItemBillingThresholds
      type: object
      x-expandableFields: []
    subscription_schedule:
      properties:
        billing:
          description: Either `charge_automatically`, or `send_invoice`. When charging
            automatically, Nexter will attempt to pay the underlying subscription
            at the end of each billing cycle using the default source attached to
            the customer. When sending an invoice, Nexter will email your customer
            an invoice with payment instructions.
          enum:
          - charge_automatically
          - send_invoice
          nullable: true
          type: string
        billing_thresholds:
          anyOf:
          - "$ref": "#/components/schemas/subscription_billing_thresholds"
          description: Define thresholds at which an invoice will be sent, and the
            subscription advanced to a new billing period
          nullable: true
        canceled_at:
          description: Time at which the subscription schedule was canceled. Measured
            in seconds since the Unix epoch.
          format: unix-time
          nullable: true
          type: integer
        completed_at:
          description: Time at which the subscription schedule was completed. Measured
            in seconds since the Unix epoch.
          format: unix-time
          nullable: true
          type: integer
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        current_phase:
          anyOf:
          - "$ref": "#/components/schemas/subscription_schedule_current_phase"
          description: Object representing the start and end dates for the current
            phase of the subscription schedule, if it is `active`.
          nullable: true
        customer:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/customer"
          - "$ref": "#/components/schemas/deleted_customer"
          description: ID of the customer who owns the subscription schedule.
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/customer"
            - "$ref": "#/components/schemas/deleted_customer"
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        invoice_settings:
          anyOf:
          - "$ref": "#/components/schemas/invoice_setting_subscription_schedule_setting"
          description: The subscription schedule's default invoice settings.
          nullable: true
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        metadata:
          additionalProperties:
            maxLength: 500
            type: string
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
          nullable: true
          type: object
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - subscription_schedule
          type: string
        phases:
          description: Configuration for the subscription schedule's phases.
          items:
            "$ref": "#/components/schemas/subscription_schedule_phase_configuration"
          type: array
        released_at:
          description: Time at which the subscription schedule was released. Measured
            in seconds since the Unix epoch.
          format: unix-time
          nullable: true
          type: integer
        released_subscription:
          description: ID of the subscription once managed by the subscription schedule
            (if it is released).
          maxLength: 5000
          nullable: true
          type: string
        renewal_behavior:
          description: Behavior of the subscription schedule and underlying subscription
            when it ends.
          enum:
          - none
          - release
          - renew
          type: string
        renewal_interval:
          anyOf:
          - "$ref": "#/components/schemas/subscription_schedule_renewal_interval"
          description: Interval and duration at which the subscription schedule renews
            for when it ends if `renewal_behavior` is `renew`.
          nullable: true
        revision:
          description: ID of the current revision of the subscription schedule.
          maxLength: 5000
          type: string
        status:
          description: Possible values are `not_started`, `active`, `completed`, `released`,
            and `canceled`.
          enum:
          - active
          - canceled
          - completed
          - not_started
          - released
          type: string
        subscription:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/subscription"
          description: ID of the subscription managed by the subscription schedule.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/subscription"
      required:
      - created
      - customer
      - id
      - livemode
      - object
      - phases
      - renewal_behavior
      - revision
      - status
      title: SubscriptionSchedule
      type: object
      x-expandableFields:
      - billing_thresholds
      - current_phase
      - customer
      - invoice_settings
      - phases
      - renewal_interval
      - subscription
      x-resourceId: subscription_schedule
    subscription_schedule_configuration_item:
      properties:
        billing_thresholds:
          anyOf:
          - "$ref": "#/components/schemas/subscription_item_billing_thresholds"
          description: Define thresholds at which an invoice will be sent, and the
            related subscription advanced to a new billing period
          nullable: true
        plan:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/plan"
          - "$ref": "#/components/schemas/deleted_plan"
          description: ID of the plan to which the customer should be subscribed.
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/plan"
            - "$ref": "#/components/schemas/deleted_plan"
        quantity:
          description: Quantity of the plan to which the customer should be subscribed.
          nullable: true
          type: integer
        tax_rates:
          description: The tax rates which apply to this `phase_item`. When set, the
            `default_tax_rates` on the phase do not apply to this `phase_item`.
          items:
            "$ref": "#/components/schemas/tax_rate"
          nullable: true
          type: array
      required:
      - plan
      title: SubscriptionScheduleConfigurationItem
      type: object
      x-expandableFields:
      - billing_thresholds
      - plan
      - tax_rates
    subscription_schedule_current_phase:
      properties:
        end_date:
          format: unix-time
          type: integer
        start_date:
          format: unix-time
          type: integer
      required:
      - end_date
      - start_date
      title: SubscriptionScheduleCurrentPhase
      type: object
      x-expandableFields: []
    subscription_schedule_phase_configuration:
      properties:
        application_fee_percent:
          description: A non-negative decimal between 0 and 100, with at most two
            decimal places. This represents the percentage of the subscription invoice
            subtotal that will be transferred to the application owner's Nexter account
            during this phase of the schedule.
          nullable: true
          type: number
        coupon:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/coupon"
          description: ID of the coupon to use during this phase of the subscription
            schedule.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/coupon"
        default_tax_rates:
          items:
            "$ref": "#/components/schemas/tax_rate"
          nullable: true
          type: array
        end_date:
          description: The end of this phase of the subscription schedule.
          format: unix-time
          type: integer
        plans:
          description: Plans to subscribe during this phase of the subscription schedule.
          items:
            "$ref": "#/components/schemas/subscription_schedule_configuration_item"
          type: array
        start_date:
          description: The start of this phase of the subscription schedule.
          format: unix-time
          type: integer
        tax_percent:
          description: If provided, each invoice created during this phase of the
            subscription schedule will apply the tax rate, increasing the amount billed
            to the customer.
          nullable: true
          type: number
        trial_end:
          description: When the trial ends within the phase.
          format: unix-time
          nullable: true
          type: integer
      required:
      - end_date
      - plans
      - start_date
      title: SubscriptionSchedulePhaseConfiguration
      type: object
      x-expandableFields:
      - coupon
      - default_tax_rates
      - plans
    subscription_schedule_renewal_interval:
      properties:
        interval:
          description: Interval at which to renew the subscription schedule for when
            it ends.
          enum:
          - day
          - month
          - week
          - year
          type: string
        length:
          description: Number of intervals to renew the subscription schedule for
            when it ends.
          type: integer
      required:
      - interval
      - length
      title: SubscriptionScheduleRenewalInterval
      type: object
      x-expandableFields: []
    subscription_schedule_revision:
      properties:
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        invoice_settings:
          anyOf:
          - "$ref": "#/components/schemas/invoice_setting_subscription_schedule_setting"
          nullable: true
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        metadata:
          additionalProperties:
            maxLength: 500
            type: string
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
          nullable: true
          type: object
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - subscription_schedule_revision
          type: string
        phases:
          description: Configuration for the subscription schedule's phases.
          items:
            "$ref": "#/components/schemas/subscription_schedule_phase_configuration"
          type: array
        previous_revision:
          maxLength: 5000
          nullable: true
          type: string
        renewal_behavior:
          description: Behavior of the subscription schedule and underlying subscription
            when it ends.
          enum:
          - none
          - release
          - renew
          type: string
        renewal_interval:
          anyOf:
          - "$ref": "#/components/schemas/subscription_schedule_renewal_interval"
          description: Interval and duration at which the subscription schedule renews
            for when it ends if `renewal_behavior` is `renew`.
          nullable: true
        schedule:
          description: ID of the subscription schedule the revision points to.
          maxLength: 5000
          type: string
      required:
      - created
      - id
      - livemode
      - object
      - phases
      - renewal_behavior
      - schedule
      title: SubscriptionScheduleRevision
      type: object
      x-expandableFields:
      - invoice_settings
      - phases
      - renewal_interval
      x-resourceId: subscription_schedule_revision
    tax_amount:
      properties:
        amount:
          description: The amount, in %s, of the tax.
          type: integer
        inclusive:
          description: Whether this tax amount is inclusive or exclusive.
          type: boolean
        tax_rate:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/tax_rate"
          description: The tax rate that was applied to get this tax amount.
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/tax_rate"
      required:
      - amount
      - inclusive
      - tax_rate
      title: TaxAmount
      type: object
      x-expandableFields:
      - tax_rate
    tax_id:
      properties:
        country:
          description: Two-letter ISO code representing the country of the tax ID.
          maxLength: 5000
          nullable: true
          type: string
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        customer:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/customer"
          description: ID of the customer.
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/customer"
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - tax_id
          type: string
        type:
          description: Type of the tax ID, one of `eu_vat`, `nz_gst`, `au_abn`, or
            `unknown`
          enum:
          - au_abn
          - eu_vat
          - nz_gst
          - unknown
          type: string
        value:
          description: Value of the tax ID.
          maxLength: 5000
          type: string
        verification:
          "$ref": "#/components/schemas/tax_id_verification"
      required:
      - created
      - customer
      - id
      - livemode
      - object
      - type
      - value
      - verification
      title: tax_id
      type: object
      x-expandableFields:
      - customer
      - verification
      x-resourceId: tax_id
    tax_id_verification:
      properties:
        status:
          description: Verification status, one of `pending`, `unavailable`, `unverified`,
            or `verified`.
          enum:
          - pending
          - unavailable
          - unverified
          - verified
          type: string
        verified_address:
          description: Verified address.
          maxLength: 5000
          nullable: true
          type: string
        verified_name:
          description: Verified name.
          maxLength: 5000
          nullable: true
          type: string
      required:
      - status
      title: tax_id_verification
      type: object
      x-expandableFields: []
    tax_info:
      properties:
        tax_id:
          description: The customer's tax ID number.
          maxLength: 5000
          nullable: true
          type: string
        type:
          description: The type of ID number.
          maxLength: 5000
          type: string
      required:
      - type
      title: TaxInfo
      type: object
      x-expandableFields: []
    tax_info_verification:
      properties:
        status:
          description: The state of verification for this customer. Possible values
            are `unverified`, `pending`, or `verified`.
          maxLength: 5000
          nullable: true
          type: string
        verified_name:
          description: The official name associated with the tax ID returned from
            the external provider.
          maxLength: 5000
          nullable: true
          type: string
      title: TaxInfoVerification
      type: object
      x-expandableFields: []
    tax_rate:
      properties:
        active:
          description: Defaults to `true`. When set to `false`, this tax rate cannot
            be applied to objects in the API, but will still be applied to subscriptions
            and invoices that already have it set.
          type: boolean
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        description:
          description: An arbitrary string attached to the tax rate for your internal
            use only. It will not be visible to your customers.
          maxLength: 5000
          nullable: true
          type: string
        display_name:
          description: The display name of the tax rates as it will appear to your
            customer on their receipt email, PDF, and the hosted invoice page.
          maxLength: 5000
          type: string
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        inclusive:
          description: This specifies if the tax rate is inclusive or exclusive.
          type: boolean
        jurisdiction:
          description: The jurisdiction for the tax rate.
          maxLength: 5000
          nullable: true
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        metadata:
          additionalProperties:
            maxLength: 500
            type: string
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - tax_rate
          type: string
        percentage:
          description: This represents the tax rate percent out of 100.
          type: number
      required:
      - active
      - created
      - display_name
      - id
      - inclusive
      - livemode
      - metadata
      - object
      - percentage
      title: TaxRate
      type: object
      x-expandableFields: []
      x-resourceId: tax_rate
    terminal.connection_token:
      properties:
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - terminal.connection_token
          type: string
        secret:
          description: Your application should pass this token to the Nexter Terminal
            SDK.
          maxLength: 5000
          type: string
      required:
      - object
      - secret
      title: TerminalConnectionToken
      type: object
      x-expandableFields: []
      x-resourceId: terminal.connection_token
    terminal.location:
      properties:
        address:
          "$ref": "#/components/schemas/address"
        display_name:
          description: The display name of the location.
          maxLength: 5000
          type: string
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - terminal.location
          type: string
      required:
      - address
      - display_name
      - id
      - object
      title: TerminalLocationLocation
      type: object
      x-expandableFields:
      - address
      x-resourceId: terminal.location
    terminal.reader:
      properties:
        device_sw_version:
          description: The current software version of the reader.
          maxLength: 5000
          nullable: true
          type: string
        device_type:
          description: Type of reader, e.g., `verifone_P400` or `bbpos_chipper2x`.
          maxLength: 5000
          type: string
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        ip_address:
          description: The local IP address of the reader.
          maxLength: 5000
          nullable: true
          type: string
        label:
          description: Custom label given to the reader for easier identification.
          maxLength: 5000
          type: string
        location:
          description: The location identifier of the reader.
          maxLength: 5000
          nullable: true
          type: string
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - terminal.reader
          type: string
        serial_number:
          description: Serial number of the reader.
          maxLength: 5000
          type: string
        status:
          description: The networking status of the reader.
          maxLength: 5000
          nullable: true
          type: string
      required:
      - device_type
      - id
      - label
      - object
      - serial_number
      title: TerminalReaderReader
      type: object
      x-expandableFields: []
      x-resourceId: terminal.reader
    three_d_secure:
      properties:
        amount:
          type: integer
        authenticated:
          description: True if the cardholder went through the authentication flow
            and their bank indicated that authentication succeeded.
          type: boolean
        card:
          "$ref": "#/components/schemas/card"
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        currency:
          description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
            in lowercase. Must be a [supported currency](https://nexter.io/docs/currencies).
          maxLength: 5000
          type: string
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - three_d_secure
          type: string
        redirect_url:
          description: If present, this is the URL that you should send the cardholder
            to for authentication. If you are going to use Nexter.js to display the
            authentication page in an iframe, you should use the value "_callback".
          maxLength: 5000
          nullable: true
          type: string
        status:
          description: Possible values are `redirect_pending`, `succeeded`, or `failed`.
            When the cardholder can be authenticated, the object starts with status
            `redirect_pending`. When liability will be shifted to the cardholder's
            bank (either because the cardholder was successfully authenticated, or
            because the bank has not implemented 3D Secure, the object wlil be in
            status `succeeded`. `failed` indicates that authentication was attempted
            unsuccessfully.
          maxLength: 5000
          type: string
      required:
      - amount
      - authenticated
      - card
      - created
      - currency
      - id
      - livemode
      - object
      - status
      title: ThreeDSecure
      type: object
      x-expandableFields:
      - card
      x-resourceId: three_d_secure
    three_d_secure_details:
      properties:
        succeeded:
          type: boolean
        version:
          maxLength: 5000
          type: string
      required:
      - succeeded
      - version
      title: three_d_secure_details
      type: object
      x-expandableFields: []
    three_d_secure_usage:
      properties:
        supported:
          description: Whether 3D Secure is supported on this card.
          type: boolean
      required:
      - supported
      title: three_d_secure_usage
      type: object
      x-expandableFields: []
    token:
      properties:
        bank_account:
          "$ref": "#/components/schemas/bank_account"
        card:
          "$ref": "#/components/schemas/card"
        client_ip:
          description: IP address of the client that generated the token.
          maxLength: 5000
          nullable: true
          type: string
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - token
          type: string
        type:
          description: 'Type of the token: `account`, `bank_account`, `card`, or `pii`.'
          maxLength: 5000
          type: string
        used:
          description: Whether this token has already been used (tokens can be used
            only once).
          type: boolean
      required:
      - created
      - id
      - livemode
      - object
      - type
      - used
      title: Token
      type: object
      x-expandableFields:
      - bank_account
      - card
      x-resourceId: token
    topup:
      properties:
        amount:
          description: Amount transferred.
          type: integer
        balance_transaction:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/balance_transaction"
          description: ID of the balance transaction that describes the impact of
            this top-up on your account balance. May not be specified depending on
            status of top-up.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/balance_transaction"
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        currency:
          description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
            in lowercase. Must be a [supported currency](https://nexter.io/docs/currencies).
          maxLength: 5000
          type: string
        description:
          description: An arbitrary string attached to the object. Often useful for
            displaying to users.
          maxLength: 5000
          nullable: true
          type: string
        expected_availability_date:
          description: Date the funds are expected to arrive in your Nexter account
            for payouts. This factors in delays like weekends or bank holidays. May
            not be specified depending on status of top-up.
          nullable: true
          type: integer
        failure_code:
          description: Error code explaining reason for top-up failure if available
            (see [the errors section](https://nexter.io/docs/api#errors) for a list
            of codes).
          maxLength: 5000
          nullable: true
          type: string
        failure_message:
          description: Message to user further explaining reason for top-up failure
            if available.
          maxLength: 5000
          nullable: true
          type: string
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        metadata:
          additionalProperties:
            maxLength: 500
            type: string
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - topup
          type: string
        source:
          "$ref": "#/components/schemas/source"
        statement_descriptor:
          description: Extra information about a top-up. This will appear on your
            source's bank statement. It must contain at least one letter.
          maxLength: 5000
          nullable: true
          type: string
        status:
          description: The status of the top-up is either `canceled`, `failed`, `pending`,
            `reversed`, or `succeeded`.
          enum:
          - canceled
          - failed
          - pending
          - reversed
          - succeeded
          type: string
        transfer_group:
          description: A string that identifies this top-up as part of a group.
          maxLength: 5000
          nullable: true
          type: string
      required:
      - amount
      - created
      - currency
      - id
      - livemode
      - metadata
      - object
      - source
      - status
      title: Topup
      type: object
      x-expandableFields:
      - balance_transaction
      - source
      x-resourceId: topup
    transfer:
      properties:
        amount:
          description: Amount in %s to be transferred.
          type: integer
        amount_reversed:
          description: Amount in %s reversed (can be less than the amount attribute
            on the transfer if a partial reversal was issued).
          type: integer
        balance_transaction:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/balance_transaction"
          description: Balance transaction that describes the impact of this transfer
            on your account balance.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/balance_transaction"
        created:
          description: Time that this record of the transfer was first created.
          format: unix-time
          type: integer
        currency:
          description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
            in lowercase. Must be a [supported currency](https://nexter.io/docs/currencies).
          maxLength: 3
          type: string
        description:
          description: An arbitrary string attached to the object. Often useful for
            displaying to users.
          maxLength: 5000
          nullable: true
          type: string
        destination:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/account"
          description: ID of the Nexter account the transfer was sent to.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/account"
        destination_payment:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/charge"
          description: If the destination is a Nexter account, this will be the ID
            of the payment that the destination account received for the transfer.
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/charge"
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        metadata:
          additionalProperties:
            maxLength: 500
            type: string
          description: A set of key-value pairs that you can attach to a transfer
            object. It can be useful for storing additional information about the
            transfer in a structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - transfer
          type: string
        reversals:
          description: A list of reversals that have been applied to the transfer.
          properties:
            data:
              items:
                "$ref": "#/components/schemas/transfer_reversal"
              type: array
            has_more:
              description: True if this list has another page of items after this
                one that can be fetched.
              type: boolean
            object:
              description: String representing the object's type. Objects of the same
                type share the same value. Always has the value `list`.
              enum:
              - list
              type: string
            url:
              description: The URL where this list can be accessed.
              maxLength: 5000
              type: string
          required:
          - data
          - has_more
          - object
          - url
          title: TransferReversalList
          type: object
          x-expandableFields:
          - data
        reversed:
          description: Whether the transfer has been fully reversed. If the transfer
            is only partially reversed, this attribute will still be false.
          type: boolean
        source_transaction:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/charge"
          description: ID of the charge or payment that was used to fund the transfer.
            If null, the transfer was funded from the available balance.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/charge"
        source_type:
          description: The source balance this transfer came from. One of `card` or
            `bank_account`.
          maxLength: 5000
          nullable: true
          type: string
        transfer_group:
          description: A string that identifies this transaction as part of a group.
            See the [Connect documentation](https://nexter.io/docs/connect/charges-transfers#grouping-transactions)
            for details.
          maxLength: 5000
          nullable: true
          type: string
      required:
      - amount
      - amount_reversed
      - created
      - currency
      - id
      - livemode
      - metadata
      - object
      - reversals
      - reversed
      title: Transfer
      type: object
      x-expandableFields:
      - balance_transaction
      - destination
      - destination_payment
      - reversals
      - source_transaction
      x-resourceId: transfer
    transfer_data:
      properties:
        destination:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/account"
          description: |-
            The account (if any) the payment will be attributed to for tax
            reporting, and where funds from the payment will be transferred to upon
            payment success.
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/account"
      required:
      - destination
      title: transfer_data
      type: object
      x-expandableFields:
      - destination
    transfer_reversal:
      properties:
        amount:
          description: Amount, in %s.
          type: integer
        balance_transaction:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/balance_transaction"
          description: Balance transaction that describes the impact on your account
            balance.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/balance_transaction"
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        currency:
          description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
            in lowercase. Must be a [supported currency](https://nexter.io/docs/currencies).
          maxLength: 3
          type: string
        destination_payment_refund:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/refund"
          description: Linked payment refund for the transfer reversal.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/refund"
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        metadata:
          additionalProperties:
            maxLength: 500
            type: string
          description: Set of key-value pairs that you can attach to an object. This
            can be useful for storing additional information about the object in a
            structured format.
          type: object
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - transfer_reversal
          type: string
        source_refund:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/refund"
          description: ID of the refund responsible for the transfer reversal.
          nullable: true
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/refund"
        transfer:
          anyOf:
          - maxLength: 5000
            type: string
          - "$ref": "#/components/schemas/transfer"
          description: ID of the transfer that was reversed.
          x-expansionResources:
            oneOf:
            - "$ref": "#/components/schemas/transfer"
      required:
      - amount
      - created
      - currency
      - id
      - metadata
      - object
      - transfer
      title: TransferReversal
      type: object
      x-expandableFields:
      - balance_transaction
      - destination_payment_refund
      - source_refund
      - transfer
      x-resourceId: transfer_reversal
    transfer_schedule:
      properties:
        delay_days:
          description: The number of days charges for the account will be held before
            being paid out.
          type: integer
        interval:
          description: How frequently funds will be paid out. One of `manual` (payouts
            only created via API call), `daily`, `weekly`, or `monthly`.
          maxLength: 5000
          type: string
        monthly_anchor:
          description: The day of the month funds will be paid out. Only shown if
            `interval` is monthly. Payouts scheduled between the 29th and 31st of
            the month are sent on the last day of shorter months.
          type: integer
        weekly_anchor:
          description: The day of the week funds will be paid out, of the style 'monday',
            'tuesday', etc. Only shown if `interval` is weekly.
          maxLength: 5000
          type: string
      required:
      - delay_days
      - interval
      title: TransferSchedule
      type: object
      x-expandableFields: []
    transform_usage:
      properties:
        divide_by:
          description: Divide usage by this number.
          type: integer
        round:
          description: After division, either round the result `up` or `down`.
          enum:
          - down
          - up
          type: string
      required:
      - divide_by
      - round
      title: TransformUsage
      type: object
      x-expandableFields: []
    usage_record:
      properties:
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - usage_record
          type: string
        quantity:
          description: The usage quantity for the specified date.
          type: integer
        subscription_item:
          description: The ID of the subscription item this usage record contains
            data for.
          maxLength: 5000
          type: string
        timestamp:
          description: The timestamp when this usage occurred.
          format: unix-time
          type: integer
      required:
      - id
      - livemode
      - object
      - quantity
      - subscription_item
      - timestamp
      title: UsageRecord
      type: object
      x-expandableFields: []
      x-resourceId: usage_record
    usage_record_summary:
      properties:
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        invoice:
          description: The invoice in which this usage period has been billed for.
          maxLength: 5000
          nullable: true
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - usage_record_summary
          type: string
        period:
          "$ref": "#/components/schemas/period"
        subscription_item:
          description: The ID of the subscription item this summary is describing.
          maxLength: 5000
          type: string
        total_usage:
          description: The total usage within this usage period.
          type: integer
      required:
      - id
      - livemode
      - object
      - period
      - subscription_item
      - total_usage
      title: UsageRecordSummary
      type: object
      x-expandableFields:
      - period
      x-resourceId: usage_record_summary
    webhook_endpoint:
      properties:
        api_version:
          description: The API version events are rendered as for this webhook endpoint.
          maxLength: 5000
          nullable: true
          type: string
        application:
          description: The ID of the associated Connect application.
          maxLength: 5000
          nullable: true
          type: string
        created:
          description: Time at which the object was created. Measured in seconds since
            the Unix epoch.
          format: unix-time
          type: integer
        enabled_events:
          description: The list of events to enable for this endpoint. You may specify
            `['*']` to enable all events.
          items:
            type: string
          type: array
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        livemode:
          description: Has the value `true` if the object exists in live mode or the
            value `false` if the object exists in test mode.
          type: boolean
        object:
          description: String representing the object's type. Objects of the same
            type share the same value.
          enum:
          - webhook_endpoint
          type: string
        secret:
          description: The endpoint's secret, used to generate [webhook signatures](https://nexter.io/docs/webhooks/signatures).
            Only returned at creation.
          maxLength: 5000
          type: string
        status:
          description: The status of the webhook. It can be `enabled` or `disabled`.
          maxLength: 5000
          type: string
        url:
          description: The URL of the webhook endpoint.
          maxLength: 5000
          type: string
      required:
      - created
      - enabled_events
      - id
      - livemode
      - object
      - status
      - url
      title: NotificationWebhookEndpoint
      type: object
      x-expandableFields: []
      x-resourceId: webhook_endpoint
  securitySchemes:
    basicAuth:
      description: 'Basic HTTP authentication. Allowed headers-- Authorization: Basic
        <api_key> | Authorization: Basic <base64 hash of `api_key:`>'
      scheme: basic
      type: http
    bearerAuth:
      bearerFormat: auth-scheme
      description: 'Bearer HTTP authentication. Allowed headers-- Authorization: Bearer
        <api_key>'
      scheme: bearer
      type: http
info:
  contact:
    email: dev-platform@nexter.io
    name: Nexter Dev Platform Team
    url: https://nexter.io
  description: The Nexter REST API. Please see https://nexter.io/docs/api for more
    details.
  termsOfService: https://nexter.io/us/terms/
  title: Nexter API
  version: '2019-03-14'
  x-nexterSpecFilename: spec3
openapi: 3.0.0
paths:
  "/v1/3d_secure":
    post:
      description: "<p>Initiate 3D Secure authentication.</p>"
      operationId: Post3dSecure
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding:
              expand:
                explode: true
                style: deepObject
            schema:
              additionalProperties: false
              properties:
                amount:
                  description: Amount of the charge that you will create when authentication
                    completes.
                  type: integer
                card:
                  description: The ID of a card token, or the ID of a card belonging
                    to the given customer.
                  maxLength: 5000
                  type: string
                currency:
                  description: Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
                    in lowercase. Must be a [supported currency](https://nexter.io/docs/currencies).
                  type: string
                customer:
                  maxLength: 5000
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    maxLength: 5000
                    type: string
                  type: array
                return_url:
                  description: The URL that the cardholder's browser will be returned
                    to when authentication completes.
                  type: string
              required:
              - amount
              - currency
              - return_url
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/three_d_secure"
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
          description: Error response.
  "/v1/3d_secure/{three_d_secure}":
    get:
      description: "<p>Retrieves a 3D Secure object.</p>"
      operationId: Get3dSecureThreeDSecure
      parameters:
      - description: Specifies which fields in the response should be expanded.
        explode: true
        in: query
        name: expand
        required: false
        schema:
          items:
            maxLength: 5000
            type: string
          type: array
        style: deepObject
      - description: The identifier of the 3D Secure object to be retrieved.
        in: path
        name: three_d_secure
        required: true
        schema:
          maxLength: 5000
          type: string
        style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/three_d_secure"
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
          description: Error response.
  "/v1/account":
    delete:
      description: |-
        <p>With <a href="/docs/connect">Connect</a>, you may delete Custom accounts you manage.</p>

        <p>Custom accounts created using test-mode keys can be deleted at any time. Custom accounts created using live-mode keys may only be deleted once all balances are zero.</p>

        <p>If you are looking to close your own account, use the <a href="https://dashboard.nexter.io/account/data">data tab in your account settings</a> instead.</p>
      operationId: DeleteAccount
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/deleted_account"
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
          description: Error response.
    get:
      description: "<p>Retrieves the details of an account.</p>"
      operationId: GetAccount
      parameters:
      - description: Specifies which fields in the response should be expanded.
        explode: true
        in: query
        name: expand
        required: false
        schema:
          items:
            maxLength: 5000
            type: string
          type: array
        style: deepObject
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/account"
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
          description: Error response.
    post:
      description: |-
        <p>Updates a connected <a href="/docs/connect/accounts">Express or Custom account</a> by setting the values of the parameters passed. Any parameters not provided are left unchanged. Most parameters can be changed only for Custom accounts. (These are marked <strong>Custom Only</strong> below.) Parameters marked <strong>Custom and Express</strong> are supported by both account types.</p>

        <p>To update your own account, use the <a href="https://dashboard.nexter.io/account">Dashboard</a>. Refer to our <a href="/docs/connect/updating-accounts">Connect</a> documentation to learn more about updating accounts.</p>
      operationId: PostAccount
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding:
              bank_account:
                explode: true
                style: deepObject
              business_profile:
                explode: true
                style: deepObject
              company:
                explode: true
                style: deepObject
              expand:
                explode: true
                style: deepObject
              individual:
                explode: true
                style: deepObject
              metadata:
                explode: true
                style: deepObject
              requested_capabilities:
                explode: true
                style: deepObject
              settings:
                explode: true
                style: deepObject
              tos_acceptance:
                explode: true
                style: deepObject
            schema:
              additionalProperties: false
              properties:
                account_token:
                  description: An [account token](https://nexter.io/docs/api#create_account_token),
                    used to securely provide details to the account.
                  maxLength: 5000
                  type: string
                bank_account:
                  anyOf:
                  - properties:
                      account_holder_name:
                        maxLength: 5000
                        type: string
                      account_holder_type:
                        enum:
                        - company
                        - individual
                        maxLength: 5000
                        type: string
                      account_number:
                        maxLength: 5000
                        type: string
                      country:
                        maxLength: 5000
                        type: string
                      currency:
                        type: string
                      object:
                        enum:
                        - bank_account
                        maxLength: 5000
                        type: string
                      routing_number:
                        maxLength: 5000
                        type: string
                    required:
                    - account_number
                    - country
                    title: external_account_payout_bank_account
                    type: object
                  - maxLength: 5000
                    type: string
                  description: Either a token, like the ones returned by [Nexter.js](https://nexter.io/docs/nexter.js),
                    or a dictionary containing a user's bank account details.
                business_profile:
                  description: Non-essential business information about the account
                  properties:
                    mcc:
                      maxLength: 4
                      type: string
                    name:
                      maxLength: 5000
                      type: string
                    product_description:
                      maxLength: 40000
                      type: string
                    support_email:
                      type: string
                    support_phone:
                      maxLength: 5000
                      type: string
                    support_url:
                      type: string
                    url:
                      maxLength: 5000
                      type: string
                  title: business_profile_specs
                  type: object
                business_type:
                  description: The business type. Can be `individual` or `company`.
                  maxLength: 5000
                  type: string
                company:
                  description: Information about the company or business. This field
                    is null unless `business_type` is set to `company`.
                  properties:
                    address:
                      properties:
                        city:
                          maxLength: 100
                          type: string
                        country:
                          maxLength: 5000
                          type: string
                        line1:
                          maxLength: 200
                          type: string
                        line2:
                          maxLength: 200
                          type: string
                        postal_code:
                          maxLength: 5000
                          type: string
                        state:
                          maxLength: 5000
                          type: string
                      title: address_specs
                      type: object
                    address_kana:
                      properties:
                        city:
                          maxLength: 5000
                          type: string
                        country:
                          maxLength: 5000
                          type: string
                        line1:
                          maxLength: 5000
                          type: string
                        line2:
                          maxLength: 5000
                          type: string
                        postal_code:
                          maxLength: 5000
                          type: string
                        state:
                          maxLength: 5000
                          type: string
                        town:
                          maxLength: 5000
                          type: string
                      title: japan_address_kana_specs
                      type: object
                    address_kanji:
                      properties:
                        city:
                          maxLength: 5000
                          type: string
                        country:
                          maxLength: 5000
                          type: string
                        line1:
                          maxLength: 5000
                          type: string
                        line2:
                          maxLength: 5000
                          type: string
                        postal_code:
                          maxLength: 5000
                          type: string
                        state:
                          maxLength: 5000
                          type: string
                        town:
                          maxLength: 5000
                          type: string
                      title: japan_address_kanji_specs
                      type: object
                    directors_provided:
                      type: boolean
                    name:
                      maxLength: 100
                      type: string
                    name_kana:
                      maxLength: 100
                      type: string
                    name_kanji:
                      maxLength: 100
                      type: string
                    owners_provided:
                      type: boolean
                    phone:
                      maxLength: 5000
                      type: string
                    tax_id:
                      maxLength: 5000
                      type: string
                    tax_id_registrar:
                      maxLength: 5000
                      type: string
                    vat_id:
                      maxLength: 5000
                      type: string
                  title: company_specs
                  type: object
                default_currency:
                  description: Three-letter ISO currency code representing the default
                    currency for the account. This must be a currency that [Nexter
                    supports in the account's country](https://nexter.io/docs/payouts).
                  type: string
                email:
                  description: Email address of the account representative. For Standard
                    accounts, this is used to ask them to claim their Nexter account.
                    For Custom accounts, this only makes the account easier to identify
                    to platforms; Nexter does not email the account representative.
                  type: string
                expand:
                  description: Specifies which fields in the response should be expanded.
                  items:
                    maxLength: 5000
                    type: string
                  type: array
                external_account:
                  description: A card or bank account to attach to the account. You
                    can provide either a token, like the ones returned by [Nexter.js](https://nexter.io/docs/nexter.js),
                    or a dictionary, as documented in the `external_account` parameter
                    for [bank account](https://nexter.io/docs/api#account_create_bank_account)
                    creation. <br><br>By default, providing an external account sets
                    it as the new default external account for its currency, and deletes
                    the old default if one exists. To add additional external accounts
                    without replacing the existing default for the currency, use the
                    bank account or card creation API.
                  maxLength: 5000
                  type: string
                  x-nexterBypassValidation: true
                individual:
                  description: Information about the person represented by the account.
                    This field is null unless `business_type` is set to `individual`.
                  properties:
                    address:
                      properties:
                        city:
                          maxLength: 100
                          type: string
                        country:
                          maxLength: 5000
                          type: string
                        line1:
                          maxLength: 200
                          type: string
                        line2:
                          maxLength: 200
                          type: string
                        postal_code:
                          maxLength: 5000
                          type: string
                        state:
                          maxLength: 5000
                          type: string
                      title: address_specs
                      type: object
                    address_kana:
                      properties:
                        city:
                          maxLength: 5000
                          type: string
                        country:
                          maxLength: 5000
                          type: string
                        line1:
                          maxLength: 5000
                          type: string
                        line2:
                          maxLength: 5000
                          type: string
                        postal_code:
                          maxLength: 5000
                          type: string
                        state:
                          maxLength: 5000
                          type: string
                        town:
                          maxLength: 5000
                          type: string
                      title: japan_address_kana_specs
                      type: object
                    address_kanji:
                      properties:
                        city:
                          maxLength: 5000
                          type: string
                        country:
                          maxLength: 5000
                          type: string
                        line1:
                          maxLength: 5000
                          type: string
                        line2:
                          maxLength: 5000
                          type: string
                        postal_code:
                          maxLength: 5000
                          type: string
                        state:
                          maxLength: 5000
                          type: string
                        town:
                          maxLength: 5000
                          type: string
                      title: japan_address_kanji_specs
                      type: object
                    dob:
                      properties:
                        day:
                          type: integer
                        month:
                          type: integer
                        year:
                          type: integer
                      required:
                      - day
                      - month
                      - year
                      title: date_of_birth_specs
                      type: object
                    email:
                      type: string
                    first_name:
                      maxLength: 100
                      type: string
                    first_name_kana:
                      maxLength: 5000
                      type: string
                    first_name_kanji:
                      maxLength: 5000
                      type: string
                    gender:
                      maxLength: 5000
                      type: string
                    id_number:
                      maxLength: 5000
                      type: string
                    last_name:
                      maxLength: 100
                      type: string
                    last_name_kana:
                      maxLength: 5000
                      type: string
                    last_name_kanji:
                      maxLength: 5000
                      type: string
                    maiden_name:
                      maxLength: 5000
                      type: string
                    metadata:
                      additionalProperties:
                        type: string
                      type: object
                    phone:
                      type: string
                    ssn_last_4:
                      maxLength: 5000
                      type: string
                    verification:
                      properties:
                        document:
                          properties:
                            back:
                              maxLength: 500
                              type: string
                            front:
                              maxLength: 500
                              type: string
                          title: person_verification_document_specs
                          type: object
                      title: person_verification_specs
                      type: object
                  title: individual_specs
                  type: object
                metadata:
                  additionalProperties:
                    type: string
                  description: A set of key-value pairs that you can attach to an
                    `Account` object. This can be useful for storing additional information
                    about the account in a structured format.
                  type: object
                requested_capabilities:
                  description: The set of capabilities you want to unlock for this
                    account (US only). Each capability will be inactive until you
                    have provided its specific requirements and Nexter has verified
                    them. An account may have some of its requested capabilities be
                    active and some be inactive.
                  items:
                    enum:
                    - card_issuing
                    - card_payments
                    - platform_payments
                    maxLength: 5000
                    type: string
                  type: array
                settings:
                  description: Options for customizing how the account functions within
                    Nexter.
                  properties:
                    branding:
                      properties:
                        icon:
                          maxLength: 5000
                          type: string
                        logo:
                          maxLength: 5000
                          type: string
                        primary_color:
                          maxLength: 5000
                          type: string
                      title: branding_settings_specs
                      type: object
                    card_payments:
                      properties:
                        decline_on:
                          properties:
                            avs_failure:
                              type: boolean
                            cvc_failure:
                              type: boolean
                          title: decline_charge_on_specs
                          type: object
                        statement_descriptor_prefix:
                          maxLength: 10
                          type: string
                      title: card_payments_settings_specs
                      type: object
                    payments:
                      properties:
                        statement_descriptor:
                          maxLength: 22
                          type: string
                      title: payments_settings_specs
                      type: object
                    payouts:
                      properties:
                        debit_negative_balances:
                          type: boolean
                        schedule:
                          properties:
                            delay_days:
                              anyOf:
                              - enum:
                                - minimum
                                maxLength: 5000
                                type: string
                              - type: integer
                            interval:
                              enum:
                              - daily
                              - manual
                              - monthly
                              - weekly
                              maxLength: 5000
                              type: string
                            monthly_anchor:
                              type: integer
                            weekly_anchor:
                              enum:
                              - friday
                              - monday
                              - saturday
                              - sunday
                              - thursday
                              - tuesday
                              - wednesday
                              maxLength: 5000
                              type: string
                          title: transfer_schedule_specs
                          type: object
                        statement_descriptor:
                          maxLength: 22
                          type: string
                      title: payout_settings_specs
                      type: object
                  title: settings_specs
                  type: object
                tos_acceptance:
                  description: Details on the account's acceptance of the [Nexter
                    Services Agreement](https://nexter.io/docs/connect/updating-accounts#tos-acceptance).
                  properties:
                    date:
                      format: unix-time
                      type: integer
                    ip:
                      type: string
                    user_agent:
                      maxLength: 5000
                      type: string
                  required:
                  - date
                  - ip
                  title: tos_acceptance_specs
                  type: object
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/account"
          description: Successful response.
        default:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
          description: Error response.
security:
- basicAuth: []
- bearerAuth: []
servers:
- url: https://api.nexter.io/
